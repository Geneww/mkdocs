{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"Text Only<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"BERT/","title":"BERT","text":"<p>BERT</p> <p>bidirectional encoder representations from transformer </p> <p>\u53cc\u5411</p> <p>mask</p> <p>\u5b8c\u5f62\u586b\u7a7a</p> <p>\u9884\u8bad\u7ec3 \u5fae\u8c03</p> <p>30k x H + L x H x H x 12</p> <p>23040k+84934656</p> <p>H=768</p> <p>L=12</p>"},{"location":"DETR%E6%A2%B3%E7%90%86/","title":"DETR\u68b3\u7406","text":"<p>DETR\u8bba\u6587\u539f\u6587 detr\u662f\u4e00\u4e2a\u5168\u65b0\u7684\u76ee\u6807\u68c0\u6d4b\u67b6\u6784\uff0c\u89e3\u51b3\u4e86\u7aef\u5230\u7aef\u7684\u95ee\u9898\uff0c\u4f7f\u7528\u4e86Transformer\u67b6\u6784</p> <p>\u65e0\u8bba\u662fproposal based\u65b9\u6cd5\u3001anchor based\u65b9\u6cd5\u3001non-anchor based\u65b9\u6cd5\uff0c\u6700\u540e\u90fd\u4f1a\u751f\u6210\u5f88\u591a\u9884\u6d4b\u6846\uff0c\u5982\u4f55\u53bb\u9664\u8fd9\u4e9b\u5197\u4f59\u7684\u6846\u5c31\u662fNMS\u8981\u505a\u7684\u4e8b\u60c5</p> <p>\u8d21\u732e\uff1a</p> <p>1\u3001\u628a\u76ee\u6807\u68c0\u6d4b\u505a\u6210\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u6846\u67b6\uff0c</p> <p>\u628a\u4e4b\u524d\u7279\u522b\u4f9d\u8d56\u4eba\u7684\u5148\u9a8c\u77e5\u8bc6\u7684\u90e8\u5206\u5220\u6389\u4e86\uff08NMS\u90e8\u5206\u3001anchor\uff09\uff0c\u4e00\u65e6\u628a\u8fd9\u4e24\u4e2a\u90e8\u5206\u62ff\u6389\u4e4b\u540e\uff0c\u6211\u4eec\u4e5f\u4e0d\u7528\u8d39\u5c3d\u5fc3\u601d\u8bbe\u8ba1\u8fd9\u79cdanchor\uff0c\u6700\u540e\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u4e48\u591a\u6846\uff0c\u4e0d\u4f1a\u7528\u5230NMS\uff0c\u4e5f\u4e0d\u4f1a\u7528\u5230\u5f88\u591a\u8d85\u53c2\u53bb\u8c03</p> <p>detr\u63d0\u51fa\uff1a</p> <p>2\u3001\u65b0\u7684\u76ee\u6807\u51fd\u6570\uff0c\u901a\u8fc7\u4e8c\u5206\u56fe\u5339\u914d\u7684\u65b9\u5f0f\uff0c\u5f3a\u5236\u6a21\u578b\u8f93\u51fa\u4e00\u7ec4\u72ec\u4e00\u65e0\u4e8c\u7684\u9884\u6d4b\uff08\u6ca1\u6709\u90a3\u4e48\u591a\u5197\u4f59\u6846\uff0c\u6bcf\u4e2a\u7269\u4f53\u7406\u60f3\u72b6\u6001\u4e0b\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a\u6846\uff09</p> <p>3\u3001\u4f7f\u7528encoder-decoder\u7684\u67b6\u6784 </p> <p>\u4e24\u4e2a\u5c0f\u8d21\u732e\uff1a</p> <p>1\u3001decoder\u8fd8\u6709\u53e6\u5916\u4e00\u4e2a\u8f93\u5165learned object query\uff0c\u7c7b\u4f3canchor\u7684\u610f\u601d</p> <p>\uff08\u7ed9\u5b9a\u8fd9\u4e9bobject query\u4e4b\u540e\uff0cdetr\u5c31\u53ef\u4ee5\u628alearned object query\u548c\u5168\u5c40\u56fe\u50cf\u4fe1\u606f\u7ed3\u5408\u4e00\u8d77\uff0c\u901a\u8fc7\u4e0d\u540c\u7684\u505a\u6ce8\u610f\u529b\u64cd\u4f5c\uff0c\u4ece\u800c\u8ba9\u6a21\u578b\u76f4\u63a5\u8f93\u51fa\u6700\u540e\u7684\u4e00\u7ec4\u9884\u6d4b\u6846\uff09</p> <p>2\u3001\u60f3\u6cd5&amp;&amp;\u5b9e\u6548\u6027\uff1a\u5e76\u884c\u6bd4\u4e32\u884c\u66f4\u5408\u9002\uff0c\u5e76\u4e0d\u662f\u68c0\u6d4b\u4e00\u4e2a\u5927\u7269\u4f53\u524d\u5fc5\u987b\u5148\u68c0\u6d4b\u4e00\u4e2a\u5c0f\u7269\u4f53\uff0c\u6216\u4ece\u5de6\u5230\u53f3\u68c0\u6d4b\uff0c\u6211\u4eec\u5e0c\u671b\u8d8a\u5feb\u8d8a\u597d</p> <p>DETR\u7684\u597d\u5904\uff1a</p> <p>1\u3001\u7b80\u5355\u6027\uff1a\u60f3\u6cd5\u4e0a\u7b80\u5355\uff0c\u4e0d\u9700\u8981\u4e00\u4e2a\u7279\u6b8a\u7684library\uff0c\u53ea\u8981\u786c\u4ef6\u652f\u6301transformer\u6216CNN\uff0c\u5c31\u4e00\u5b9a\u652f\u6301detr</p> <p>2\u3001\u6027\u80fd\uff1a\u5728coco\u6570\u636e\u96c6\u4e0a\uff0cdetr\u548c\u4e00\u4e2a\u8bad\u7ec3\u975e\u5e38\u597d\u7684faster RCNN\u57fa\u7ebf\u7f51\u7edc\u53d6\u5f97\u4e86\u5dee\u4e0d\u591a\u7684\u6548\u679c\uff0c\u6a21\u578b\u5185\u5b58\u548c\u901f\u5ea6\u4e5f\u548cfaster RCNN\u5dee\u4e0d\u591a</p> <p>3\u3001\u60f3\u6cd5\u597d\uff0c\u89e3\u51b3\u4e86\u76ee\u6807\u68c0\u6d4b\u9886\u57df\u5f88\u591a\u75db\u70b9\uff0c\u5199\u4f5c\u597d</p> <p>4\u3001\u522b\u7684\u4efb\u52a1\uff1a\u5168\u666f\u5206\u5272\u4efb\u52a1\u4e0adetr\u6548\u679c\u5f88\u597d\uff0cdetr\u80fd\u591f\u975e\u5e38\u7b80\u5355\u62d3\u5c55\u5230\u5176\u4ed6\u4efb\u52a1\u4e0a</p> <p>https://image.iokko.cn/file/470817a4055f74637eccd.png</p>"},{"location":"MAE%E6%A2%B3%E7%90%86/","title":"MAE\u68b3\u7406","text":"<p>Masked Autoencoders Are Scalable Vision Learners\u8bba\u6587\u539f\u6587 MAE\uff1a</p> <p>BERT \u7684\u4e00\u4e2a CV \u7684\u7248\u672c \u57fa\u4e8e ViT \uff0cBERT\u5316 \u628a\u6574\u4e2a\u8bad\u7ec3 \u62d3\u5c55\u5230\u6ca1\u6709\u6807\u53f7\u7684\u6570\u636e\u4e0a\u9762 \u901a\u8fc7\u5b8c\u578b\u586b\u7a7a\u6765\u83b7\u53d6\u56fe\u7247\u7684\u4e00\u4e2a\u7406\u89e3 \u4e0d\u662f\u7b2c\u4e00\u4e2a\u5c06 BERT \u62d3\u5c55\u5230 CV \u4e0a MAE \u5f88\u6709\u53ef\u80fd \u672a\u6765\u5f71\u54cd\u6700\u5927 BERT \u52a0\u901f\u4e86 Transformer \u67b6\u6784 \u5728 NLP \u7684\u5e94\u7528 MAE \u52a0\u901f Transformer \u5728 CV \u4e0a\u7684\u5e94\u7528</p> <p></p>"},{"location":"MAE%E6%A2%B3%E7%90%86/#mae_1","title":"MAE \u7684\u6a21\u578b\u67b6\u6784","text":"<p>\u9884\u8bad\u7ec3\u6d41\u7a0b\uff1ainput \u2192 patches \u2192 masked \u2192 unmasked patches in encoder \u2192 unmasked + masked \u6309\u4f4d\u7f6e\u6392\u5217 \u8fdb decoder \u2192 decoder \u91cd\u6784 masked patches \u7684\u50cf\u7d20</p> <p>patches + masked\uff1a\u4e00\u5f20\u7ea2\u8272\u9e1f\u56fe\u7247\u8fdb\u6765\uff0c\u5207\u6210 patches\uff0cmasked \u5757 (\u00be) \u662f \u7070\u8272\u7684\u3002 unmasked patches\uff0cencoder\uff1a\u6ca1\u6709 masked (1 / 4) \u7684\u5757 \u8fdb\u5165 encoder (ViT)\uff0c\u5f97\u5230\u6bcf\u4e00\u5757\u7684\u7279\u5f81\uff08\u84dd\u8272\uff09\u3002 encoder \u7684\u8f93\u51fa \u548c masked tokens \u6309\u7167\u5728\u56fe\u7247\u4e2d\u7684\u539f\u59cb\u4f4d\u7f6e\u6392\u5217\u6210\u4e00\u957f\u6761\u5411\u91cf \uff08\u5305\u542b\u4f4d\u7f6e\u4fe1\u606f\uff09\u3002 \u957f\u6761\u5411\u91cf \u8fdb\u5165 decoder\uff0c\u89e3\u7801\u5668\u5c1d\u8bd5\u91cd\u6784\u7f3a\u5931\u7684\u50cf\u7d20\u4fe1\u606f\uff0c\u8fd8\u539f\u539f\u59cb\u56fe\u7247</p>"},{"location":"MAE%E6%A2%B3%E7%90%86/#mae_2","title":"MAE\u4ee3\u7801","text":"Python<pre><code>import torch\nimport torch.nn as nn\n\n# local files\nfrom transformer.transformer import TransformerEncoderLayer, TransformerEncoder\n\n\nclass PatchEmbedding(nn.Module):\n    \"\"\"\u4f7f\u7528\u5377\u79ef\u4ee3\u66ff\u5207\u7247\"\"\"\n\n    def __init__(self, images_size=(224, 224, 3), embedding_dim=768, patch_size=16, dropout=0.1):\n        super(PatchEmbedding, self).__init__()\n        height, weight, in_channels = images_size\n        assert height % patch_size == 0 and weight % patch_size == 0, 'Image dimensions must be divisible by the patch size.'\n        num_patcher = (height // patch_size) * (weight // patch_size)\n        self.patcher = nn.Conv2d(in_channels=in_channels, out_channels=embedding_dim,\n                                 kernel_size=(patch_size, patch_size), stride=(patch_size, patch_size))\n        self.cls_token = nn.Parameter(torch.rand(size=(1, 1, embedding_dim)), requires_grad=True)\n        # patch * patch + 1 (cls token)\n        self.position_embedding = nn.Parameter(torch.rand(size=(1, num_patcher + 1, embedding_dim)), requires_grad=True)\n        self.dropout = nn.Dropout(p=dropout)\n\n    def forward(self, x):\n        \"\"\"\n        :param x: [n, c, h, w] tensor\n        :return: [batch, 197, 768] tensor\n        \"\"\"\n\n        cls_token = self.cls_token.expand(x.shape[0], -1, -1)  # [1, 1, 768] -&gt; [batch, 1, 768]\n        x = self.patcher(x)  # [batch, 768, 14, 14]\n        x = x.view(x.shape[0], x.shape[1], -1).permute(0, 2,\n                                                       1)  # [batch, 768, 14, 14] -&gt; [batch, 768, 196] -&gt; [batch, 196, 768]\n\n        x = torch.cat([x, cls_token], dim=1)  # [64, 197, 768]\n        x += self.position_embedding\n        x = self.dropout(x)\n        return x\n\n\nclass MLP(nn.Module):\n    def __init__(self, embedding_dim: int = 768):\n        super(MLP, self).__init__()\n        self.layer_norm = nn.LayerNorm(normalized_shape=embedding_dim)\n        self.linear = nn.Linear(in_features=embedding_dim, out_features=embedding_dim)\n\n    def forward(self, x):\n        return self.linear(self.layer_norm(x))\n\n\nclass MaskAutoEncoder(nn.Module):\n    def __init__(self, img_size=(224, 224, 3), patch_size=16,\n                 embedding_dim=1024, encoder_num=24, num_heads=16, masking_ratio=0.75,\n                 decoder_embedding_dim=512, decoder_number=8, decoder_num_heads=16):\n        super(MaskAutoEncoder, self).__init__()\n        assert masking_ratio &gt; 0 and masking_ratio &lt; 1, 'masking ratio must be kept between 0 and 1'\n        self.patch_size = patch_size\n        self.masking_ratio = masking_ratio\n        # mae patcher\n        height, weight, in_channels = img_size\n        assert height % patch_size == 0 and weight % patch_size == 0, 'Image dimensions must be divisible by the patch size.'\n        self.patcher = nn.Conv2d(in_channels=in_channels, out_channels=embedding_dim,\n                                 kernel_size=(patch_size, patch_size), stride=(patch_size, patch_size))\n        self.num_patch = (height // patch_size) * (weight // patch_size)\n\n        # mae encoder\n        self.cls_token = nn.Parameter(torch.zeros(1, 1, embedding_dim))\n        self.pos_embedding = nn.Parameter(torch.zeros(1, self.num_patch + 1, embedding_dim), requires_grad=False)\n        encoder_layer = TransformerEncoderLayer(d_model=embedding_dim, n_head=num_heads)\n        self.encoder = TransformerEncoder(encoder_layer, num_layers=encoder_num)\n        self.encoder_mlp = MLP(embedding_dim=embedding_dim)\n\n        # mae decoder\n        self.decoder_embedding = nn.Linear(embedding_dim, decoder_embedding_dim, bias=True)\n        self.mask_cls_token = nn.Parameter(torch.zeros(1, 1, decoder_embedding_dim))\n        self.decoder_pos_embedding = nn.Parameter(torch.zeros(1, self.num_patch + 1, decoder_embedding_dim),\n                                                  requires_grad=False)\n        decoder_layer = TransformerEncoderLayer(d_model=decoder_embedding_dim, n_head=decoder_num_heads)\n        self.decoder = TransformerEncoder(decoder_layer, num_layers=decoder_number)\n        self.decoder_mlp = MLP(embedding_dim=decoder_embedding_dim)\n\n        self.decoder_pred = nn.Linear(decoder_embedding_dim, patch_size ** 2 * in_channels,\n                                      bias=True)  # decoder to patch\n\n    def random_mask(self, x, mask_ratio):\n        batch, length, dim = x.shape  # batch, length, dim\n        len_keep = int(length * (1 - mask_ratio))\n\n        noise = torch.rand(batch, length)  # [batch, length]\n\n        # sort noise for each sample\n        ids_shuffle = torch.argsort(noise, dim=1)  # ascend: small is keep, large is remove\n        ids_restore = torch.argsort(ids_shuffle, dim=1)\n\n        # keep the first subset\n        ids_keep = ids_shuffle[:, :len_keep]\n        x_masked = torch.gather(x, dim=1, index=ids_keep.unsqueeze(-1).repeat(1, 1, dim))\n\n        # generate the binary mask: 0 is keep, 1 is remove\n        mask = torch.ones([batch, length])\n        mask[:, :len_keep] = 0\n        # unshuffle to get the binary mask\n        mask = torch.gather(mask, dim=1, index=ids_restore)\n        return x_masked, mask, ids_restore\n\n    def patch_image(self, images):\n        \"\"\" images: n c h w\"\"\"\n        p = self.patch_size\n        assert images.shape[2] == images.shape[3] and images.shape[2] % p == 0\n        batch = images.shape[0]\n        c = images.shape[1]\n        h = w = images.shape[2] // p\n        x = images.reshape(shape=(batch, c, h, p, w, p))  # [batch, 3, 224, 224] -&gt; [batch, 3, 14, 16, 14, 16]\n        x = torch.einsum('nchpwq-&gt;nhwpqc', x)  # [batch, 14, 14, 16, 16, 3]\n        x = x.reshape((batch, h * w, p ** 2 * c))  # [batch, 196, 768]\n        return x\n\n    def cal_loss(self, images, pred, mask):\n        \"\"\"mse loss\"\"\"\n        target = self.patch_image(images)\n\n        loss = (pred - target) ** 2\n        loss = loss.mean(dim=-1)\n        loss = (loss * mask).sum() / mask.sum()  # mean loss on removed patches\n        return loss\n\n    def forward(self, x):\n        images = x\n        # patch image\n        x = self.patcher(x)  # [batch, 1024, 14, 14]\n        x = x.view(x.shape[0], x.shape[1], -1).permute(0, 2,\n                                                       1)  # [batch, 1024, 14, 14] -&gt; [batch, 1024, 196] -&gt; [batch, 196, 1024]\n        # add pos embedding\n        x = x + self.pos_embedding[:, :-1, :]\n        # mask\n        x, mask, ids_restore = self.random_mask(x, self.masking_ratio)  # [batch, 49, 1024]\n        # # \u7edf\u8ba1\u5f20\u91cf\u4e2d\u503c\u4e3a 0 \u7684\u5143\u7d20\u4e2a\u6570\n        # num_zeros = torch.sum(mask == 0).item()\n        # # \u8ba1\u7b97\u503c\u4e3a 0 \u7684\u5143\u7d20\u6240\u5360\u6bd4\u4f8b\n        # zero_ratio = num_zeros / mask.numel()\n        # print(\"Value 0 appears in the tensor with a ratio of:\", zero_ratio)\n\n        # add cls token\n        cls_token = self.cls_token + self.pos_embedding[:, -1:, :]\n        cls_token = cls_token.expand(x.shape[0], -1, -1)  # [batch, 1, 1024]\n        x = torch.cat((cls_token, x), dim=1)  # [batch, 49+1, 1024]\n        x = self.encoder(x)\n        x = self.encoder_mlp(x)  # encode out [batch, sql_len, 1024]\n\n        # decoder\n        x = self.decoder_embedding(x)  # [batch, sql_len, 512]\n        mask_tokens = self.mask_cls_token.repeat(x.shape[0], int(self.num_patch * self.masking_ratio),\n                                                 1)  # [batch, 196*0.75, 512]\n        x_ = torch.cat([x[:, :-1, :], mask_tokens], dim=1)  # no cls token [batch, 50-1+147, 512]\n        x_ = torch.gather(x_, dim=1, index=ids_restore.unsqueeze(-1).repeat(1, 1, x.shape[2]))  # un shuffle\n        x = torch.cat([x[:, -1:, :], x_], dim=1)  # append cls token\n\n        # add pos embed\n        x = x + self.decoder_pos_embedding\n        # encoder out + mask\n        x = self.decoder(x)\n        x = self.decoder_mlp(x)\n        x = self.decoder_pred(x)\n        # remove cls token\n        x = x[:, :-1, :]\n        loss = self.cal_loss(images, x, mask)\n        return loss, x, mask\n</code></pre>"},{"location":"Transformer%E6%A2%B3%E7%90%86/","title":"Transformer\u68b3\u7406","text":"<p>\u8bba\u6587\u539f\u6587 Transformer \u5f00\u521b\u4e86\u7ee7 MLP \u3001CNN\u548c RN \u4e4b\u540e\u7684\u7b2c\u56db\u5927\u7c7b\u6a21\u578b\u3002 \u5e38\u89c1\u7684\u65f6\u95f4\u5e8f\u5217\u4efb\u52a1\u91c7\u7528\u7684\u6a21\u578b\u901a\u5e38\u90fd\u662fRNN\u7cfb\u5217\uff0c\u7136\u800cRNN\u7cfb\u5217\u6a21\u578b\u7684\u987a\u5e8f\u8ba1\u7b97\u65b9\u5f0f\u5e26\u6765\u4e86\u4e24\u4e2a\u95ee\u9898</p> <ol> <li>\u67d0\u4e2a\u65f6\u95f4\u72b6\u6001\\(h_t\\)\uff0c\u4f9d\u8d56\u4e8e\u4e0a\u4e00\u65f6\u95f4\u6b65\u72b6\u6001\\(h_{t-1}\\)\uff0c\u5bfc\u81f4\u6a21\u578b\u4e0d\u80fd\u901a\u8fc7\u5e76\u884c\u8ba1\u7b97\u6765\u52a0\u901f</li> <li>RNN\u7cfb\u5217\u7684\u9b54\u6539\u6a21\u578b\u6bd4\u5982GRU, LSTM\uff0c\u867d\u7136\u5f15\u5165\u4e86\u95e8\u673a\u5236(gate)\uff0c\u4f46\u662f\u5bf9\u957f\u65f6\u95f4\u4f9d\u8d56\u7684\u95ee\u9898\u7f13\u89e3\u80fd\u529b\u6709\u9650\uff0c\u4e0d\u80fd\u5f7b\u5e95\u89e3\u51b3</li> </ol> <p>\u56e0\u6b64\u6211\u4eec\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5168\u65b0\u7684\u7ed3\u6784Transformer\uff0c\u901a\u8fc7Attention\u6ce8\u610f\u529b\u673a\u5236\uff0c\u6765\u5bf9\u65f6\u95f4\u5e8f\u5217\u66f4\u597d\u7684\u5efa\u6a21\u3002\u540c\u65f6\u6211\u4eec\u4e0d\u9700\u8981\u50cfRNN\u90a3\u6837\u987a\u5e8f\u8ba1\u7b97\uff0c\u4ece\u800c\u80fd\u8ba9\u6a21\u578b\u66f4\u80fd\u5145\u5206\u53d1\u6325\u5e76\u884c\u8ba1\u7b97\u6027\u80fd\u3002</p> <p></p>"},{"location":"Transformer%E6%A2%B3%E7%90%86/#transformer-encoder-decoder","title":"Transformer \u4f7f\u7528encoder-decoder\u67b6\u6784","text":""},{"location":"Transformer%E6%A2%B3%E7%90%86/#scaleddotproductattention","title":"ScaledDotProductAttention","text":"\\[ Attention(Q, K, V) = softmax(\\frac{QK^T}{\\sqrt{d_k}})V \\] <ul> <li>Q \u4ee3\u8868 Query \u77e9\u9635</li> <li>K \u4ee3\u8868 Key \u77e9\u9635</li> <li>V \u4ee3\u8868 Value \u77e9\u9635</li> <li>dk \u662f\u4e00\u4e2a\u7f29\u653e\u56e0\u5b50</li> </ul> Python<pre><code>class ScaledDotProductAttention(nn.Module):\n    def __init__(self, dropout=0.1):\n        super(ScaledDotProductAttention, self).__init__()\n        self.softmax = nn.Softmax(dim=-1)\n        self.dropout = nn.Dropout(dropout)\n\n    @staticmethod\n    def get_attention_mask(seq):\n        \"\"\"seq: [batch_size, tgt_len]\"\"\"\n        # batch_size\u4e2a tgt_len * tgt_len\u7684mask\u77e9\u9635\n        # attn_shape = [seq.size(0), seq.size(1), seq.size(2)]\n        attn_shape = seq.shape\n        # np.triu \u662f\u751f\u6210\u4e00\u4e2a upper triangular matrix \u4e0a\u4e09\u89d2\u77e9\u9635\uff0ck\u662f\u76f8\u5bf9\u4e8e\u4e3b\u5bf9\u89d2\u7ebf\u7684\u504f\u79fb\u91cf\n        # k=1\u610f\u4e3a\u4e0d\u5305\u542b\u4e3b\u5bf9\u89d2\u7ebf\uff08\u4ece\u4e3b\u5bf9\u89d2\u7ebf\u5411\u4e0a\u504f\u79fb1\u5f00\u59cb\uff09\n        subsequence_mask = np.triu(np.ones(attn_shape), k=1)\n        subsequence_mask = torch.from_numpy(subsequence_mask).byte()  # \u56e0\u4e3a\u53ea\u67090\u30011\u6240\u4ee5\u7528byte\u8282\u7701\u5185\u5b58\n        return subsequence_mask == 1  # return: [batch_size, n_head, tgt_len, tgt_len]\n\n    def forward(self, q, k, v, mask=False):\n        # scores = q @ k / np.sqrt(d_k)\n        scores = torch.matmul(q, k.transpose(-1, -2)) / np.sqrt(q.shape[-1])  # [batch, n_head, len_q, len_k]\n        if mask:\n            # \u751f\u6210mask\u63a9\u7801\n            attention_mask = self.get_attention_mask(scores)\n            scores.masked_fill_(attention_mask, -1e9)\n        return torch.matmul(self.dropout(self.softmax(scores)), v)\n</code></pre>"},{"location":"Transformer%E6%A2%B3%E7%90%86/#multiheadattention","title":"MultiHeadAttention","text":"Python<pre><code>class MultiHeadAttention(nn.Module):\n    def __init__(self, num_hidden=512, n_head=8, dropout=0.1, bias=False):\n        super(MultiHeadAttention, self).__init__()\n        self.num_hidden = num_hidden\n        self.num_head = n_head\n        self.q_mat = nn.Linear(num_hidden, num_hidden, bias=bias)\n        self.k_mat = nn.Linear(num_hidden, num_hidden, bias=bias)\n        self.v_mat = nn.Linear(num_hidden, num_hidden, bias=bias)\n        self.concat_mat = nn.Linear(num_hidden, num_hidden, bias=bias)\n        self.attention = ScaledDotProductAttention(dropout)\n\n    def forward(self, queries, keys, values, mask=False):\n        # \u5206\u591a\u4e2a\u5934  [batch, seq_len, hidden_size] -&gt; [batch, seq_len, head_size, d_k] -&gt; [batch, head_size, seq_len, d_k]\n        d_k = self.num_hidden // self.num_head\n        q = self.q_mat(queries).view(queries.size(0), -1, self.num_head, d_k).transpose(1, 2)\n        k = self.k_mat(keys).view(keys.size(0), -1, self.num_head, d_k).transpose(1, 2)\n        v = self.v_mat(values).view(values.size(0), -1, self.num_head, d_k).transpose(1, 2)\n        out = self.attention(q, k, v, mask)\n        out = out.view(out.shape[0], -1, self.num_hidden)\n        out = self.concat_mat(out)\n        return out  # output: [batch_size, len_q, hidden_size]\n</code></pre>"},{"location":"Transformer%E6%A2%B3%E7%90%86/#layernorm","title":"LayerNorm","text":"<ul> <li>\u8fd9\u91cc\u4e3b\u8981\u7684\u95ee\u9898\u662f\u5728\u7b97\u5747\u503c\u548c\u65b9\u5dee\u4e0a\u9762\uff0c\u5bf9\u4e8ebatchnorm\u6765\u8bf4\uff0c\u4f1a\u5bf9\u4e0a\u56fe\u4e2d\u5207\u51fa\u6765\u7684\u9636\u68af\u5f62\u7684\u90e8\u5206\u8fdb\u884c\u6c42\u89e3\uff08\u53ea\u6709\u8fd9\u90e8\u5206\u662f\u6709\u6548\u503c\uff0c\u5176\u4ed6\u5730\u65b9\u56e0\u4e3a\u662f\u8865\u96f6\uff0c\u6240\u4ee5\u5176\u5b9e\u6ca1\u6709\u592a\u591a\u4f5c\u7528\uff09\uff0c\u5982\u679c\u6837\u672c\u957f\u5ea6\u53d8\u5316\u6bd4\u8f83\u5927\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u505a\u5c0f\u6279\u91cf\u7684\u65f6\u5019\uff0c\u7b97\u51fa\u6765\u7684\u5747\u503c\u548c\u65b9\u5dee\u7684\u6296\u52a8\u76f8\u5bf9\u6765\u8bf4\u662f\u6bd4\u8f83\u5927\u7684</li> <li>\u53e6\u5916\uff0c\u5728\u505a\u9884\u6d4b\u7684\u65f6\u5019\u8981\u628a\u5168\u5c40\u7684\u5747\u503c\u548c\u65b9\u5dee\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u4e2a\u5168\u5c40\u7684\u5747\u503c\u548c\u65b9\u5dee\u5982\u679c\u78b0\u5230\u4e00\u4e2a\u65b0\u7684\u9884\u6d4b\u6837\u672c\uff0c\u5982\u679c\u78b0\u5230\u4e00\u4e2a\u7279\u522b\u957f\u7684\uff0c\u56e0\u4e3a\u5728\u8bad\u7ec3\u7684\u65f6\u5019\u6ca1\u6709\u89c1\u8fc7\u8fd9\u79cd\u957f\u5ea6\u7684\uff0c\u90a3\u4e48\u5728\u4e4b\u524d\u8ba1\u7b97\u7684\u5747\u503c\u548c\u65b9\u5dee\u53ef\u80fd\u5c31\u4e0d\u90a3\u4e48\u597d\u7528\u4e86\u3002</li> <li>\u76f8\u53cd\uff0c\u5bf9\u4e8elayernorm\u76f8\u5bf9\u6765\u8bf4\u6ca1\u6709\u592a\u591a\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u4ed6\u662f\u6309\u7167\u6bcf\u4e2a\u6837\u672c\u6765\u8fdb\u884c\u5747\u503c\u548c\u65b9\u5dee\u7684\u8ba1\u7b97\uff0c\u540c\u65f6\u4e5f\u4e0d\u9700\u8981\u5b58\u4e0b\u4e00\u4e2a\u5168\u5c40\u7684\u5747\u503c\u548c\u65b9\u5dee\uff08\u4e0d\u7ba1\u6837\u672c\u7684\u957f\u77ed\uff0c\u5747\u503c\u548c\u65b9\u5dee\u7684\u8ba1\u7b97\u90fd\u662f\u4ee5\u6837\u672c\u4e3a\u5355\u4f4d\u7684\uff09\uff0c\u8fd9\u6837\u7684\u8bdd\u76f8\u5bf9\u6765\u8bb2\u66f4\u7a33\u5b9a\u4e00\u4e9b Python<pre><code>class AddNorm(nn.Module):\n    \"\"\"\n    \u4f7f\u7528\u6b8b\u5dee\u548c\u5f52\u4e00\u5316\n    \"\"\"\n\n    def __init__(self, d_model: int = 512, dropout: float = 0.1, layer_norm_eps: float = 1e-5):\n        super(AddNorm, self).__init__()\n        self.dropout = nn.Dropout(dropout)\n        self.layer_norm = nn.LayerNorm(d_model, eps=layer_norm_eps)\n\n    def forward(self, x, x_attention_out):\n        return self.layer_norm(self.dropout(x_attention_out) + x)\n</code></pre></li> </ul>"},{"location":"Transformer%E6%A2%B3%E7%90%86/#feedforward-networks","title":"FeedForward Networks","text":"<p>\u8fd9\u4e2aFFN\u6a21\u5757\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u4e00\u4e2aMLP\uff0c\u672c\u8d28\u4e0a\u5168\u662f\u4e24\u5c42\u5168\u8fde\u63a5\u5c42\u52a0\u4e00\u4e2a\u6fc0\u6d3b\u51fd\u6570\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662frelu</p> \\[ X = Dense_1(X) \\\\ X = Relu(X) \\\\  Out = Dense_2(X) \\] Python<pre><code>class FeedForward(nn.Module):\n    \"\"\"\n    \u524d\u9988\u7f51\u7edcmlp\n    \"\"\"\n\n    def __init__(self, d_model, dim_feedforward, activation):\n        super(FeedForward, self).__init__()\n        self.net = nn.Sequential(\n            nn.Linear(d_model, dim_feedforward),\n            activation(),\n            nn.Linear(dim_feedforward, d_model)\n        )\n\n    def forward(self, x):\n        return self.net(x)\n</code></pre>"},{"location":"Transformer%E6%A2%B3%E7%90%86/#encoder","title":"Encoder","text":"Python<pre><code>class TransformerEncoderLayer(nn.Module):\n    def __init__(self,\n                 d_model: int = 512,\n                 n_head: int = 8,\n                 dim_feedforward: int = 2048,\n                 dropout: float = 0.1,\n                 activation=nn.ReLU,\n                 layer_norm_eps: float = 1e-5):\n        super(TransformerEncoderLayer, self).__init__()\n        self.attention = MultiHeadAttention(d_model, n_head, dropout)\n        self.add_norm_1 = AddNorm(d_model, dropout, layer_norm_eps)\n        self.feed_forward = FeedForward(d_model, dim_feedforward, activation)\n        self.add_norm_2 = AddNorm(d_model, dropout, layer_norm_eps)\n\n    def forward(self, x):\n        x_attention_out = self.attention(x, x, x)\n        x_norm_out = self.add_norm_1(x, x_attention_out)\n        feed_out = self.feed_forward(x_norm_out)\n        x = self.add_norm_2(x_norm_out, feed_out)\n        return x\n\n\nclass TransformerEncoder(nn.Module):\n    def __init__(self, encoder_layer, num_layers):\n        super(TransformerEncoder, self).__init__()\n        self.layers = nn.ModuleList([copy.deepcopy(encoder_layer) for _ in range(num_layers)])\n\n    def forward(self, x):\n        for net in self.layers:\n            x = net(x)\n        return x\n</code></pre>"},{"location":"Transformer%E6%A2%B3%E7%90%86/#decoder","title":"Decoder","text":"Python<pre><code>class TransformerDecoderLayer(nn.Module):\n    def __init__(self,\n                 d_model: int = 512,\n                 n_head: int = 8,\n                 dim_feedforward: int = 2048,\n                 dropout: float = 0.1,\n                 activation=nn.ReLU,\n                 layer_norm_eps: float = 1e-5):\n        super(TransformerDecoderLayer, self).__init__()\n        self.mask_attention = MultiHeadAttention(d_model, n_head, dropout)\n        self.add_norm_1 = AddNorm(d_model, dropout, layer_norm_eps)\n        self.attention = MultiHeadAttention(d_model, n_head, dropout)\n        self.add_norm_2 = AddNorm(d_model, dropout, layer_norm_eps)\n        self.feed_forward = FeedForward(d_model, dim_feedforward, activation)\n        self.add_norm_3 = AddNorm(d_model, dropout, layer_norm_eps)\n\n    def forward(self, x, encoder_out=None):\n        out = self.mask_attention(x, x, x, True)\n        norm_out = self.add_norm_1(x, out)\n        if encoder_out is not None:\n            out = self.attention(encoder_out, encoder_out, norm_out)\n        else:\n            out = self.attention(norm_out, norm_out, norm_out)\n        norm_out = self.add_norm_2(norm_out, out)\n        out = self.feed_forward(norm_out)\n        norm_out = self.add_norm_3(norm_out, out)\n        return norm_out\n\n\nclass TransformerDecoder(nn.Module):\n    def __init__(self, decoder_layer, num_layers):\n        super(TransformerDecoder, self).__init__()\n        self.layers = nn.ModuleList([copy.deepcopy(decoder_layer) for _ in range(num_layers)])\n\n    def forward(self, x, encoder_out=None):\n        for net in self.layers:\n            x = net(x, encoder_out)\n        return x\n</code></pre>"},{"location":"Transformer%E6%A2%B3%E7%90%86/#positional-encoding","title":"Positional Encoding","text":"<p>\u200b attention\u65e0\u65f6\u5e8f\u4fe1\u606f\uff0c\u53ea\u662f\u8ba1\u7b97\u52a0\u6743\u548c\uff0c\u4e0e\u65f6\u5e8f\u65e0\u5173</p> <p>\u200b \u4e00\u53e5\u8bdd\u987a\u5e8f\u6253\u4e71\uff0cattention\u8ba1\u7b97\u540e\u8f93\u51fa\u503c\u90fd\u4e00\u6837</p> <p>\u200b \u4f4d\u7f6e\u7f16\u7801\u4e3a\u4e86\u89e3\u51b3\u8bcd\u5411\u91cf\u4e4b\u95f4\u4f4d\u7f6e\u987a\u5e8f\u95ee\u9898</p> <p>\u200b \u4f60\u6253\u6211\u4e0e\u6211\u6253\u4f60 \u901a\u8fc7\u4f4d\u7f6e\u7f16\u7801\u8ba1\u7b97\u51fa\u6765\u7ed3\u679c\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u901a\u8fc7\u4f4d\u7f6e\u7f16\u7801\u8ba1\u7b97\u540e\uff0cattention\u7684\u8f93\u5165\u4e0d\u4e00\u6837\u4e86\uff0c\u6240\u4ee5\u8f93\u51fa\u4e5f\u4e0d\u4e00\u6837\u4e86\u3002</p> \\[ PE(pos,2i) = sin(\\frac{pos}{10000^{\\frac{2i}{d_{model}}}}) \\\\ PE(pos,2i+1) = cos(\\frac{pos}{10000^{\\frac{2i}{d_{model}}}}) \\] Python<pre><code>class PositionEncoder(nn.Module):\n    def __init__(self, d_model: int = 512, dropout: float = 0.1, max_token: int = 1000):\n        super(PositionEncoder, self).__init__()\n        self.dropout = nn.Dropout(p=dropout)\n        # \u5f00\u59cb\u4f4d\u7f6e\u7f16\u7801\u90e8\u5206,\u5148\u751f\u6210\u4e00\u4e2amax_token * d_model \u7684\u77e9\u9635\uff0c\u53731000 * 512\n        # 1000\u662f\u4e00\u4e2a\u53e5\u5b50\u4e2d\u6700\u591a\u7684token\u6570\uff0c512\u662f\u4e00\u4e2atoken\u7528\u591a\u957f\u7684\u5411\u91cf\u6765\u8868\u793a\uff0c1000*512\u8fd9\u4e2a\u77e9\u9635\u7528\u4e8e\u8868\u793a\u4e00\u4e2a\u53e5\u5b50\u7684\u4fe1\u606f\n        self.pe = torch.zeros(1, max_token, d_model)\n        pos = torch.arange(0, max_token, dtype=torch.float).unsqueeze(1)  # pos\uff1a[max_len,1],\u5373[1000,1]\n        # \u5148\u628a\u62ec\u53f7\u5185\u7684\u5206\u5f0f\u6c42\u51fa\u6765,pos\u662f[1000,1],\u5206\u6bcd\u662f[256],\u901a\u8fc7\u5e7f\u64ad\u673a\u5236\u76f8\u4e58\u540e\u662f[1000,256]\n        div_term = pos / pow(10000.0, torch.arange(0, d_model, 2).float() / d_model)\n        # \u518d\u53d6\u6b63\u4f59\u5f26\n        self.pe[:, :, 0::2] = torch.sin(div_term)\n        self.pe[:, :, 1::2] = torch.cos(div_term)\n        # \u5c06pe\u4f5c\u4e3a\u56fa\u5b9a\u53c2\u6570\u4fdd\u5b58\u5230\u7f13\u51b2\u533a\uff0c\u4e0d\u4f1a\u88ab\u66f4\u65b0\n        self.register_buffer('PositionEncoding', self.pe)\n\n    def forward(self, x):\n        '''x: [batch_size, seq_len, d_model]'''\n        # 1000\u662f\u6211\u4eec\u9884\u5b9a\u4e49\u7684\u6700\u5927\u7684seq_len\uff0c\u5c31\u662f\u8bf4\u6211\u4eec\u628a\u6700\u591a\u7684\u60c5\u51b5pe\u90fd\u7b97\u597d\u4e86\uff0c\u7528\u7684\u65f6\u5019\u7528\u591a\u5c11\u5c31\u53d6\u591a\u5c11\n        x = x + self.pe[:, :x.size(1), :]\n        return self.dropout(x)  # return: [batch_size, seq_len, d_model], \u548c\u8f93\u5165\u7684\u5f62\u72b6\u76f8\u540c\n</code></pre>"},{"location":"Transformer%E6%A2%B3%E7%90%86/#embedding","title":"Embedding","text":"<ul> <li>embedding module \u7684\u524d\u5411\u8fc7\u7a0b\u5176\u5b9e\u662f\u4e00\u4e2a\u7d22\u5f15\uff08\u67e5\u8868\uff09\u7684\u8fc7\u7a0b<ul> <li>\u8868\u7684\u5f62\u5f0f\u662f\u4e00\u4e2a matrix\uff08embedding.weight, learnable parameters\uff09<ul> <li>matrix.shape: (v, h)<ul> <li>v\uff1avocabulary size</li> <li>h\uff1ahidden dimension</li> </ul> </li> </ul> </li> <li>\u5177\u4f53\u7d22\u5f15\u7684\u8fc7\u7a0b\uff0c\u662f\u901a\u8fc7 one hot + \u77e9\u9635\u4e58\u6cd5\u7684\u5f62\u5f0f\u5b9e\u73b0\u7684\uff1b</li> <li>input.shape: (b, s)<ul> <li>b\uff1abatch size</li> <li>s\uff1aseq len</li> </ul> </li> <li>embedding(input)<ul> <li>(b, s) ==&gt; (b, s, h)</li> <li>(b, s) \u548c (v, h) ==&gt;? (b, s, h)<ul> <li>(b, s) \u7ecf\u8fc7 one hot =&gt; (b, s, v)</li> <li>(b, s, v) @ (v, h) ==&gt; (b, s, h)</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"T%E5%88%86%E5%B8%83%E6%A3%80%E6%B5%8B/","title":"T\u5206\u5e03\u68c0\u6d4b","text":"<p>T\u5206\u5e03\u68c0\u6d4b</p> <p>\u90e8\u7f72\u7684\u65f6\u5019\u9a8c\u8bc1\u73af\u5883\u662f\u5426\u5339\u914d</p> <p>\u8bad\u7ec3\u96c6 \u6d4b\u8bd5\u96c6  </p> <p>\u8bad\u7ec3\u4e00\u4e2a\u4e8c\u5206\u7c7b\u5668</p> <p>\u5206\u7c7b\u4e24\u4e2a\u6570\u636e  \u5982\u679c\u5206\u7c7b\u5668\u80fd\u591f\u5206\u7c7b \u8868\u793a\u8fd9\u4e2a\u6570\u636e\u662f\u6765\u81ea\u4e0d\u540c\u5206\u5e03  \u5982\u679c\u4e0d\u80fd\u5206\u5f00\u6765\u81ea\u540c\u4e00\u4e2a\u5206\u5e03</p>"},{"location":"VIT%E6%A2%B3%E7%90%86/","title":"VIT\u68b3\u7406","text":"<p>\u8bba\u6587\u539f\u6587 \u00a0 \u00a0 \u00a0 \u00a0 Vision Transformer\u4e0d\u4ec5\u662f\u5728\u89c6\u89c9\u9886\u57df\u6316\u4e86\u4e00\u4e2a\u5927\u5751\uff0c\u5728\u591a\u6a21\u6001\u9886\u57df\u5176\u5b9e\u4e5f\u6316\u4e86\u4e00\u4e2a\u5927\u5751\uff0c\u56e0\u4e3a\u5b83\u6253\u7834\u4e86CV\u548cNLP\u5728\u6a21\u578b\u4e0a\u7684\u58c1\u5792\u3002\u89c6\u89c9\u9886\u57df\uff0c\u6211\u4eec\u5982\u679c\u60f3\u7528Transformer\u7684\u8bdd\uff0c\u9996\u5148\u7b2c\u4e00\u4e2a\u8981\u89e3\u51b3\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u628a\u4e00\u4e2a2d\u7684\u56fe\u7247\u53d8\u6210\u4e00\u4e2a1d\u7684\u5e8f\u5217\uff0c\u6216\u8005\u53d8\u6210\u4e00\u4e2a\u96c6\u5408\uff0c\u6700\u76f4\u89c2\u7684\u65b9\u6cd5\u5c31\u662f\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u50cf\u7d20\u70b9\u5f53\u6210\u8fd9\u8fb9\u7684\u5143\u7d20\uff0c\u7136\u540e\u76f4\u63a5\u628a2d\u7684\u56fe\u7247\u62c9\u76f4\uff0c\u628a\u5b83\u6254\u5230Transformer\u91cc\uff0c\u7136\u540e\u505a\u81ea\u5df1\u8ddf\u81ea\u5df1\u5b66\u4e60\u5c31\u597d\uff0c\u4f46\u662f\u60f3\u6cd5\u5f88\u7f8e\u597d\uff0c\u5b9e\u73b0\u8d77\u6765\u590d\u6742\u5ea6\u592a\u9ad8\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5728\u89c6\u89c9\u91cc\u9762\u6211\u4eec\u8bad\u7ec3\u5206\u7c7b\u4efb\u52a1\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u56fe\u7247\u7684\u8f93\u5165\u5927\u5c0f\u5927\u6982\u662f224224\uff0c\u8fd9\u4e48\u5927\uff0c\u4f46\u5982\u679c\u628a\u56fe\u7247\u91cc\u7684\u6bcf\u4e2a\u5143\u7d20\u70b9\u90fd\u76f4\u63a5\u5f53\u6210\u8fd9\u91cc\u7684\u5143\u7d20\u6765\u770b\u5f85\uff0c\u90a3\u5176\u5b9e\u8fd9\u4e2a\u5e8f\u5217\u957f\u5ea6\u5c31\u4e0d\u662f512\uff0c\u5e8f\u5217\u957f\u5ea6\u5c31\u662f224224=50176\uff0c\u56e0\u4e3a\u6211\u4eec\u4e00\u5171\u6709\u8fd9\u4e48\u591a\u50cf\u7d20\u70b9\uff0c\u4e00\u4e2a\u670950000\u4e2a\u50cf\u7d20\u70b9\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5c31\u662f\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u90a3\u8fd9\u4e2a\u5e8f\u5217\u957f\u5ea650000\u76f8\u5f53\u4e8e\u662fbert\u5e8f\u5217\u957f\u5ea6512100\u500d\uff0c\u6240\u4ee5\u8fd9\u590d\u6742\u5ea6\u662f\u76f8\u5f53\u53ef\u6015\u7684\uff0c\u7136\u540e\u8fd9\u8fd8\u53ea\u662f\u5206\u7c7b\u4efb\u52a1\uff0c\u4ed6\u7684\u56fe\u7247\u5c31224224\uff0c\u90a3\u5bf9\u4e8e\u68c0\u6d4b\u6216\u8005\u5206\u5272\u8fd9\u79cd\u4efb\u52a1\u5462\uff0c\u73b0\u5728\u5f88\u591a\u6a21\u578b\u7684\u8f93\u5165\u90fd\u5df2\u7ecf\u53d8\u6210600600\u6216\u8005800800\u6216\u8005\u66f4\u5927\uff0c\u90a3\u8fd9\u4e2a\u8ba1\u7b97\u590d\u6742\u5ea6\u4fbf\u66f4\u662f\u9ad8\u4e0d\u53ef\u6500\u4e86\u3002 \u00a0 \u00a0 \u00a0 \u00a0 Vision Transformer\u901a\u8fc7\u628a\u4e00\u4e2a\u56fe\u7247\u6253\u6210\u4e86\u5f88\u591apatch\u5408\u5e76patch\u89e3\u51b3\u8ba1\u7b97\u91cf\u3002</p> <p></p>"},{"location":"VIT%E6%A2%B3%E7%90%86/#1patchembedding","title":"1.PatchEmbedding","text":"<p>Vision Transformer\u628a\u4e00\u4e2a\u56fe\u7247\u6253\u6210\u4e86\u5f88\u591apatch\uff0c\u6bcf\u4e00\u4e2apatch\u5c31\u662f16*16</p> <p>\u5047\u5982\u8bf4\u8fd9\u4e2a\u56fe\u7247\u7684\u5927\u5c0f\u662f224224\uff0c\u90a3\u4e48\u6211\u4eec\u521a\u5f00\u59cb\u7b97\u8fd9\u4e2asequence length\u662f224224=50176\uff0c\u73b0\u5728\u5982\u679c\u6211\u4eec\u6362\u6210patch\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2apatch\u662f\u4e00\u4e2a\u5143\u7d20\uff0c\u90a3\u6709\u6548\u7684\u957f\u5ea6\u662f\u591a\u5c11\u5462\uff1f\u73b0\u5728\u8fd9\u4e2a\u5bbd\u5ea6\u5c31\u53d8\u6210\u4e86224/16=14\uff0c\u9ad8\u5ea6\u4e5f\u662f14\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6700\u540e\u7684\u5e8f\u5217\u957f\u5ea6\u5c31\u53d8\u6210\u4e8614*14=196\uff0c\u4e5f\u5c31\u662f\u73b0\u5728\u8fd9\u5f20\u56fe\u7247\u5c31\u53ea\u6709196\u4e2a\u5143\u7d20\uff0c196\u5bf9\u4e8e\u666e\u901a\u7684Transformer\u6765\u8bf4\uff0c\u8fd8\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u5e8f\u5217\u957f\u5ea6</p> <p>\u7136\u540e\u6211\u4eec\u628a\u8fd9\u91cc\u7684\u6bcf\u4e00\u4e2apatch\uff0c\u5f53\u505a\u4e00\u4e2a\u5143\u7d20\uff0c\u901a\u8fc7\u4e00\u4e2a\u8fd9\u4e2a\u5168\u8fde\u63a5\u5c42\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2alinear embedding\uff0c\u800c\u8fd9\u4e9b\u5c31\u4f1a\u5f53\u505a\u8f93\u5165\u4f20\u7ed9Transformer\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u770b\u51fa\u6765\uff0c\u4e00\u4e2a\u56fe\u7247\u5c31\u5df2\u7ecf\u53d8\u6210\u4e86\u4e00\u4e2a\u4e00\u4e2a\u7684\u8fd9\u6837\u7684\u56fe\u7247\u5757\u4e86\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e9b\u56fe\u7247\u5757\uff0c\u5f53\u6210\u662f\u50cfNLP\u91cc\u7684\u90a3\u4e9b\u5355\u8bcd\uff0c\u8fd9\u4e00\u4e2a\u53e5\u5b50\u6709\u591a\u5c11\u8bcd\uff0c\u90a3\u5c31\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u56fe\u7247\uff0c\u73b0\u5728\u6709\u591a\u5c11\u4e2apatch\uff0c\u8fd9\u5c31\u662f\u9898\u76ee\u7684\u610f\u4e49\uff0c\u4e00\u4e2a\u56fe\u7247\u7b49\u4ef7\u4e8e\u5f88\u591a16*16\u7684\u5355\u8bcd</p> <p>\u8f93\u5165\u56fe\u7247\u5927\u5c0f\u4e3a224*224*3(\u7528X\u8868\u793a)\uff0c\u6bcf\u4e2apatch\u7684\u5927\u5c0f\u4e3a16*16\uff0c\u6240\u4ee5patch\u4e2a\u6570\u4e3a(224/16)^2=196\uff0c\u6bcf\u4e00\u4e2a\u56fe\u50cf\u5757\u7684\u7ef4\u5ea6\u5c31\u662f16*16*3=768</p> <p>Linear Projection\u7ebf\u6027\u6295\u5c04\u5c42\u5c31\u662f\u5168\u8fde\u63a5\u5c42(\u7528E\u8868\u793a)\uff0c\u8be5\u7ef4\u5ea6\u662f768*768\uff0c\u524d\u9762\u7684768\u662f\u4e0d\u53d8\u7684\uff0c\u662f\u7b97\u51fa\u6765\u768416*16*3=768\uff0c\u540e\u9762\u7684768\u662f\u53ef\u4ee5\u53d8\u5316\u7684</p> <p>X*E\u5f97\u5230\u7684\u8fd8\u662f196*768(196\u4e2atoken\uff0c\u6bcf\u4e2atoken\u7ef4\u5ea6\u90fd\u662f768)\uff0c\u4e4b\u540e\u5728\u62fc\u63a5\u4e0a1\u4e2acls token(1*768)\uff0c\u518d\u6dfb\u52a0\u4f4d\u7f6e\u4fe1\u606f(\u662fsum\u800c\u4e0d\u662fconcat)\uff0c\u6240\u4ee5\u6700\u540e\u8f93\u5165\u5230Transformer Encoder\u7684\u8fd8\u662f197*768</p> Python<pre><code>import torch\nimport torch.nn as nn\n\nclass PatchEmbedding(nn.Module):\n    \"\"\"\u4f7f\u7528\u5377\u79ef\u4ee3\u66ff\u5207\u7247\"\"\"\n\n    def __init__(self, images_size=(224, 224, 3), embedding_dim=768, patch_size=16, dropout=0.1):\n        super(PatchEmbedding, self).__init__()\n        height, weight, in_channels = images_size\n        assert height % patch_size == 0 and weight % patch_size == 0, 'Image dimensions must be divisible by the patch size.'\n        num_patcher = (height // patch_size) * (weight // patch_size)\n        self.patcher = nn.Conv2d(in_channels=in_channels, out_channels=embedding_dim,\n                                 kernel_size=(patch_size, patch_size), stride=(patch_size, patch_size))\n        self.cls_token = nn.Parameter(torch.rand(size=(1, 1, embedding_dim)), requires_grad=True)\n        # patch * patch + 1 (cls token)\n        self.position_embedding = nn.Parameter(torch.rand(size=(1, num_patcher + 1, embedding_dim)), requires_grad=True)\n        self.dropout = nn.Dropout(p=dropout)\n\n    def forward(self, x):\n        \"\"\"\n        :param x: [n, c, h, w] tensor\n        :return: [batch, 197, 768] tensor\n        \"\"\"\n        cls_token = self.cls_token.expand(x.shape[0], -1, -1)  # [1, 1, 768] -&gt; [batch, 1, 768]\n        x = self.patcher(x)  # [batch, 768, 14, 14]\n        x = x.view(x.shape[0], x.shape[1], -1).permute(0, 2,\n                                                       1)  # [batch, 768, 14, 14] -&gt; [batch, 768, 196] -&gt; [batch, 196, 768]\n\n        x = torch.cat([x, cls_token], dim=1)  # [64, 197, 768]\n        x += self.position_embedding\n        x = self.dropout(x)\n        return x\n</code></pre>"},{"location":"VIT%E6%A2%B3%E7%90%86/#2transformerencoder","title":"2.TransformerEncoder","text":"<p> \u8fd9\u91cc\u53ea\u4f7f\u7528\u7684Transformer\u7684Encoder\u6a21\u5757</p> Python<pre><code>import copy\nimport torch\nimport torch.nn as nn\n\nimport numpy as np\n\nclass ScaledDotProductAttention(nn.Module):\n    def __init__(self, dropout=0.1):\n        super(ScaledDotProductAttention, self).__init__()\n        self.softmax = nn.Softmax(dim=-1)\n        self.dropout = nn.Dropout(dropout)\n\n    @staticmethod\n    def get_attention_mask(seq):\n        \"\"\"seq: [batch_size, tgt_len]\"\"\"\n        # batch_size\u4e2a tgt_len * tgt_len\u7684mask\u77e9\u9635\n        # attn_shape = [seq.size(0), seq.size(1), seq.size(2)]\n        attn_shape = seq.shape\n        # np.triu \u662f\u751f\u6210\u4e00\u4e2a upper triangular matrix \u4e0a\u4e09\u89d2\u77e9\u9635\uff0ck\u662f\u76f8\u5bf9\u4e8e\u4e3b\u5bf9\u89d2\u7ebf\u7684\u504f\u79fb\u91cf\n        # k=1\u610f\u4e3a\u4e0d\u5305\u542b\u4e3b\u5bf9\u89d2\u7ebf\uff08\u4ece\u4e3b\u5bf9\u89d2\u7ebf\u5411\u4e0a\u504f\u79fb1\u5f00\u59cb\uff09\n        subsequence_mask = np.triu(np.ones(attn_shape), k=1)\n        subsequence_mask = torch.from_numpy(subsequence_mask).byte()  # \u56e0\u4e3a\u53ea\u67090\u30011\u6240\u4ee5\u7528byte\u8282\u7701\u5185\u5b58\n        return subsequence_mask == 1  # return: [batch_size, n_head, tgt_len, tgt_len]\n\n    def forward(self, q, k, v, mask=False):\n        # scores = q @ k / np.sqrt(d_k)\n        scores = torch.matmul(q, k.transpose(-1, -2)) / np.sqrt(q.shape[-1])  # [batch, n_head, len_q, len_k]\n        if mask:\n            # \u751f\u6210mask\u63a9\u7801\n            attention_mask = self.get_attention_mask(scores)\n            scores.masked_fill_(attention_mask, -1e9)\n        return torch.matmul(self.dropout(self.softmax(scores)), v)\n\n\nclass MultiHeadAttention(nn.Module):\n    def __init__(self, num_hidden=512, n_head=8, dropout=0.1, bias=False):\n        super(MultiHeadAttention, self).__init__()\n        self.num_hidden = num_hidden\n        self.num_head = n_head\n        self.q_mat = nn.Linear(num_hidden, num_hidden, bias=bias)\n        self.k_mat = nn.Linear(num_hidden, num_hidden, bias=bias)\n        self.v_mat = nn.Linear(num_hidden, num_hidden, bias=bias)\n        self.concat_mat = nn.Linear(num_hidden, num_hidden, bias=bias)\n        self.attention = ScaledDotProductAttention(dropout)\n\n    def forward(self, queries, keys, values, mask=False):\n        # \u5206\u591a\u4e2a\u5934  [batch, seq_len, hidden_size] -&gt; [batch, seq_len, head_size, d_k] -&gt; [batch, head_size, seq_len, d_k]\n        d_k = self.num_hidden // self.num_head\n        q = self.q_mat(queries).view(queries.size(0), -1, self.num_head, d_k).transpose(1, 2)\n        k = self.k_mat(keys).view(keys.size(0), -1, self.num_head, d_k).transpose(1, 2)\n        v = self.v_mat(values).view(values.size(0), -1, self.num_head, d_k).transpose(1, 2)\n        out = self.attention(q, k, v, mask)\n        out = out.view(out.shape[0], -1, self.num_hidden)\n        out = self.concat_mat(out)\n        return out  # output: [batch_size, len_q, hidden_size]\n\n\nclass AddNorm(nn.Module):\n    \"\"\"\n    \u4f7f\u7528\u6b8b\u5dee\u548c\u5f52\u4e00\u5316\n    \"\"\"\n\n    def __init__(self, d_model: int = 512, dropout: float = 0.1, layer_norm_eps: float = 1e-5):\n        super(AddNorm, self).__init__()\n        self.dropout = nn.Dropout(dropout)\n        self.layer_norm = nn.LayerNorm(d_model, eps=layer_norm_eps)\n\n    def forward(self, x, x_attention_out):\n        return self.layer_norm(self.dropout(x_attention_out) + x)\n\n\nclass FeedForward(nn.Module):\n    \"\"\"\n    \u524d\u9988\u7f51\u7edcmlp\n    \"\"\"\n\n    def __init__(self, d_model, dim_feedforward, activation):\n        super(FeedForward, self).__init__()\n        self.net = nn.Sequential(\n            nn.Linear(d_model, dim_feedforward),\n            activation(),\n            nn.Linear(dim_feedforward, d_model)\n        )\n\n    def forward(self, x):\n        return self.net(x)\n\n\nclass TransformerEncoderLayer(nn.Module):\n    def __init__(self,\n                 d_model: int = 512,\n                 n_head: int = 8,\n                 dim_feedforward: int = 2048,\n                 dropout: float = 0.1,\n                 activation=nn.ReLU,\n                 layer_norm_eps: float = 1e-5):\n        super(TransformerEncoderLayer, self).__init__()\n        self.attention = MultiHeadAttention(d_model, n_head, dropout)\n        self.add_norm_1 = AddNorm(d_model, dropout, layer_norm_eps)\n        self.feed_forward = FeedForward(d_model, dim_feedforward, activation)\n        self.add_norm_2 = AddNorm(d_model, dropout, layer_norm_eps)\n\n    def forward(self, x):\n        x_attention_out = self.attention(x, x, x)\n        x_norm_out = self.add_norm_1(x, x_attention_out)\n        feed_out = self.feed_forward(x_norm_out)\n        x = self.add_norm_2(x_norm_out, feed_out)\n        return x\n\n\nclass TransformerEncoder(nn.Module):\n    def __init__(self, encoder_layer, num_layers):\n        super(TransformerEncoder, self).__init__()\n        self.layers = nn.ModuleList([copy.deepcopy(encoder_layer) for _ in range(num_layers)])\n\n    def forward(self, x):\n        for net in self.layers:\n            x = net(x)\n        return x\n</code></pre>"},{"location":"VIT%E6%A2%B3%E7%90%86/#3mlp","title":"3.MLP","text":"Python<pre><code>class MLP(nn.Module):\n    def __init__(self, embedding_dim: int = 768, num_classes: int = 10):\n        super(MLP, self).__init__()\n        self.layer_norm = nn.LayerNorm(normalized_shape=embedding_dim)\n        self.linear = nn.Linear(in_features=embedding_dim, out_features=num_classes)\n\n    def forward(self, x):\n        return self.linear(self.layer_norm(x))\n</code></pre>"},{"location":"VIT%E6%A2%B3%E7%90%86/#4vit","title":"4.VIT","text":"Python<pre><code>class Vit(nn.Module):\n    def __init__(self, images_size: tuple = (224, 224, 3), num_classes: int = 10, embedding_dim: int = 768,\n                 patch_size: int = 16, dropout: float = 0.1, n_head: int = 12, num_encoders: int = 6):\n        super(Vit, self).__init__()\n        assert embedding_dim % n_head == 0, \"embedding_dim or n_head param error\"\n        self.patch_embedding = PatchEmbedding(images_size, embedding_dim, patch_size, dropout)\n        encoder_layer = TransformerEncoderLayer(d_model=embedding_dim, n_head=n_head, dropout=dropout, dim_feedforward=embedding_dim*4)\n        self.encoder_layers = TransformerEncoder(encoder_layer=encoder_layer, num_layers=num_encoders)\n        self.mlp = MLP(embedding_dim=embedding_dim, num_classes=num_classes)\n\n    def forward(self, x):\n        \"\"\"\n        :param x: [n, c, h, w] tensor\n        :return: [n, sql_len, num_classes]\n        \"\"\"\n        x = self.patch_embedding(x)\n        x = self.encoder_layers(x)  # [batch, 197, 768] -&gt; [768/12=64 8head 197x64] -&gt; [batch, 197, 768]\n        x = self.mlp(x)  # [batch, 197, num_classes]\n        return x\n</code></pre>"},{"location":"git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/","title":"Git\u8bbe\u7f6e\u4ee3\u7406","text":"<p>\u8981\u5728 Git \u4e2d\u8bbe\u7f6e\u4e34\u65f6\u4ee3\u7406\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>http.proxy</code> \u548c <code>https.proxy</code> \u914d\u7f6e\u9009\u9879\u3002\u8fd9\u4e9b\u9009\u9879\u5141\u8bb8\u60a8\u4e3a\u5f53\u524d\u4f1a\u8bdd\u8bbe\u7f6e\u4ee3\u7406\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u5168\u5c40\u8bbe\u7f6e\u3002\u4ee5\u4e0b\u662f\u5728 Git \u4e2d\u8bbe\u7f6e\u4e34\u65f6\u4ee3\u7406\u7684\u6b65\u9aa4\uff1a</p> <ol> <li>\u8bbe\u7f6e HTTP \u4ee3\u7406\uff1a</li> </ol> Bash<pre><code>git config --global http.proxy http://192.168.124.16:7890\n</code></pre> <ol> <li>\u8bbe\u7f6e HTTPS \u4ee3\u7406\uff1a</li> </ol> Bash<pre><code>git config --global https.proxy https://192.168.124.16:7890\n</code></pre> <p>\u8bf7\u5c06\u4e0a\u8ff0\u547d\u4ee4\u4e2d\u7684 <code>\u4ee3\u7406\u670d\u52a1\u5668</code> \u66ff\u6362\u4e3a\u60a8\u8981\u4f7f\u7528\u7684\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5730\u5740\uff0c\u5c06 <code>\u7aef\u53e3\u53f7</code> \u66ff\u6362\u4e3a\u4ee3\u7406\u670d\u52a1\u5668\u4f7f\u7528\u7684\u7aef\u53e3\u53f7\u3002\u8bbe\u7f6e\u4ee3\u7406\u540e\uff0cGit \u5c06\u5728\u5f53\u524d\u4f1a\u8bdd\u4e2d\u901a\u8fc7\u6307\u5b9a\u7684\u4ee3\u7406\u670d\u52a1\u5668\u8fdb\u884c HTTP \u548c HTTPS \u8bf7\u6c42\u3002</p> <p>\u8981\u79fb\u9664\u4e34\u65f6\u4ee3\u7406\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> Bash<pre><code>git config --global --unset http.proxy\ngit config --global --unset https.proxy\n</code></pre> <p>\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e9b\u8bbe\u7f6e\u53ea\u5728\u5f53\u524d\u4f1a\u8bdd\u4e2d\u6709\u6548\uff0cGit \u7684\u5168\u5c40\u8bbe\u7f6e\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\u3002</p>"},{"location":"%E6%A6%82%E7%8E%87%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B/","title":"\u6982\u7387\u6269\u6563\u6a21\u578b","text":"<p>\u6982\u7387\u6269\u6563\u6a21\u578b</p> <p>\u6b63\u6001\u5206\u5e03</p> <p>\u9ad8\u65af\u5206\u5e03</p> <p>\u8d1d\u53f6\u65af</p>"},{"location":"blog/","title":"Blog","text":"<ul> <li> <p>Note Markdown<pre><code>!!! note\n    This is a note.\n</code></pre></p> </li> <li> <p>Tip Markdown<pre><code>!!! tip\n    This is a tip.\n</code></pre></p> </li> <li> <p>Warning Markdown<pre><code>!!! warning\n    This is a warning.\n</code></pre></p> </li> <li> <p>Danger Markdown<pre><code>!!! danger\n    This is a danger.\n</code></pre></p> </li> <li> <p>Success Markdown<pre><code>!!! success\n    This is a success.\n</code></pre></p> </li> <li>Info Markdown<pre><code>!!! info\n    This is an info.\n</code></pre></li> <li>Quote Markdown<pre><code>!!! quote\n    This is a quote.\n</code></pre></li> <li>Question Markdown<pre><code>??? question \"What is the meaning of life, the universe, and everything?\"\n    42.\n</code></pre></li> </ul>"},{"location":"cv/SwinTransformer/","title":"Swin Transformer\u68b3\u7406","text":"<p>Swin Transformer\u8bba\u6587\u539f\u6587 Swin Transformer\u662fICCV 2021\u7684\u6700\u4f73\u8bba\u6587\uff0c\u5b83\u4e4b\u6240\u4ee5\u6709\u8fd9\u4e48\u5927\u7684\u5f71\u54cd\u529b\uff0c\u662f\u56e0\u4e3a\u5728ViT\u4e4b\u540e\uff0cswin transformer\u51ed\u501f\u5728\u4e00\u7cfb\u5217\u89c6\u89c9\u4efb\u52a1\u4e0a\u7684\u51fa\u8272\u8868\u73b0\uff0c\u8fdb\u4e00\u6b65\u8bc1\u660e\u4e86transformer\u662f\u53ef\u4ee5\u5728\u89c6\u89c9\u9886\u57df\u5e7f\u6cdb\u5e94\u7528\u7684\u3002\u6b64\u5916\uff0c\u4f5c\u8005\u56e2\u961f\u4e5f\u53d1\u5e03\u4e86\u4e00\u7cfb\u5217\u57fa\u4e8eswin transformer\u7684\u5de5\u4f5c\uff0c\u6bd4\u5982\u81ea\u76d1\u7763\u7248\u672c\u7684MoBY\u3001\u89c6\u9891\u9886\u57df\u7684video-swin-transformer\u3001\u5e94\u7528swin\u601d\u60f3\u7684MLP\u7248\u672cSwin MLP\u4ee5\u53ca\u534a\u76d1\u7763\u76ee\u6807\u68c0\u6d4bSoft Teacher\u3001\u57fa\u4e8e\u63a9\u7801\u81ea\u76d1\u7763\u5b66\u4e60\u7684SimMIM\u7b49\uff0c\u518d\u6b21\u8bc1\u660e\u4e86swin transformer\u5e94\u7528\u7684\u5e7f\u6cdb\u6027\u548c\u6709\u6548\u6027\u3002  \u76ee\u524dTransformer\u5e94\u7528\u5230\u56fe\u50cf\u9886\u57df\u4e3b\u8981\u6709\u4e24\u5927\u6311\u6218\uff1a</p> <ul> <li>\u89c6\u89c9\u5b9e\u4f53\u53d8\u5316\u5927\uff0c\u5728\u4e0d\u540c\u573a\u666f\u4e0b\u89c6\u89c9Transformer\u6027\u80fd\u672a\u5fc5\u5f88\u597d</li> <li>\u56fe\u50cf\u5206\u8fa8\u7387\u9ad8\uff0c\u50cf\u7d20\u70b9\u591a\uff0cTransformer\u57fa\u4e8e\u5168\u5c40\u81ea\u6ce8\u610f\u529b\u7684\u8ba1\u7b97\u5bfc\u81f4\u8ba1\u7b97\u91cf\u8f83\u5927</li> </ul> <p>\u9488\u5bf9\u4e0a\u8ff0\u4e24\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u5305\u542b\u6ed1\u7a97\u64cd\u4f5c\uff0c\u5177\u6709\u5c42\u7ea7\u8bbe\u8ba1\u7684Swin Transformer\u3002</p> <p>\u5176\u4e2d\u6ed1\u7a97\u64cd\u4f5c\u5305\u62ec\u4e0d\u91cd\u53e0\u7684local window\uff0c\u548c\u91cd\u53e0\u7684cross-window\u3002\u5c06\u6ce8\u610f\u529b\u8ba1\u7b97\u9650\u5236\u5728\u4e00\u4e2a\u7a97\u53e3\u4e2d\uff0c\u4e00\u65b9\u9762\u80fd\u5f15\u5165CNN\u5377\u79ef\u64cd\u4f5c\u7684\u5c40\u90e8\u6027\uff0c\u53e6\u4e00\u65b9\u9762\u80fd\u8282\u7701\u8ba1\u7b97\u91cf\u3002</p>"},{"location":"cv/SwinTransformer/#swin-transformer_1","title":"Swin Transformer\u7684\u6a21\u578b\u67b6\u6784","text":"<p>\u6839\u636e\u6a21\u578b\u603b\u89c8\u56fe\u770b\u4e00\u4e0b\u6a21\u578b\u7684\u524d\u5411\u8fc7\u7a0b\uff1a</p>"},{"location":"cv/SwinTransformer/#patch-partition","title":"Patch Partition","text":"<p>\u5047\u8bbe\u8bf4\u6709\u4e00\u5f20224x224x3\uff08ImageNet \u6807\u51c6\u5c3a\u5bf8\uff09\u7684\u8f93\u5165\u56fe\u7247 \u7b2c\u4e00\u6b65\u5c31\u662f\u50cf ViT \u90a3\u6837\u628a\u56fe\u7247\u6253\u6210 patch\uff0c\u5728 Swin Transformer \u8fd9\u7bc7\u8bba\u6587\u91cc\uff0c\u5b83\u7684 patch size \u662f4x4\uff0c\u800c\u4e0d\u662f\u50cf ViT \u4e00\u683716x16\uff0c\u6240\u4ee5\u8bf4\u5b83\u7ecf\u8fc7 patch partition \u6253\u6210 patch \u4e4b\u540e\uff0c\u5f97\u5230\u56fe\u7247\u7684\u5c3a\u5bf8\u662f56x56x48\uff0c56\u5c31\u662f224/4\uff0c\u56e0\u4e3a patch size \u662f4\uff0c\u5411\u91cf\u7684\u7ef4\u5ea648\uff0c\u56e0\u4e3a4x4x3\uff0c3 \u662f\u56fe\u7247\u7684 RGB \u901a\u9053 \u6253\u5b8c\u4e86 patch \uff0c\u63a5\u4e0b\u6765\u5c31\u8981\u505a Linear Embedding\uff0c\u4e5f\u5c31\u662f\u8bf4\u8981\u628a\u5411\u91cf\u7684\u7ef4\u5ea6\u53d8\u6210\u4e00\u4e2a\u9884\u5148\u8bbe\u7f6e\u597d\u7684\u503c\uff0c\u5c31\u662f Transformer \u80fd\u591f\u63a5\u53d7\u7684\u503c\uff0c\u5728 Swin Transformer \u7684\u8bba\u6587\u91cc\u628a\u8fd9\u4e2a\u8d85\u53c2\u6570\u8bbe\u4e3a c\uff0c\u5bf9\u4e8e Swin tiny \u7f51\u7edc\u6765\u8bf4\uff0c\u4e5f\u5c31\u662f\u4e0a\u56fe\u4e2d\u753b\u7684\u7f51\u7edc\u603b\u89c8\u56fe\uff0c\u5b83\u7684 c \u662f96\uff0c\u6240\u4ee5\u7ecf\u5386\u5b8c Linear Embedding \u4e4b\u540e\uff0c\u8f93\u5165\u7684\u5c3a\u5bf8\u5c31\u53d8\u6210\u4e8656x56x96\uff0c\u524d\u9762\u768456x56\u5c31\u4f1a\u62c9\u76f4\u53d8\u62103136\uff0c\u53d8\u6210\u4e86\u5e8f\u5217\u957f\u5ea6\uff0c\u540e\u9762\u768496\u5c31\u53d8\u6210\u4e86\u6bcf\u4e00\u4e2atoken\u5411\u91cf\u7684\u7ef4\u5ea6\uff0c\u5176\u5b9e Patch Partition \u548c Linear Embedding \u5c31\u76f8\u5f53\u4e8e\u662f ViT \u91cc\u7684Patch Projection \u64cd\u4f5c\uff0c\u800c\u5728\u4ee3\u7801\u91cc\u4e5f\u662f\u7528\u4e00\u6b21\u5377\u79ef\u64cd\u4f5c\u5c31\u5b8c\u6210\u4e86\u3002 Python<pre><code>class PatchEmbedding(nn.Module):\n    def __init__(self, img_size=(224, 224, 3), patch_size=4, embedding_dim=96):\n        super().__init__()\n        self.img_size = img_size\n        patches_resolution = [img_size[0] // patch_size, img_size[1] // patch_size]\n        self.num_patches = patches_resolution[0] * patches_resolution[1]\n\n        self.projection = nn.Conv2d(in_channels=img_size[2], out_channels=embedding_dim, kernel_size=patch_size,\n                                    stride=patch_size)\n        self.layer_norm = nn.LayerNorm(embedding_dim)\n\n    def forward(self, x):\n        n, c, h, w = x.shape\n        assert h == self.img_size[0] and w == self.img_size[1], f\"Input size ({h}*{w}) doesn't match model ({self.img_size[0]}*{self.img_size[1]}).\"\n        x = self.projection(x)  # [batch, 96, 56, 56]\n        x = x.flatten(2).transpose(2, 1)  # [batch, 96, 3136] -&gt; [batch, 3136, 96]\n        x = self.layer_norm(x)  # [batch, 3136, 96]\n        return x\n</code></pre></p>"},{"location":"cv/SwinTransformer/#swin-transformer-block","title":"Swin Transformer block","text":"<p>   \u4e0a\u56fe\u53f3\u4fa7\u4e3a ViT \u7684Transformer\u7ed3\u6784\uff0c\u5bf9\u6bd4Swin Transformer\u53ea\u662f\u5c06Multi-HeadAttention\u7ed3\u6784\u66ff\u6362\u4e3a\u4e86W-MSA\u548cSW-MSA\u3002\u6240\u4ee5Swin Transformer\u7684\u7ed3\u6784\u662f\u6210\u5bf9\u51fa\u73b0,stage1-4\u4e3a[2, 2, 6, 2]\u3002 \u9996\u5148\u5e8f\u5217\u957f\u5ea6\u662f3136\uff0c\u5bf9\u4e8e ViT \u6765\u8bf4\uff0c\u7528 patch size 16x16\uff0c\u5b83\u7684\u5e8f\u5217\u957f\u5ea6\u5c31\u53ea\u6709196\uff0c\u662f\u76f8\u5bf9\u77ed\u5f88\u591a\u7684\uff0c\u8fd9\u91cc\u76843136\u5c31\u592a\u957f\u4e86\uff0c\u662f\u76ee\u524d\u6765\u8bf4Transformer\u4e0d\u80fd\u63a5\u53d7\u7684\u5e8f\u5217\u957f\u5ea6\uff0c\u6240\u4ee5 Swin Transformer \u5c31\u5f15\u5165\u4e86\u57fa\u4e8e\u7a97\u53e3\u7684\u81ea\u6ce8\u610f\u529b\u8ba1\u7b97\uff0c\u6bcf\u4e2a\u7a97\u53e3\u6309\u7167\u9ed8\u8ba4\u6765\u8bf4\uff0c\u90fd\u53ea\u67097x7\u4e2a patch\uff0c\u6240\u4ee5\u8bf4\u5e8f\u5217\u957f\u5ea6\u5c31\u53ea\u670949\u5c31\u76f8\u5f53\u5c0f\u4e86\uff0c\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u8ba1\u7b97\u590d\u6742\u5ea6\u7684\u95ee\u9898 \u6240\u4ee5\u4e5f\u5c31\u662f\u8bf4\uff0c stage1\u4e2d\u7684swin transformer block \u662f\u57fa\u4e8e\u7a97\u53e3\u8ba1\u7b97\u81ea\u6ce8\u610f\u529b\u7684\uff0c\u73b0\u5728\u6682\u65f6\u5148\u628a transformer block\u5f53\u6210\u662f\u4e00\u4e2a\u9ed1\u76d2\uff0c\u53ea\u5173\u6ce8\u8f93\u5165\u548c\u8f93\u51fa\u7684\u7ef4\u5ea6\uff0c\u5bf9\u4e8e Transformer \u6765\u8bf4\uff0c\u5982\u679c\u4e0d\u5bf9\u5b83\u505a\u66f4\u591a\u7ea6\u675f\u7684\u8bdd\uff0cTransformer\u8f93\u5165\u7684\u5e8f\u5217\u957f\u5ea6\u662f\u591a\u5c11\uff0c\u8f93\u51fa\u7684\u5e8f\u5217\u957f\u5ea6\u4e5f\u662f\u591a\u5c11\uff0c\u5b83\u7684\u8f93\u5165\u8f93\u51fa\u7684\u5c3a\u5bf8\u662f\u4e0d\u53d8\u7684\uff0c\u6240\u4ee5\u8bf4\u5728 stage1 \u4e2d\u7ecf\u8fc7\u4e24\u5c42Swin Transformer block \u4e4b\u540e\uff0c\u8f93\u51fa\u8fd8\u662f56x56x96 \u5230\u8fd9\u5176\u5b9e Swin Transformer\u7684\u7b2c\u4e00\u4e2a\u9636\u6bb5\u5c31\u8d70\u5b8c\u4e86\uff0c\u4e5f\u5c31\u662f\u5148\u8fc7\u4e00\u4e2a Patch Projection \u5c42\uff0c\u7136\u540e\u518d\u8fc7\u4e00\u4e9b Swin Transformer block\uff0c\u63a5\u4e0b\u6765\u5982\u679c\u60f3\u8981\u6709\u591a\u5c3a\u5bf8\u7684\u7279\u5f81\u4fe1\u606f\uff0c\u5c31\u8981\u6784\u5efa\u4e00\u4e2a\u5c42\u7ea7\u5f0f\u7684 transformer\uff0c\u4e5f\u5c31\u662f\u8bf4\u9700\u8981\u4e00\u4e2a\u50cf\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u91cc\u4e00\u6837\uff0c\u6709\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u6c60\u5316\u7684\u64cd\u4f5c Python<pre><code>class SwinTransformerBlock(nn.Module):\n    def __init__(self, in_dim, input_resolution, num_heads, window_size=7, shift_size=0,\n                 mlp_ratio=4, dropout=0., drop_path=0.,\n                 act_layer=nn.GELU):\n        super().__init__()\n        self.input_resolution = input_resolution\n        self.window_size = window_size\n        self.shift_size = shift_size\n\n        mlp_hidden_dim = int(in_dim * mlp_ratio)\n\n        self.layer_norm_1 = nn.LayerNorm(in_dim)\n        # W-MSA\n        self.window_attention = WindowAttention(num_hidden=in_dim, window_size=window_size, n_head=num_heads)\n        self.drop_path = DropPath(drop_path) if drop_path &gt; 0. else nn.Identity()\n        self.layer_norm_2 = nn.LayerNorm(in_dim)\n        # MLP\n        self.mlp_1 = nn.Sequential(\n            nn.Linear(in_dim, mlp_hidden_dim),\n            act_layer(),\n            nn.Dropout(dropout),\n            nn.Linear(mlp_hidden_dim, in_dim),\n            nn.Dropout(dropout)\n        )\n        #\n        self.layer_norm_3 = nn.LayerNorm(in_dim)\n        # SW-WSA\n        self.shift_window_attention = WindowAttention(num_hidden=in_dim, window_size=window_size, n_head=num_heads)\n        self.layer_norm_4 = nn.LayerNorm(in_dim)\n        # MLP2\n        self.mlp_2 = nn.Sequential(\n            nn.Linear(in_dim, mlp_hidden_dim),\n            act_layer(),\n            nn.Dropout(dropout),\n            nn.Linear(mlp_hidden_dim, in_dim),\n            nn.Dropout(dropout)\n        )\n\n        # attention mask\n        # calculate attention mask for SW-MSA\n        H, W = self.input_resolution\n        img_mask = torch.zeros((1, H, W, 1))  # 1 H W 1\n        h_slices = (slice(0, -self.window_size),\n                    slice(-self.window_size, -self.shift_size),\n                    slice(-self.shift_size, None))\n        w_slices = (slice(0, -self.window_size),\n                    slice(-self.window_size, -self.shift_size),\n                    slice(-self.shift_size, None))\n        cnt = 0\n        for h in h_slices:\n            for w in w_slices:\n                img_mask[:, h, w, :] = cnt\n                cnt += 1\n        mask_windows = self.window_partition(img_mask, self.window_size)  # nW, window_size, window_size, 1\n        mask_windows = mask_windows.view(-1, self.window_size * self.window_size)\n        attn_mask = mask_windows.unsqueeze(1) - mask_windows.unsqueeze(2)\n        attn_mask = attn_mask.masked_fill(attn_mask != 0, float(-100.0)).masked_fill(attn_mask == 0, float(0.0))\n        self.register_buffer(\"attn_mask\", attn_mask)\n\n    @staticmethod\n    def window_partition(x, window_size):\n        n, h, w, c = x.shape  # [batch, 56, 56, 96]\n        x = x.view(n, h // window_size, window_size, w // window_size, window_size, c)  # [batch, 8, 7, 8, 7, 96]\n        x = x.permute(0, 1, 3, 2, 4, 5).contiguous().view(-1, window_size, window_size, c)  # [64*batch, 7, 7, 96]\n        return x\n\n    @staticmethod\n    def window_reverse(windows, window_size, h, w):\n        b = int(windows.shape[0] / (h * w / window_size / window_size))\n        x = windows.view(b, h // window_size, w // window_size, window_size, window_size, -1)\n        x = x.permute(0, 1, 3, 2, 4, 5).contiguous().view(b, h, w, -1)\n        return x\n\n    def forward(self, x):\n        \"\"\"x: batch, sql_len, channels\"\"\"\n        h, w = self.input_resolution  # [56, 56]\n        n, l, c = x.shape  # [batch, 3136, 96]\n        assert l == h * w, \"input feature has wrong size\"\n\n        shortcut = x\n        # 1.layer norm 1\n        x = self.layer_norm_1(x)  # [batch, 3136, 96]\n        x = x.view(n, h, w, c)  # [batch, 56, 56, 96]\n\n        # 2 W-MSA\n        # 2.1partition windows\n        x_windows = self.window_partition(x, self.window_size)  # [64*batch, 7, 7, 96]\n        x_windows = x_windows.view(-1, self.window_size * self.window_size, c)  # [64*batch, 49, 96]\n        # 2.2attention\n        attention_windows = self.window_attention(x_windows)  # [64*batch, 49, 96]\n        # 2.3merge windows\n        attention_windows = attention_windows.view(-1, self.window_size, self.window_size, c)  # [64*batch, 7, 7, 96]\n        # 2.4reverse window\n        x = self.window_reverse(attention_windows, self.window_size, h, w)  # [batch, 56, 56, 96]\n        x = x.view(n, h * w, c)  # [batch, 3136, 96]\n        # 3 shortcut 1\n        x_ = shortcut + self.drop_path(x)  # [batch, 3136, 96]\n        # 4 layer norm\n        x = self.layer_norm_2(x_)\n        # 5 MLP\n        x = self.mlp_1(x)\n        # 6 shortcut 2\n        x = x_ + self.drop_path(x)  # [batch, 3136, 96]\n        # 7 layer norm\n        x = self.layer_norm_3(x)\n        x_ = x\n        # 8 SW-MSA\n        x = x.view(n, h, w, c)\n        # 8.1cyclic shift windows\n        shifted_x = torch.roll(x, shifts=(-self.shift_size, -self.shift_size), dims=(1, 2))\n        # 8.2partition windows\n        shifted_x_windows = self.window_partition(shifted_x, self.window_size)  # [64*batch, 7, 7, 96]\n        shifted_x_windows = shifted_x_windows.view(-1, self.window_size * self.window_size, c)  # [64*batch, 49, 96]\n        # 8.3attention\n        s_attention_windows = self.shift_window_attention(shifted_x_windows, self.attn_mask)  # [64*batch, 49, 96]\n        # 8.4merge windows\n        s_attention_windows = s_attention_windows.view(-1, self.window_size, self.window_size,\n                                                       c)  # [64*batch, 7, 7, 96]\n        # 8.5reverse window\n        shifted_x = self.window_reverse(s_attention_windows, self.window_size, h, w)  # [batch, 56, 56, 96]\n        # 8.6reverse cyclic shift windows\n        x = torch.roll(shifted_x, shifts=(self.shift_size, self.shift_size), dims=(1, 2))\n        x = x.view(n, h * w, c)  # [batch, 3136, 96]\n        # 9 shortcut 3\n        x = x_ + self.drop_path(x)\n        x_ = x\n        # 10 layer norm\n        x = self.layer_norm_3(x)\n        # 11 mlp 2\n        x = self.mlp_2(x)\n        # 12 shortcut 4\n        x = x_ + self.drop_path(x)\n        return x\n</code></pre></p>"},{"location":"cv/SwinTransformer/#patch-merging","title":"Patch Merging\u64cd\u4f5c","text":"<p>Swin Transformer\u63d0\u51fa\u6765\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u6c60\u5316\u7684\u64cd\u4f5c\u53eb\u505a patch merging\uff0c\u5c31\u662f\u628a\u76f8\u90bb\u7684\u5c0f patch \u5408\u6210\u4e00\u4e2a\u5927 patch\uff0c\u8fd9\u6837\u5408\u5e76\u51fa\u6765\u7684\u8fd9\u4e00\u4e2a\u5927patch\u5176\u5b9e\u5c31\u80fd\u770b\u5230\u4e4b\u524d\u56db\u4e2a\u5c0fpatch\u770b\u5230\u7684\u5185\u5bb9\uff0c\u5b83\u7684\u611f\u53d7\u91ce\u5c31\u589e\u5927\u4e86\uff0c\u540c\u65f6\u4e5f\u80fd\u6293\u4f4f\u591a\u5c3a\u5bf8\u7684\u7279\u5f81\u3002</p> <p>Patch Merging \u8fd9\u6837\u5c31\u53ef\u4ee5\u8d77\u5230\u4e0b\u91c7\u6837\u4e00\u4e2a\u7279\u5f81\u56fe\u7684\u6548\u679c\u4e86</p> <p>\u8fd9\u91cc\u56e0\u4e3a\u662f\u60f3\u4e0b\u91c7\u6837\u4e24\u500d\uff0c\u6240\u4ee5\u8bf4\u5728\u9009\u70b9\u7684\u65f6\u5019\u662f\u6bcf\u9694\u4e00\u4e2a\u70b9\u9009\u4e00\u4e2a </p> <p>\u5176\u5b9e\u5728\u8fd9\u91cc\u76841\u30012\u30013\u30014\u5e76\u4e0d\u662f\u77e9\u9635\u91cc\u6709\u7684\u503c\uff0c\u800c\u662f\u7ed9\u5b83\u7684\u4e00\u4e2a\u5e8f\u53f7\uff0c\u540c\u6837\u5e8f\u53f7\u4f4d\u7f6e\u4e0a\u7684 patch \u5c31\u4f1a\u88ab merge \u5230\u4e00\u8d77\uff0c\u8fd9\u4e2a\u5e8f\u53f7\u53ea\u662f\u4e3a\u4e86\u5e2e\u52a9\u7406\u89e3 \u7ecf\u8fc7\u9694\u4e00\u4e2a\u70b9\u91c7\u4e00\u4e2a\u6837\u4e4b\u540e\uff0c\u539f\u6765\u7684\u8fd9\u4e2a\u5f20\u91cf\u5c31\u53d8\u6210\u4e86\u56db\u4e2a\u5f20\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\u6240\u6709\u76841\u90fd\u5728\u4e00\u8d77\u4e86\uff0c2\u5728\u4e00\u8d77\uff0c3\u5728\u4e00\u8d77\uff0c4\u5728\u4e00\u8d77\uff0c\u5982\u679c\u539f\u5f20\u91cf\u7684\u7ef4\u5ea6\u662f h * w * c \uff0c\u5f53\u7136\u8fd9\u91cc c \u6ca1\u6709\u753b\u51fa\u6765\uff0c\u7ecf\u8fc7\u8fd9\u6b21\u91c7\u6837\u4e4b\u540e\u5c31\u5f97\u5230\u4e864\u4e2a\u5f20\u91cf\uff0c\u6bcf\u4e2a\u5f20\u91cf\u7684\u5927\u5c0f\u662f h/2\u3001w/2\uff0c\u5b83\u7684\u5c3a\u5bf8\u90fd\u7f29\u5c0f\u4e86\u4e00\u500d \u73b0\u5728\u628a\u8fd9\u56db\u4e2a\u5f20\u91cf\u5728 c \u7684\u7ef4\u5ea6\u4e0a\u62fc\u63a5\u8d77\u6765\uff0c\u5f20\u91cf\u7684\u5927\u5c0f\u5c31\u53d8\u6210\u4e86 h/2 * w/2 * 4c\uff0c\u76f8\u5f53\u4e8e\u7528\u7a7a\u95f4\u4e0a\u7684\u7ef4\u5ea6\u6362\u4e86\u66f4\u591a\u7684\u901a\u9053\u6570 \u901a\u8fc7\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u5c31\u628a\u539f\u6765\u4e00\u4e2a\u5927\u7684\u5f20\u91cf\u53d8\u5c0f\u4e86\uff0c\u5c31\u50cf\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u91cc\u7684\u6c60\u5316\u64cd\u4f5c\u4e00\u6837\uff0c\u4e3a\u4e86\u8ddf\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u90a3\u8fb9\u4fdd\u6301\u4e00\u81f4\uff08\u4e0d\u8bba\u662f VGGNet \u8fd8\u662f ResNet\uff0c\u4e00\u822c\u5728\u6c60\u5316\u64cd\u4f5c\u964d\u7ef4\u4e4b\u540e\uff0c\u901a\u9053\u6570\u90fd\u4f1a\u7ffb\u500d\uff0c\u4ece128\u53d8\u6210256\uff0c\u4ece256\u518d\u53d8\u6210512\uff09\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e5f\u53ea\u60f3\u8ba9\u4ed6\u7ffb\u500d\uff0c\u800c\u4e0d\u662f\u53d8\u62104\u500d\uff0c\u6240\u4ee5\u7d27\u63a5\u7740\u53c8\u518d\u505a\u4e86\u4e00\u6b21\u64cd\u4f5c\uff0c\u5c31\u662f\u5728 c \u7684\u7ef4\u5ea6\u4e0a\u7528\u4e00\u4e2a1\u4e581\u7684\u5377\u79ef\uff0c\u628a\u901a\u9053\u6570\u964d\u4e0b\u6765\u53d8\u62102c\uff0c\u901a\u8fc7\u8fd9\u4e2a\u64cd\u4f5c\u5c31\u80fd\u628a\u539f\u6765\u4e00\u4e2a\u5927\u5c0f\u4e3a hwc \u7684\u5f20\u91cf\u53d8\u6210 h/2 * w/2 *2c \u7684\u4e00\u4e2a\u5f20\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\u7a7a\u95f4\u5927\u5c0f\u51cf\u534a\uff0c\u4f46\u662f\u901a\u9053\u6570\u4e582\uff0c\u8fd9\u6837\u5c31\u8ddf\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5b8c\u5168\u5bf9\u7b49\u8d77\u6765\u4e86 \u6574\u4e2a\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f Patch Merging\uff0c\u7ecf\u5386\u8fc7\u8fd9\u6b21Patch Merging\u64cd\u4f5c\u4e4b\u540e\uff0c\u8f93\u51fa\u7684\u5927\u5c0f\u5c31\u4ece56x56x96\u53d8\u6210\u4e8628x28x192\uff0c\u7ecf\u8fc7stage2\u4e2d\u7684 Transformer block\uff0c\u5c3a\u5bf8\u662f\u4e0d\u53d8\u7684\uff0c\u6240\u4ee5\u51fa\u6765\u4e4b\u540e\u8fd8\u662f28x28x192</p> <p>\u8fd9\u6837\u7b2c\u4e8c\u9636\u6bb5\u4e5f\u5c31\u5b8c\u6210\u4e86\uff0c\u7b2c\u4e09\u548c\u7b2c\u56db\u9636\u6bb5\u90fd\u662f\u540c\u7406\uff0c\u90fd\u662f\u5148\u8fdb\u6765\u505a\u4e00\u6b21Patch Merging\uff0c\u7136\u540e\u518d\u901a\u8fc7\u4e00\u4e9b Swin Transformer block\uff0c\u6240\u4ee5\u7ef4\u5ea6\u5c31\u8fdb\u4e00\u6b65\u964d\u6210\u4e8614x14x384\u4ee5\u53ca7x7x768</p> <p>\u8fd9\u91cc\u5176\u5b9e\u4f1a\u53d1\u73b0\uff0c\u7279\u5f81\u56fe\u7684\u7ef4\u5ea6\u771f\u7684\u8ddf\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u597d\u50cf\uff0c\u56e0\u4e3a\u5982\u679c\u56de\u60f3\u6b8b\u5dee\u7f51\u7edc\u7684\u591a\u5c3a\u5bf8\u7684\u7279\u5f81\uff0c\u5c31\u662f\u7ecf\u8fc7\u6bcf\u4e2a\u6b8b\u5dee\u9636\u6bb5\u4e4b\u540e\u7684\u7279\u5f81\u56fe\u5927\u5c0f\u4e5f\u662f56x56\u300128x28\u300114x14\uff0c\u6700\u540e\u662f7x7</p> <p>\u800c\u4e14\u4e3a\u4e86\u548c\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4fdd\u6301\u4e00\u81f4\uff0cSwin Transformer\u8fd9\u7bc7\u8bba\u6587\u5e76\u6ca1\u6709\u50cf ViT \u4e00\u6837\u4f7f\u7528 CLS token\uff0cViT \u662f\u7ed9\u521a\u5f00\u59cb\u7684\u8f93\u5165\u5e8f\u5217\u53c8\u52a0\u4e86\u4e00\u4e2a CLS token\uff0c\u6240\u4ee5\u8fd9\u4e2a\u957f\u5ea6\u5c31\u4ece196\u53d8\u6210\u4e86197\uff0c\u6700\u540e\u62ff CLS token \u7684\u7279\u5f81\u76f4\u63a5\u53bb\u505a\u5206\u7c7b\uff0c\u4f46 Swin Transformer \u6ca1\u6709\u7528\u8fd9\u4e2a token\uff0c\u5b83\u662f\u50cf\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e00\u6837\uff0c\u5728\u5f97\u5230\u6700\u540e\u7684\u7279\u5f81\u56fe\u4e4b\u540e\u7528global average polling\uff0c\u5c31\u662f\u5168\u5c40\u6c60\u5316\u7684\u64cd\u4f5c\uff0c\u76f4\u63a5\u628a7x7\u5c31\u53d6\u5e73\u5747\u62c9\u76f4\u53d8\u62101\u4e86\u3002\u4f5c\u8005\u8fd9\u4e2a\u56fe\u91cc\u5e76\u6ca1\u6709\u753b\uff0c\u56e0\u4e3a Swin Transformer\u7684\u672c\u610f\u5e76\u4e0d\u662f\u53ea\u505a\u5206\u7c7b\uff0c\u5b83\u8fd8\u4f1a\u53bb\u505a\u68c0\u6d4b\u548c\u5206\u5272\uff0c\u6240\u4ee5\u8bf4\u5b83\u53ea\u753b\u4e86\u9aa8\u5e72\u7f51\u7edc\u7684\u90e8\u5206\uff0c\u6ca1\u6709\u53bb\u753b\u6700\u540e\u7684\u5206\u7c7b\u5934\u6216\u8005\u68c0\u6d4b\u5934\uff0c\u4f46\u662f\u5982\u679c\u662f\u505a\u5206\u7c7b\u7684\u8bdd\uff0c\u6700\u540e\u5c31\u53d8\u6210\u4e861x768\uff0c\u7136\u540e\u53c8\u53d8\u6210\u4e861x1000\u3002\u5982\u679c\u662f\u505aImageNet\u7684\u8bdd\uff0c\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u6574\u4e2a\u4e00\u4e2a\u5206\u7c7b\u7f51\u7edc\u7684\u524d\u5411\u8fc7\u7a0b\u3002</p> <p>\u6240\u4ee5\u770b\u5b8c\u6574\u4e2a\u524d\u5411\u8fc7\u7a0b\u4e4b\u540e\uff0c\u5c31\u4f1a\u53d1\u73b0 Swin Transformer \u6709\u56db\u4e2a stage\uff0c\u8fd8\u6709\u7c7b\u4f3c\u4e8e\u6c60\u5316\u7684 patch merging \u64cd\u4f5c\uff0c\u81ea\u6ce8\u610f\u529b\u8fd8\u662f\u5728\u5c0f\u7a97\u53e3\u4e4b\u5185\u505a\u7684\uff0c\u4ee5\u53ca\u6700\u540e\u8fd8\u7528\u7684\u662f global average polling\uff0c\u6240\u4ee5\u8bf4 Swin Transformer \u8fd9\u7bc7\u8bba\u6587\u771f\u7684\u662f\u628a\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u548c Transformer \u8fd9\u4e24\u7cfb\u5217\u7684\u5de5\u4f5c\u5b8c\u7f8e\u7684\u7ed3\u5408\u5230\u4e86\u4e00\u8d77\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u5b83\u662f\u62ab\u7740Transformer\u76ae\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc Python<pre><code>class PatchMerging(nn.Module):\n    def __init__(self, input_resolution, in_dim, norm_layer=nn.LayerNorm):\n        super().__init__()\n        self.input_resolution = input_resolution\n        self.liner = nn.Linear(in_dim * 4, in_dim * 2, bias=False)\n        self.layer_norm = norm_layer(in_dim * 4)\n\n    def forward(self, x):\n        h, w = self.input_resolution\n        n, sql_len, c = x.shape  # [batch, 3136, 96]\n        assert sql_len == h * w, \"input feature has wrong size\"\n        assert h % 2 == 0 and w % 2 == 0, f\"x size ({h}*{w}) are not even.\"\n\n        x = x.view(n, h, w, c)  # [batch, 56, 56, 96]\n\n        x0 = x[:, 0::2, 0::2, :]  # [batch, 28, 28, 96]\n        x1 = x[:, 1::2, 0::2, :]\n        x2 = x[:, 0::2, 1::2, :]\n        x3 = x[:, 1::2, 1::2, :]\n        x = torch.cat([x0, x1, x2, x3], dim=-1)  # [batch, 28, 28, 384]\n\n        x = x.view(n, -1, 4 * c)\n        x = self.layer_norm(x)\n        x = self.liner(x)\n        return x\n</code></pre></p>"},{"location":"cv/SwinTransformer/#basiclayer","title":"BasicLayer","text":"Python<pre><code>class BasicLayer(nn.Module):\n    def __init__(self, embed_dim, input_resolution, depth, num_head, window_size, norm_layer, is_last_layer=False):\n        super().__init__()\n        self.is_last_layer = is_last_layer\n        # swin Transformer block 56-&gt;28-&gt;14-&gt;7\n        self.stbs = nn.ModuleList([SwinTransformerBlock(in_dim=embed_dim, input_resolution=input_resolution,\n                                                        num_heads=num_head, window_size=window_size,\n                                                        shift_size=window_size // 2) for _ in range(depth)])\n\n        # patch merging\n        self.pm = PatchMerging(input_resolution=input_resolution, in_dim=embed_dim, norm_layer=norm_layer)\n\n    def forward(self, x):\n        for stb in self.stbs:\n            x = stb(x)\n        if not self.is_last_layer:\n            x = self.pm(x)\n        return x\n</code></pre>"},{"location":"cv/SwinTransformer/#w-msasw-msa","title":"W-MSA\u548cSW-MSA\u7a97\u53e3\u81ea\u6ce8\u610f\u529b\uff1a","text":"Python<pre><code>class WindowAttention(nn.Module):\n    def __init__(self, num_hidden, window_size, n_head, bias=False, dropout=0.1):\n        super().__init__()\n        self.num_hidden = num_hidden\n        self.num_head = n_head\n        self.window_size = window_size\n\n        self.q_mat = nn.Linear(num_hidden, num_hidden, bias=bias)\n        self.k_mat = nn.Linear(num_hidden, num_hidden, bias=bias)\n        self.v_mat = nn.Linear(num_hidden, num_hidden, bias=bias)\n        self.attention_dropout = nn.Dropout(dropout)\n        self.concat_mat = nn.Linear(num_hidden, num_hidden, bias=bias)\n        self.dropout = nn.Dropout(dropout)\n\n        self.softmax = nn.Softmax(dim=-1)\n\n        # define a parameter table of relative position bias\n        self.relative_position_bias_table = nn.Parameter(\n            torch.zeros((2 * window_size - 1) * (2 * window_size - 1), n_head))  # 2*Wh-1 * 2*Ww-1, nH\n\n        # get pair-wise relative position index for each token inside the window\n        coords_h = torch.arange(self.window_size)\n        coords_w = torch.arange(self.window_size)\n        coords = torch.stack(torch.meshgrid([coords_h, coords_w]))  # 2, Wh, Ww\n        coords_flatten = torch.flatten(coords, 1)  # 2, Wh*Ww\n        relative_coords = coords_flatten[:, :, None] - coords_flatten[:, None, :]  # 2, Wh*Ww, Wh*Ww\n        relative_coords = relative_coords.permute(1, 2, 0).contiguous()  # Wh*Ww, Wh*Ww, 2\n        relative_coords[:, :, 0] += self.window_size - 1  # shift to start from 0\n        relative_coords[:, :, 1] += self.window_size - 1\n        relative_coords[:, :, 0] *= 2 * self.window_size - 1\n        relative_position_index = relative_coords.sum(-1)  # Wh*Ww, Wh*Ww\n        self.register_buffer(\"relative_position_index\", relative_position_index)\n\n    def forward(self, x, mask=None):\n        n, sql_len, c = x.shape\n        # \u5206\u591a\u4e2a\u5934  [batch, seq_len, hidden_size] -&gt; [batch, seq_len, head_size, d_k] -&gt; [batch, head_size, seq_len, d_k]\n        d_k = self.num_hidden // self.num_head\n        q = self.q_mat(x).view(x.size(0), -1, self.num_head, d_k).transpose(1, 2)\n        k = self.k_mat(x).view(x.size(0), -1, self.num_head, d_k).transpose(1, 2)\n        v = self.v_mat(x).view(x.size(0), -1, self.num_head, d_k).transpose(1, 2)\n        score = q @ k.transpose(-2, -1)\n\n        # relative position\n        relative_position_bias = self.relative_position_bias_table[self.relative_position_index.view(-1)].view(\n            self.window_size * self.window_size, self.window_size * self.window_size, -1)  # [49, 49, n_head]\n        relative_position_bias = relative_position_bias.permute(2, 0, 1).contiguous()  # [n_head, 49, 49]\n        score = score + relative_position_bias.unsqueeze(0)\n        # mask\n        if mask is not None:\n            score = score.view(n // mask.shape[0], mask.shape[0], self.num_head, sql_len, sql_len)\n            score = score + mask.unsqueeze(1).unsqueeze(0)\n            score = score.view(-1, self.num_head, sql_len, sql_len)  # [batch, n_head, 49, 49]\n\n        score = self.softmax(score)\n\n        score = self.attention_dropout(score)\n        attention = score @ v  # [batch, head, sql_len ,d_k]\n        x = attention.transpose(1, 2).reshape(n, sql_len, c)\n        x = self.concat_mat(x)\n        x = self.dropout(x)\n        return x\n</code></pre> <p> \u57fa\u4e8e\u7a97\u53e3\uff08\u79fb\u52a8\u7a97\u53e3\uff09\u7684\u81ea\u6ce8\u610f\u529b</p> <p>\u5168\u5c40\u81ea\u6ce8\u610f\u529b\uff1a\u4f1a\u5bfc\u81f4\u5e73\u65b9\u500d\u7684\u590d\u6742\u5ea6\uff0c\uff08\u5bf9\u4e8e\u89c6\u89c9\u7684\u4e0b\u6e38\u4efb\u52a1\uff0c\u5c24\u5176\u662f\u5bc6\u96c6\u578b\u7684\u4efb\u52a1\uff0c\u6216\u8005\u9047\u5230\u975e\u5e38\u5927\u5c3a\u5bf8\u7684\u56fe\u7247\uff0c\u5168\u5c40\u8ba1\u7b97\u81ea\u6ce8\u610f\u529b\u7684\u590d\u6742\u5ea6\u5c31\u975e\u5e38\u8d35\uff09</p> <p>\u6700\u5c0f\u8ba1\u7b97\u5355\u5143\u662fpatch\uff0c\u6bcf\u4e00\u4e2a\u7a97\u53e3\u91cc\u6709M x M\u4e2apatch\uff08\u8bba\u6587\u91ccM=7\uff09\uff0c\u6240\u6709\u7684\u81ea\u6ce8\u610f\u529b\u8ba1\u7b97\u90fd\u662f\u5728\u5c0f\u7a97\u53e3\u91cc\u5b8c\u6210\u7684\uff08\u5e8f\u5217\u957f\u5ea6\u6c38\u8fdc=7x7=49\uff09\uff0c\u539f\u6765\u5927\u7684\u6574\u4f53\u7279\u5f81\u56fe\u4f1a\u6709\u591a\u5c11\u7a97\u53e3\uff1f8 x 8=64</p> <p>\u6211\u4eec\u4f1a\u572864\u4e2a\u7a97\u53e3\u91cc\u5206\u522b\u8ba1\u7b97\u81ea\u6ce8\u610f\u529b</p> <p>\uff081\uff09\u6807\u51c6\u7684\u591a\u5934\u81ea\u6ce8\u610f\u529b\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\uff0ch=w=56</p> <p>\uff082\uff09\u57fa\u4e8e\u7a97\u53e3\u7684\u81ea\u6ce8\u610f\u529b\uff0cM=7\uff08\u4e00\u4e2a\u7a97\u53e3\u67d0\u6761\u8fb9\u4e0a\u6709\u591a\u5c11patch\uff09</p> <p>\u4e24\u516c\u5f0f\u5dee\u522b\uff0c56 x 56 \u548c7 x 7\u76f8\u5dee\u5de8\u5927\uff0c\u7a97\u53e3\u81ea\u6ce8\u610f\u529b\u5f88\u597d\u7684\u89e3\u51b3\u4e86\u8ba1\u7b97\u91cf\u95ee\u9898</p> <p>\u65b0\u95ee\u9898\uff1a\u7a97\u53e3\u548c\u7a97\u53e3\u4e4b\u95f4\u6ca1\u6709\u901a\u4fe1\u4e86\uff0c\u8fd9\u6837\u8fbe\u4e0d\u5230\u5168\u5c40\u5efa\u6a21\u4e86\uff0c\u4f1a\u9650\u5236\u6a21\u578b\u7684\u80fd\u529b\uff0c\u6211\u4eec\u5e0c\u671b\u7a97\u53e3\u548c\u7a97\u53e3\u4e4b\u95f4\u901a\u4fe1\u8d77\u6765</p> <p>\u4f5c\u8005\u63d0\u51fa\u79fb\u52a8\u7a97\u53e3\u7684\u65b9\u5f0f </p> <p>\u4e0a\u56fe\u662f\u4e00\u4e2a\u57fa\u7840\u7248\u672c\u7684\u79fb\u52a8\u7a97\u53e3\uff0c\u5c31\u662f\u628a\u5de6\u8fb9\u7684\u7a97\u53e3\u6a21\u5f0f\u53d8\u6210\u4e86\u53f3\u8fb9\u7684\u7a97\u53e3\u65b9\u5f0f</p> <p>\u867d\u7136\u8fd9\u79cd\u65b9\u5f0f\u5df2\u7ecf\u80fd\u591f\u8fbe\u5230\u7a97\u53e3\u548c\u7a97\u53e3\u4e4b\u95f4\u7684\u4e92\u76f8\u901a\u4fe1\u4e86\uff0c\u4f46\u662f\u4f1a\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u539f\u6765\u8ba1\u7b97\u7684\u65f6\u5019\uff0c\u7279\u5f81\u56fe\u4e0a\u53ea\u6709\u56db\u4e2a\u7a97\u53e3\uff0c\u4f46\u662f\u505a\u5b8c\u79fb\u52a8\u7a97\u53e3\u64cd\u4f5c\u4e4b\u540e\u5f97\u5230\u4e869\u4e2a\u7a97\u53e3\uff0c\u7a97\u53e3\u7684\u6570\u91cf\u589e\u52a0\u4e86\uff0c\u800c\u4e14\u6bcf\u4e2a\u7a97\u53e3\u91cc\u7684\u5143\u7d20\u5927\u5c0f\u4e0d\u4e00\uff0c\u6bd4\u5982\u8bf4\u4e2d\u95f4\u7684\u7a97\u53e3\u8fd8\u662f4*4\uff0c\u670916\u4e2a patch\uff0c\u4f46\u662f\u522b\u7684\u7a97\u53e3\u6709\u7684\u67094\u4e2a patch\uff0c\u6709\u7684\u67098\u4e2a patch\uff0c\u90fd\u4e0d\u4e00\u6837\u4e86\uff0c\u5982\u679c\u60f3\u505a\u5feb\u901f\u8fd0\u7b97\uff0c\u5c31\u662f\u628a\u8fd9\u4e9b\u7a97\u53e3\u5168\u90fd\u538b\u6210\u4e00\u4e2a patch\u76f4\u63a5\u53bb\u7b97\u81ea\u6ce8\u610f\u529b\uff0c\u5c31\u505a\u4e0d\u5230\u4e86\uff0c\u56e0\u4e3a\u7a97\u53e3\u7684\u5927\u5c0f\u4e0d\u4e00\u6837</p> <p>\u6709\u4e00\u4e2a\u7b80\u5355\u7c97\u66b4\u7684\u89e3\u51b3\u65b9\u5f0f\u5c31\u662f\u628a\u8fd9\u4e9b\u5c0f\u7a97\u53e3\u5468\u56f4\u518d pad \u4e0a0 \uff0c\u628a\u5b83\u7167\u6837pad\u6210\u548c\u4e2d\u95f4\u7a97\u53e3\u4e00\u6837\u5927\u7684\u7a97\u53e3\uff0c\u8fd9\u6837\u5c31\u67099\u4e2a\u5b8c\u5168\u4e00\u6837\u5927\u7684\u7a97\u53e3\uff0c\u8fd9\u6837\u5c31\u8fd8\u80fd\u628a\u5b83\u4eec\u538b\u6210\u4e00\u4e2abatch\uff0c\u5c31\u4f1a\u5feb\u5f88\u591a</p> <p>\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u65e0\u5f62\u4e4b\u4e2d\u8ba1\u7b97\u590d\u6742\u5ea6\u5c31\u63d0\u5347\u4e86\uff0c\u56e0\u4e3a\u539f\u6765\u5982\u679c\u7b97\u57fa\u4e8e\u7a97\u53e3\u7684\u81ea\u6ce8\u610f\u529b\u53ea\u7528\u7b974\u4e2a\u7a97\u53e3\uff0c\u4f46\u662f\u73b0\u5728\u9700\u8981\u53bb\u7b979\u4e2a\u7a97\u53e3\uff0c\u590d\u6742\u5ea6\u4e00\u4e0b\u63d0\u5347\u4e86\u4e24\u500d\u591a\uff0c\u6240\u4ee5\u8fd8\u662f\u76f8\u5f53\u53ef\u89c2\u7684</p> <p>\u90a3\u600e\u4e48\u80fd\u8ba9\u7b2c\u4e8c\u6b21\u79fb\u4f4d\u5b8c\u7684\u7a97\u53e3\u6570\u91cf\u8fd8\u662f\u4fdd\u63014\u4e2a\uff0c\u800c\u4e14\u6bcf\u4e2a\u7a97\u53e3\u91cc\u7684patch\u6570\u91cf\u4e5f\u8fd8\u4fdd\u6301\u4e00\u81f4\u5462\uff1f\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u4e2a\u975e\u5e38\u5de7\u5999\u7684\u63a9\u7801\u65b9\u5f0f\uff0c\u5982\u4e0b\u56fe\u6240\u793a</p> <p>\u4e0a\u56fe\u662f\u8bf4\uff0c\u5f53\u901a\u8fc7\u666e\u901a\u7684\u79fb\u52a8\u7a97\u53e3\u65b9\u5f0f\uff0c\u5f97\u52309\u4e2a\u7a97\u53e3\u4e4b\u540e\uff0c\u73b0\u5728\u4e0d\u5728\u8fd99\u4e2a\u7a97\u53e3\u4e0a\u7b97\u81ea\u6ce8\u610f\u529b\uff0c\u5148\u518d\u505a\u4e00\u6b21\u5faa\u73af\u79fb\u4f4d\uff08 cyclic shift \uff09 \u7ecf\u8fc7\u8fd9\u6b21\u5faa\u73af\u79fb\u4f4d\u4e4b\u540e\uff0c\u539f\u6765\u7684\u7a97\u53e3\uff08\u865a\u7ebf\uff09\u5c31\u53d8\u6210\u4e86\u73b0\u5728\u7a97\u53e3\uff08\u5b9e\u7ebf\uff09\u7684\u6837\u5b50\uff0c\u90a3\u5982\u679c\u5728\u5927\u7684\u7279\u5f81\u56fe\u4e0a\u518d\u628a\u5b83\u5206\u6210\u56db\u5bab\u683c\u7684\u8bdd\uff0c\u6211\u5728\u5c31\u53c8\u5f97\u5230\u4e86\u56db\u4e2a\u7a97\u53e3\uff0c\u610f\u601d\u5c31\u662f\u8bf4\u79fb\u4f4d\u4e4b\u524d\u7684\u7a97\u53e3\u6570\u4e5f\u662f4\u4e2a\uff0c\u79fb\u5b8c\u4f4d\u4e4b\u540e\u518d\u505a\u4e00\u6b21\u5faa\u73af\u79fb\u4f4d\u5f97\u5230\u7a97\u53e3\u6570\u8fd8\u662f4\u4e2a\uff0c\u8fd9\u6837\u7a97\u53e3\u7684\u6570\u91cf\u5c31\u56fa\u5b9a\u4e86\uff0c\u4e5f\u5c31\u8bf4\u8ba1\u7b97\u590d\u6742\u5ea6\u5c31\u56fa\u5b9a\u4e86</p> <p>\u4f46\u662f\u65b0\u7684\u95ee\u9898\u5c31\u6765\u4e86\uff0c\u867d\u7136\u5bf9\u4e8e\u79fb\u4f4d\u540e\u5de6\u4e0a\u89d2\u7684\u7a97\u53e3\uff08\u4e5f\u5c31\u662f\u79fb\u4f4d\u524d\u6700\u4e2d\u95f4\u7684\u7a97\u53e3\uff09\u6765\u8bf4\uff0c\u91cc\u9762\u7684\u5143\u7d20\u90fd\u662f\u4e92\u76f8\u7d27\u6328\u7740\u7684\uff0c\u4ed6\u4eec\u4e4b\u95f4\u53ef\u4ee5\u4e92\u76f8\u4e24\u4e24\u505a\u81ea\u6ce8\u610f\u529b\uff0c\u4f46\u662f\u5bf9\u4e8e\u5269\u4e0b\u51e0\u4e2a\u7a97\u53e3\u6765\u8bf4\uff0c\u5b83\u4eec\u91cc\u9762\u7684\u5143\u7d20\u662f\u4ece\u522b\u7684\u5f88\u8fdc\u7684\u5730\u65b9\u642c\u8fc7\u6765\u7684\uff0c\u6240\u4ee5\u4ed6\u4eec\u4e4b\u95f4\uff0c\u6309\u9053\u7406\u6765\u8bf4\u662f\u4e0d\u5e94\u8be5\u53bb\u505a\u81ea\u6ce8\u610f\u529b\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ed6\u4eec\u4e4b\u95f4\u4e0d\u5e94\u8be5\u6709\u4ec0\u4e48\u592a\u5927\u7684\u8054\u7cfb</p> <p>\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5c31\u9700\u8981\u4e00\u4e2a\u5f88\u5e38\u89c4\u7684\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u63a9\u7801\u64cd\u4f5c\uff0c\u8fd9\u5728Transformer\u8fc7\u53bb\u7684\u5de5\u4f5c\u91cc\u662f\u5c42\u51fa\u4e0d\u7a77\uff0c\u5f88\u591a\u5de5\u4f5c\u91cc\u90fd\u6709\u5404\u5f0f\u5404\u6837\u7684\u63a9\u7801\u64cd\u4f5c</p> <p>\u5728 Swin Transformer\u8fd9\u7bc7\u8bba\u6587\u91cc\uff0c\u4f5c\u8005\u4e5f\u5de7\u5999\u7684\u8bbe\u8ba1\u4e86\u51e0\u79cd\u63a9\u7801\u7684\u65b9\u5f0f\uff0c\u4ece\u800c\u80fd\u8ba9\u4e00\u4e2a\u7a97\u53e3\u4e4b\u4e2d\u4e0d\u540c\u7684\u533a\u57df\u4e4b\u95f4\u4e5f\u80fd\u7528\u4e00\u6b21\u524d\u5411\u8fc7\u7a0b\uff0c\u5c31\u80fd\u628a\u81ea\u6ce8\u610f\u529b\u7b97\u51fa\u6765\uff0c\u4f46\u662f\u4e92\u76f8\u4e4b\u95f4\u90fd\u4e0d\u5e72\u6270\uff0c\u4e5f\u5c31\u662f\u540e\u9762\u7684 masked Multi-head Self Attention\uff08MSA\uff09</p> <p>\u7b97\u5b8c\u4e86\u591a\u5934\u81ea\u6ce8\u610f\u529b\u4e4b\u540e\uff0c\u8fd8\u6709\u6700\u540e\u4e00\u6b65\u5c31\u662f\u9700\u8981\u628a\u5faa\u73af\u4f4d\u79fb\u518d\u8fd8\u539f\u56de\u53bb\uff0c\u4e5f\u5c31\u662f\u8bf4\u9700\u8981\u628aA\u3001B\u3001C\u518d\u8fd8\u539f\u5230\u539f\u6765\u7684\u4f4d\u7f6e\u4e0a\u53bb\uff0c\u539f\u56e0\u662f\u8fd8\u9700\u8981\u4fdd\u6301\u539f\u6765\u56fe\u7247\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5927\u6982\u662f\u4e0d\u53d8\u7684\uff0c\u6574\u4f53\u56fe\u7247\u7684\u8bed\u4e49\u4fe1\u606f\u4e5f\u662f\u4e0d\u53d8\u7684\uff0c\u5982\u679c\u4e0d\u628a\u5faa\u73af\u4f4d\u79fb\u8fd8\u539f\u7684\u8bdd\uff0c\u90a3\u76f8\u5f53\u4e8e\u5728\u505aTransformer\u7684\u64cd\u4f5c\u4e4b\u4e2d\uff0c\u4e00\u76f4\u5728\u628a\u56fe\u7247\u5f80\u53f3\u4e0b\u89d2\u79fb\uff0c\u4e0d\u505c\u7684\u5f80\u53f3\u4e0b\u89d2\u79fb\uff0c\u8fd9\u6837\u56fe\u7247\u7684\u8bed\u4e49\u4fe1\u606f\u5f88\u6709\u53ef\u80fd\u5c31\u88ab\u7834\u574f\u6389\u4e86</p> Python<pre><code>import torch\n\nimport matplotlib.pyplot as plt\n\n\ndef window_partition(x, window_size):\n    \"\"\"\n    Args:\n        x: (B, H, W, C)\n        window_size (int): window size\n\n    Returns:\n        windows: (num_windows*B, window_size, window_size, C)\n    \"\"\"\n    B, H, W, C = x.shape\n    x = x.view(B, H // window_size, window_size, W // window_size, window_size, C)\n    windows = x.permute(0, 1, 3, 2, 4, 5).contiguous().view(-1, window_size, window_size, C)\n    return windows\n\n\nwindow_size = 7\nshift_size = 3\nH, W = 14, 14\nimg_mask = torch.zeros((1, H, W, 1))  # 1 H W 1\nh_slices = (slice(0, -window_size),\n            slice(-window_size, -shift_size),\n            slice(-shift_size, None))\nw_slices = (slice(0, -window_size),\n            slice(-window_size, -shift_size),\n            slice(-shift_size, None))\ncnt = 0\nfor h in h_slices:\n    for w in w_slices:\n        img_mask[:, h, w, :] = cnt\n        cnt += 1\n\nmask_windows = window_partition(img_mask, window_size)  # nW, window_size, window_size, 1\nmask_windows = mask_windows.view(-1, window_size * window_size)\n\nattn_mask = mask_windows.unsqueeze(1) - mask_windows.unsqueeze(2)\nattn_mask = attn_mask.masked_fill(attn_mask != 0, float(-100.0)).masked_fill(attn_mask == 0, float(0.0))\n\nplt.matshow(img_mask[0, :, :, 0].numpy())\nplt.matshow(attn_mask[0].numpy())\nplt.matshow(attn_mask[1].numpy())\nplt.matshow(attn_mask[2].numpy())\nplt.matshow(attn_mask[3].numpy())\n\nplt.show()\n</code></pre> <p></p> <p>\u6240\u4ee5\u8bf4\u6574\u4f53\u800c\u8a00\uff0c\u4e0a\u56fe\u4ecb\u7ecd\u4e86\u4e00\u79cd\u9ad8\u6548\u7684\u3001\u6279\u6b21\u7684\u8ba1\u7b97\u65b9\u5f0f\uff0c\u6bd4\u5982\u8bf4\u672c\u6765\u79fb\u52a8\u7a97\u53e3\u4e4b\u540e\u5f97\u5230\u4e869\u4e2a\u7a97\u53e3\uff0c\u800c\u4e14\u7a97\u53e3\u4e4b\u95f4\u7684patch\u6570\u91cf\u6bcf\u4e2a\u90fd\u4e0d\u4e00\u6837\uff0c\u4e3a\u4e86\u8fbe\u5230\u9ad8\u6548\u6027\uff0c\u4e3a\u4e86\u80fd\u591f\u8fdb\u884c\u6279\u6b21\u5904\u7406\uff0c\u5148\u8fdb\u884c\u4e00\u6b21\u5faa\u73af\u4f4d\u79fb\uff0c\u628a9\u4e2a\u7a97\u53e3\u53d8\u62104\u4e2a\u7a97\u53e3\uff0c\u7136\u540e\u7528\u5de7\u5999\u7684\u63a9\u7801\u65b9\u5f0f\u8ba9\u6bcf\u4e2a\u7a97\u53e3\u4e4b\u95f4\u80fd\u591f\u5408\u7406\u5730\u8ba1\u7b97\u81ea\u6ce8\u610f\u529b\uff0c\u6700\u540e\u518d\u628a\u7b97\u597d\u7684\u81ea\u6ce8\u610f\u529b\u8fd8\u539f\uff0c\u5c31\u5b8c\u6210\u4e86\u57fa\u4e8e\u79fb\u52a8\u7a97\u53e3\u7684\u81ea\u6ce8\u610f\u529b\u8ba1\u7b97</p> <p>\u4f5c\u8005\u901a\u8fc7\u8fd9\u79cd\u5de7\u5999\u7684\u5faa\u73af\u4f4d\u79fb\u7684\u65b9\u5f0f\u548c\u5de7\u5999\u8bbe\u8ba1\u7684\u63a9\u7801\u6a21\u677f\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u53ea\u9700\u8981\u4e00\u6b21\u524d\u5411\u8fc7\u7a0b\uff0c\u5c31\u80fd\u628a\u6240\u6709\u9700\u8981\u7684\u81ea\u6ce8\u610f\u529b\u503c\u90fd\u7b97\u51fa\u6765\uff0c\u800c\u4e14\u53ea\u9700\u8981\u8ba1\u7b974\u4e2a\u7a97\u53e3\uff0c\u4e5f\u5c31\u662f\u8bf4\u7a97\u53e3\u7684\u6570\u91cf\u6ca1\u6709\u589e\u52a0\uff0c\u8ba1\u7b97\u590d\u6742\u5ea6\u4e5f\u6ca1\u6709\u589e\u52a0\uff0c\u975e\u5e38\u9ad8\u6548\u7684\u5b8c\u6210\u4e86\u8fd9\u4e2a\u4efb\u52a1</p>"},{"location":"cv/SwinTransformer/#swintransformer","title":"SwinTransformer","text":"Python<pre><code>class SwinTransformer(nn.Module):\n    def __init__(self, img_size=(224, 224, 3), patch_size=4, num_classes=1000,\n                 embed_dim=96, depths=[2, 2, 6, 2], num_heads=[3, 6, 12, 24],\n                 window_size=7, mlp_ratio=4., norm_layer=nn.LayerNorm):\n        super().__init__()\n\n        self.num_classes = num_classes\n        self.num_layers = len(depths)\n        self.embed_dim = embed_dim\n        self.num_features = int(embed_dim * 2 ** (self.num_layers - 1))\n        self.mlp_ratio = mlp_ratio\n\n        # patch partition\n        self.patch_embedding = PatchEmbedding(img_size=img_size, patch_size=patch_size, embedding_dim=embed_dim)\n        patches_resolution = self.patch_embedding.patches_resolution\n\n        # swin transformer layers\n        self.swin_layers = nn.ModuleList([\n            BasicLayer(embed_dim=int(embed_dim * 2 ** i),\n                       input_resolution=(patches_resolution[0] // (2 ** i), patches_resolution[1] // (2 ** i)),\n                       depth=depths[i],\n                       num_head=num_heads[i], window_size=window_size, norm_layer=norm_layer,\n                       is_last_layer=False if (i &lt; self.num_layers - 1) else True)\n            for i in range(self.num_layers)\n        ])\n        # print(self.swin_layers)\n        # layer norm\n        self.layer_norm = nn.LayerNorm(self.num_features)\n        # average pooling\n        self.avg_pool = nn.AdaptiveAvgPool1d(1)\n        # linear\n        self.cls_head = nn.Linear(self.num_features, num_classes)\n\n    def forward(self, x):\n        # patch embedding\n        x = self.patch_embedding(x)  # [batch, c, h, w] -&gt; [batch, 3136, 96]\n        # swin transformer layers\n        for layer in self.swin_layers:\n            x = layer(x)  # [batch, 3136, 96] -&gt; [batch, 784, 192] -&gt; [batch, 196, 384] -&gt; [batch, 49, 768]\n            print(x.shape)\n        x = self.layer_norm(x)  # [batch, 49, 768]\n        x = x.transpose(1, 2)  # [batch, 768, 49]\n        # average pooling\n        x = self.avg_pool(x)  # [batch, 768, 1]\n        x = torch.flatten(x, 1)  # [batch, 768]\n        # classify\n        x = self.cls_head(x)  # [batch, class_num]\n        return x\n</code></pre>"},{"location":"cv/Detect%26Track/PFLD/","title":"PFLD","text":"<ol> <li> <p>\u524d\u8a00  PFLD \u5168\u79f0 A Practical Facial Landmark Detector \u662f\u4e00\u4e2a\u7cbe\u5ea6\u9ad8\uff0c\u901f\u5ea6\u5feb\uff0c\u6a21\u578b\u5c0f\u7684\u4eba\u8138\u5173\u952e\u70b9\u68c0\u6d4b\u6a21\u578b\u3002\u5728\u79fb\u52a8\u7aef\u8fbe\u5230\u4e86\u8d85\u5b9e\u65f6\u7684\u6027\u80fd\uff08\u6a21\u578b\u5927\u5c0f 2.1Mb\uff0c\u5728 Qualcomm ARM 845 \u5904\u7406\u5668\u4e0a\u8fbe\u5230 140fps\uff09\uff0c\u4f5c\u8005\u5206\u522b\u6765\u81ea\u6b66\u6c49\u5927\u5b66\uff0c\u5929\u6d25\u5927\u5b66\uff0c\u817e\u8baf AI Lab\uff0c\u7f8e\u56fd\u5929\u666e\u5927\u5b66\uff0c\u6709\u8f83\u5927\u7684\u5b9e\u7528\u610f\u4e49\u3002</p> </li> <li> <p>\u6311\u6218  \u4eba\u8138\u5173\u952e\u70b9\u68c0\u6d4b\u4f5c\u4e3a\u4eba\u8138\u76f8\u5173\u5e94\u7528\u4e2d\u7684\u4e00\u4e2a\u57fa\u7840\u4efb\u52a1\u9762\u4e34\u4e86\u5f88\u591a\u6311\u6218\uff0c\u5305\u62ec\u68c0\u6d4b\u7cbe\u5ea6\uff0c\u5904\u7406\u901f\u5ea6\uff0c\u6a21\u578b\u5927\u5c0f\u8fd9\u4e9b\u56e0\u7d20\u90fd\u8981\u8003\u8651\u5230\uff0c\u5e76\u4e14\u5728\u73b0\u5b9e\u573a\u666f\u4e2d\u5f88\u96be\u83b7\u53d6\u5230\u8d28\u91cf\u975e\u5e38\u9ad8\u7684\u4eba\u8138\uff0c\u6240\u4ee5\u4eba\u8138\u5173\u952e\u70b9\u68c0\u6d4b\u4e3b\u8981\u9762\u4e34\u4e0b\u9762\u51e0\u4e2a\u6311\u6218\uff1a</p> </li> </ol> <p>\u5c40\u90e8\u53d8\u5316\uff1a\u73b0\u5b9e\u573a\u666f\u4e2d\u4eba\u8138\u7684\u8868\u60c5\uff0c\u5e7f\u544a\uff0c\u4ee5\u53ca\u906e\u6321\u60c5\u51b5\u90fd\u6709\u8f83\u5927\u7684\u53d8\u5316\uff0c\u5982 Figure1 \u6240\u793a \u5168\u5c40\u53d8\u5316\uff1a\u59ff\u6001\u548c\u6210\u50cf\u8d28\u91cf\u662f\u5f71\u54cd\u56fe\u50cf\u4e2d\u4eba\u8138\u7684\u8868\u5f81\u7684\u4e24\u4e2a\u4e3b\u8981\u56e0\u7d20\uff0c\u4eba\u8138\u5168\u5c40\u7ed3\u6784\u7684\u9519\u8bef\u4f30\u8ba1\u5c06\u76f4\u63a5\u5bfc\u81f4\u5b9a\u4f4d\u4e0d\u51c6 \u6570\u636e\u4e0d\u5e73\u8861\uff1a\u4e0d\u5e73\u8861\u7684\u6570\u636e\u4f7f\u5f97\u7b97\u6cd5\u6a21\u578b\u65e0\u6cd5\u6b63\u786e\u8868\u793a\u6570\u636e\u7684\u7279\u5f81 \u6a21\u578b\u7684\u6027\u80fd\uff1a\u7531\u4e8e\u624b\u673a\u548c\u5d4c\u5165\u5f0f\u8bbe\u5907\u8ba1\u7b97\u6027\u80fd\u548c\u5185\u5b58\u8d44\u6e90\u7684\u9650\u5236\uff0c\u5fc5\u987b\u8981\u6c42\u68c0\u6d4b\u6a21\u578b\u7684 size \u5c0f\u5904\u7406\u901f\u5ea6\u5feb Figure 1</p> <ol> <li> <p>\u521b\u65b0\u70b9  \u603b\u7684\u6765\u8bf4\uff0c\u672c\u6587\u8bbe\u8ba1\u7684 PFLD \u5728\u590d\u6742\u60c5\u51b5\u4e0b\u4e5f\u53ef\u4ee5\u4fdd\u6301\u9ad8\u7cbe\u5ea6\u3002\u9488\u5bf9\u5168\u5c40\u53d8\u5316\uff0cPFLD \u91c7\u7528\u8f85\u52a9\u7f51\u7edc\u6765\u4f30\u8ba1\u4eba\u8138\u6837\u672c\u7684\u96c6\u5408\u4fe1\u606f\u3002\u9488\u5bf9\u6570\u636e\u4e0d\u5e73\u8861\uff0c\u8bbe\u8ba1\u65b0\u7684\u635f\u5931\u51fd\u6570\uff0c\u52a0\u5927\u5bf9\u96be\u6837\u672c\u7684\u60e9\u7f5a\u529b\u5ea6\u3002\u4f7f\u7528 multi-scale fc \u5c42\u6269\u5c55\u611f\u53d7\u91ce\u7cbe\u786e\u5b9a\u4f4d\u4eba\u8138\u7684\u7279\u5f81\u70b9\u3002\u4f7f\u7528 Mobilenet Block \u6784\u5efa\u7f51\u7edc\u7684 Backbone \u63d0\u5347\u6a21\u578b\u7684\u63a8\u7406\u901f\u5ea6\u53ca\u51cf\u5c11\u6a21\u578b\u7684\u8ba1\u7b97\u91cf\u3002</p> </li> <li> <p>PFLD \u7f51\u7edc\u7ed3\u6784  PFLD \u7684\u7f51\u7edc\u7ed3\u6784\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> </li> </ol> <p>Figure2 PFLD\u7684\u6574\u4f53\u7ed3\u6784</p> <p>\u5176\u4e2d\u9ec4\u8272\u865a\u7ebf\u5708\u8d77\u6765\u7684\u90e8\u5206\u8868\u793a\u4e3b\u5206\u652f\u7f51\u7edc\uff0c\u7528\u4e8e\u9884\u6d4b\u5173\u952e\u7684\u4f4d\u7f6e\u3002\u7eff\u8272\u865a\u7ebf\u5708\u8d77\u6765\u7684\u662f head pose \u8f85\u52a9\u7f51\u7edc\u3002\u8fd9\u6837\u5728\u8bad\u7ec3\u5173\u952e\u70b9\u56de\u5f52\u7684\u540c\u65f6\u9884\u6d4b\u4eba\u8138\u59ff\u6001\uff0c\u4ece\u800c\u4fee\u6539\u635f\u5931\u51fd\u6570\uff0c\u4f7f\u5f97\u6a21\u578b\u66f4\u52a0\u5173\u6ce8\u90a3\u4e9b\u7a00\u6709\u4ee5\u53ca\u59ff\u6001\u89d2\u5ea6\u8fc7\u5927\u7684\u6837\u672c\uff0c\u4ece\u800c\u63d0\u9ad8\u9884\u6d4b\u7684\u7cbe\u5ea6\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\u5728\u4e3b\u5206\u652f\u7f51\u7edc\u4e2d\uff0cPFLD \u5e76\u6ca1\u6709\u91c7\u7528 VGG16\uff0cResNet50 \u7b49\u5927\u6a21\u578b\u3002\u4f46\u4e3a\u4e86\u589e\u5f3a\u6a21\u578b\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u5bf9 MobilenetV2 \u7684\u8f93\u51fa\u7279\u5f81\u8fdb\u884c\u4e86\u7ed3\u6784\u4e0a\u7684\u4fee\u6539\uff0c\u5982 Figure2 \u4e2d\u4e3b\u5206\u652f\u7f51\u7edc\u7684\u53f3\u8fb9\u6240\u793a\u3002PFLD \u878d\u5408\u4e86 3 \u4e2a\u5c3a\u5ea6\u7684\u7279\u5f81\u6765\u589e\u52a0\u6a21\u578b\u7684\u8868\u8fbe\u80fd\u529b\u3002</p> <p>4.1 \u635f\u5931\u51fd\u6570\u8bbe\u8ba1  \u6211\u4eec\u77e5\u9053\u4e00\u822c\u7684\u56de\u5f52\u635f\u5931\u662f MSE \u6216\u8005 Smooth L1 Loss\uff0c\u4f46\u5b83\u4eec\u90fd\u96be\u4ee5\u5e94\u5bf9\u6570\u636e\u4e0d\u5747\u8861\u7684\u60c5\u51b5\uff0c\u4ee5 MSE Loss \u4e3a\u4f8b\uff0c\u635f\u5931\u51fd\u6570\u53ef\u4ee5\u5199\u6210\uff1a</p> <p>\u516c\u5f0f1</p> <p>\u5176\u4e2d M  \u8868\u793a\u4eba\u8138\u6837\u672c\u7684\u6570\u91cf\uff0c N  \u8868\u793a\u6bcf\u5f20\u4eba\u8138\u9884\u8bbe\u7684\u9700\u8981\u68c0\u6d4b\u7684\u7279\u5f81\u70b9\u6570\u76ee\uff0c | | . | |  \u5728\u672c\u6587\u8868\u793a L2 \u8ddd\u79bb\uff0c \u03b3 n  \u8868\u793a\u4e0d\u540c\u7c7b\u578b\u6837\u672c\u7684\u4e0d\u540c\u6743\u91cd\u3002</p> <p>\u800c RetinaNet \u4e2d\u63d0\u51fa\u7684 Focal Loss \u53ef\u4ee5\u8f83\u597d\u7684\u5e94\u5bf9\u4e8c\u5206\u7c7b\u4e2d\u7684\u6570\u636e\u4e0d\u5747\u8861\u60c5\u51b5\uff0c\u53d7\u5230\u8fd9\u4e00\u542f\u53d1\uff0c\u4f5c\u8005\u8bbe\u8ba1\u4e86\u4e0b\u9762\u7684\u635f\u5931\u51fd\u6570\u6765\u7f13\u89e3\u6570\u636e\u4e0d\u5747\u8861\u7684\u60c5\u51b5\uff1a</p> <p>PFLD loss</p> <p>\u2211 C c = 1 w c n \u2211 K k = 1 ( 1 \u2212 c o s \u03b8 k n )  \u4ee3\u8868\u6743\u91cd \u03b3 n \u3002 \u03b8 1 , \u03b8 2 , \u03b8 3  ( K = 3 ) \u5206\u522b\u8868\u793a GT \u548c Prediction \u5728 yaw\u3001pitch\u3001roll \u4e09\u79cd\u89d2\u5ea6\u4e4b\u95f4\u7684\u504f\u5dee\uff0c\u89d2\u5ea6\u8d8a\u5927 c o s  \u503c\u8d8a\u5c0f\uff0c\u6743\u91cd\u8d8a\u5927\u3002\u5176\u4e2d pitch \u4ee3\u8868\u4e0a\u4e0b\u7ffb\u8f6c\uff0cyaw \u4ee3\u8868\u6c34\u5e73\u7ffb\u8f6c\uff0croll \u4ee3\u8868\u5e73\u9762\u5185\u65cb\u8f6c\uff0c\u90fd\u8868\u793a\u4eba\u8138\u7684\u4e00\u79cd\u59ff\u6001\u3002 C  \u8868\u793a\u4e0d\u540c\u7684\u7c7b\u522b\u7684\u4eba\u8138: \u6b63\u8138\u3001\u4fa7\u8138\u3001\u62ac\u5934\u3001\u4f4e\u5934\u3001\u8868\u60c5\u4ee5\u53ca\u906e\u6321\u60c5\u51b5\uff0c w c n  \u6839\u636e\u6837\u672c\u7c7b\u522b\u5206\u6570\u8fdb\u884c\u8c03\u6574\uff0c\u8bba\u6587\u4e2d\u4f7f\u7528\u7684\u5206\u6570\u6837\u672c\u6570\u7684\u5bfc\u6570\u8ba1\u7b97\u7684\u3002 d m n  \u7531\u4e3b\u5206\u652f\u7f51\u7edc\u8ba1\u7b97\u5f97\u5230\uff0c \u03b8 k n  \u7531\u8f85\u52a9\u7f51\u7edc\u8ba1\u7b97\u5f97\u5230\uff0c\u7136\u540e\u7531 Loss \u6765\u5efa\u7acb\u8054\u7cfb\u3002 4.2 \u8f85\u52a9\u7f51\u7edc\u7684\u7ec6\u8282  PFLD \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5f15\u5165\u4e86\u4e00\u4e2a\u8f85\u52a9\u7f51\u7edc\u7528\u4ee5\u76d1\u7763 PFLD \u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3\uff0c\u5982 Figure2 \u4e2d\u7eff\u8272\u865a\u7ebf\u91cc\u7684\u90e8\u5206\u3002\u8be5\u5b50\u7f51\u7edc\u4ec5\u5728\u8bad\u7ec3\u7684\u9636\u6bb5\u8d77\u4f5c\u7528\uff0c\u5728\u63a8\u7406\u9636\u6bb5\u4e0d\u8d77\u4f5c\u7528\u3002</p> <p>\u8be5\u5b50\u7f51\u7edc\u5bf9\u6bcf\u4e00\u4e2a\u8f93\u5165\u7684\u4eba\u8138\u6837\u672c\u8fdb\u884c\u4e09\u7ef4\u6b27\u62c9\u89d2\u4f30\u8ba1\uff0c\u5b83\u7684 Ground Truth \u7531\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u5173\u952e\u70b9\u4fe1\u606f\u8fdb\u884c\u4f30\u8ba1\uff0c\u867d\u7136\u4f30\u8ba1\u4e0d\u592a\u7cbe\u786e\uff0c\u4f46\u662f\u4f5c\u4e3a\u533a\u5206\u6570\u636e\u5206\u5e03\u7684\u4f9d\u636e\u5df2\u7ecf\u8db3\u591f\u4e86\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8f85\u52a9\u7f51\u7edc\u7684\u76ee\u7684\u662f\u76d1\u7763\u548c\u8f85\u52a9\u5173\u952e\u70b9\u68c0\u6d4b\u4e3b\u5206\u652f\u3002\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u8fd9\u4e2a\u8f85\u52a9\u7f51\u7edc\u7684\u8f93\u5165\u4e0d\u662f\u8bad\u7ec3\u6570\u636e\uff0c\u800c\u662f PFLD \u4e3b\u5206\u652f\u7f51\u7edc\u7684\u4e2d\u95f4\u8f93\u51fa\uff08\u7b2c 4 \u4e2a Block\uff09\u3002</p> <p>4.3 \u4e3b\u5206\u652f\u7f51\u7edc\u548c\u8f85\u52a9\u7f51\u7edc\u7684\u8be6\u7ec6\u914d\u7f6e  \u4e3b\u5206\u652f\u7f51\u7edc\u548c\u8f85\u52a9\u7f51\u7edc\u7684\u8be6\u7ec6\u914d\u7f6e\u8868\u5982\u4e0b\uff1a</p> <p>\u4e3b\u5206\u652f\u7f51\u7edc\u7684\u914d\u7f6e</p> <p>\u8f85\u52a9\u7f51\u7edc\u7684\u914d\u7f6e</p> <ol> <li>\u5b9e\u9a8c\u7ed3\u679c  \u4e0b\u9762\u7684 Figure3 \u5c55\u793a\u4e86\u5728 300W \u6570\u636e\u96c6\u4e0a PFLD \u548c\u5176\u5b83\u4e00\u4e9b\u7ecf\u5178\u7b97\u6cd5\u7684 CED \u66f2\u7ebf\u5bf9\u6bd4\uff1a</li> </ol> <p>\u5728300W\u6570\u636e\u96c6\u4e0aPFLD\u548c\u5176\u5b83\u4e00\u4e9b\u7ecf\u5178\u7b97\u6cd5\u7684CED\u66f2\u7ebf\u5bf9\u6bd4</p> <p>\u4e0b\u9762\u7684 Table3 \u5c55\u793a\u4e86 PFLD \u5728\u5404\u4e2a\u5e73\u53f0\u4e0a\u7684\u6027\u80fd\u8868\u73b0\uff1a</p> <p>Table3</p> <p>\u4e0b\u9762\u7684 Table4 \u5c55\u793a\u4e86\u4e0d\u540c\u7684\u8bc4\u4ef7\u6807\u51c6\u548c\u4e0d\u540c\u7684\u6570\u636e\u5b50\u96c6\u7684\u8bc4\u4ef7\u6307\u6807\uff1a</p> <p>Table4</p> <p>Table5 \u8fd8\u5c55\u793a\u4e86 FPLD \u5728 AFLW \u6570\u636e\u96c6\u4e0a\u7684\u8868\u73b0\uff1a</p> <p>FPLD\u5728AFLW\u6570\u636e\u96c6\u4e0a\u7684\u8868\u73b0</p> <p>\u6700\u540e Figure4 \u8fd8\u5c55\u793a\u4e86\u4e00\u4e9b\u5728\u5177\u6709\u6311\u6218\u6027\u7684\u6837\u672c\u4e0a\u7684\u8868\u73b0\uff1a</p> <p>Figure4</p> <ol> <li> <p>\u603b\u7ed3  \u603b\u7684\u6765\u8bf4 FPLD \u662f\u4e00\u4e2a idea \u975e\u5e38\u597d\u5e76\u4e14\u5b9e\u7528\u4ef7\u503c\u6bd4\u8f83\u5927\u7684\u4eba\u8138\u5173\u952e\u70b9\u68c0\u6d4b\u7b97\u6cd5\uff0c\u65e0\u8bba\u662f\u4eba\u8138\u59ff\u6001\u4f30\u8ba1\u5b50\u7f51\u7edc\u7684\u5f15\u5165\u8fd8\u662f\u9488\u5bf9\u6570\u636e\u4e0d\u5e73\u8861\u91cd\u65b0\u8bbe\u8ba1\u635f\u5931\u51fd\u6570\u90fd\u662f\u503c\u5f97\u501f\u9274\u7684\u3002</p> </li> <li> <p>\u53c2\u8003\u6587\u7ae0  https://zhuanlan.zhihu.com/p/73546427 https://blog.csdn.net/wwwhp/article/details/88361422 https://arxiv.org/pdf/1902.10859.pdf https://github.com/polarisZhao/PFLD-pytorch</p> </li> </ol>"},{"location":"cv/Detect%26Track/RetinaFace/","title":"RetinaFace","text":"<ol> <li>\u524d\u8a00  RetinaFace \u662f 2019 \u5e74 5 \u6708\u6765\u81ea InsightFace \u7684\u53c8\u4e00\u529b\u4f5c\uff0c\u5b83\u662f\u4e00\u4e2a\u9c81\u68d2\u6027\u8f83\u5f3a\u7684\u4eba\u8138\u68c0\u6d4b\u5668\u3002\u5b83\u5728\u76ee\u6807\u68c0\u6d4b\u8fd9\u4e00\u5757\u7684\u53d8\u52a8\u5176\u5b9e\u5e76\u4e0d\u5927\uff0c\u4e3b\u8981\u8d21\u732e\u662f\u65b0\u589e\u4e86\u4e00\u4e2a\u4eba\u8138\u5173\u952e\u70b9\u56de\u5f52\u5206\u652f\uff085 \u4e2a\u4eba\u8138\u5173\u952e\u70b9\uff09\u548c\u4e00\u4e2a\u81ea\u76d1\u7763\u5b66\u4e60\u5206\u652f\uff08\u4e3b\u8981\u662f\u548c 3D \u6709\u5173\uff09\uff0c\u52a0\u5165\u7684\u4efb\u52a1\u53ef\u4ee5\u7528\u4e0b\u56fe\u6765\u8868\u793a\uff1a</li> </ol> <p>Figure1 RetinaFace\u7684\u4e3b\u8981\u8d21\u732e</p> <p>\u8bed\u8a00\u662f\u7a7a\u6d1e\u7684\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u5728 WiderFace \u6570\u636e\u96c6\u4e0a RetinaFace \u7684\u8868\u73b0\uff1a</p> <p>RetinaFace\u7684\u7cbe\u5ea6\u5728Easy,Medium,Hard\u4e2d\u5747SOTA</p> <p>\u53e6\u5916\u518d\u6765\u770b\u770b\u8bba\u6587\u8dd1\u51fa\u6765\u7684\u4e00\u4e2a\u6548\u679c\u56fe\uff1a</p> <p>RetinaFace\u7684\u4e00\u4e2a\u6548\u679c\u56fe</p> <ol> <li>RetinaFace \u7684\u7279\u70b9  RetinaFace \u6709\u51e0\u4e2a\u4e3b\u8981\u7279\u70b9\uff1a</li> </ol> <p>\u91c7\u7528 FPN \u7279\u5f81\u91d1\u5b57\u5854\u63d0\u53d6\u591a\u5c3a\u5ea6\u7279\u5f81\u3002 \u5355\u9636\u6bb5 &amp;&amp;e2e\uff0c\u4f7f\u7528 MobileNet Backbone \u53ef\u4ee5\u5728 Arm \u4e0a\u5b9e\u65f6\u3002 \u5f15\u5165 SSH \u7b97\u6cd5\u7684 Context Modeling\u3002 \u591a\u4efb\u52a1\u8bad\u7ec3\uff0c\u63d0\u4f9b\u989d\u5916\u7684\u76d1\u7763\u4fe1\u606f\u3002 2.1 RetinaFace \u7684\u7ed3\u6784\u56fe  RetinaFace\u7684\u7ed3\u6784\u56fe</p> <p>2.2 FPN \u4e0b\u56fe\u8868\u793a FPN \u7684\u6574\u4f53\u7ed3\u6784\uff1a</p> <p>FPN\u7ed3\u6784</p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230 FPN \u7684\u6574\u4f53\u7ed3\u6784\u5206\u4e3a\u81ea\u5e95\u5411\u4e0a\u548c\u81ea\u9876\u5411\u4e0b\u548c\u4fa7\u5411\u8fde\u63a5\u7684\u8fc7\u7a0b\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5206\u522b\u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u5173\u952e\u90e8\u5206\u3002</p> <p>2.2.1 \u81ea\u5e95\u5411\u4e0a  \u8fd9\u4e00\u90e8\u5206\u5c31\u662f\u666e\u901a\u7684\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\uff0c\u7279\u5f81\u5206\u8fa8\u7387\u4e0d\u65ad\u7f29\u5c0f\uff0c\u5bb9\u6613\u60f3\u5230\u8fd9\u4e2a\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u53ef\u4ee5\u6362\u6210\u4efb\u610f Backbone\uff0c\u5e76\u4e14 CNN \u7f51\u7edc\u4e00\u822c\u90fd\u662f\u6309\u7167\u7279\u5f81\u56fe\u5927\u5c0f\u5206\u4e3a\u4e0d\u540c\u7684 stage\uff0c\u6bcf\u4e2a stage \u7684\u7279\u5f81\u56fe\u957f\u5bbd\u5dee\u8ddd\u4e3a 2 \u500d\u3002\u5728\u8fd9\u4e2a\u81ea\u5e95\u5411\u4e0a\u7684\u7ed3\u6784\u4e2d\uff0c\u4e00\u4e2a stage \u5bf9\u5e94\u7279\u5f81\u91d1\u5b57\u5854\u7684\u4e00\u4e2a level\u3002\u4ee5\u6211\u4eec\u8981\u7528\u7684 ResNet \u4e3a\u4f8b\uff0c\u9009\u53d6 conv2\u3001conv3\u3001conv4\u3001conv5 \u5c42\u7684\u6700\u540e\u4e00\u4e2a\u6b8b\u5dee block \u5c42\u7279\u5f81\u4f5c\u4e3a FPN \u7684\u7279\u5f81\uff0c\u8bb0\u4e3a {C2\u3001C3\u3001C4\u3001C5}\uff0c\u4e5f\u5373\u662f FPN \u7f51\u7edc\u7684 4 \u4e2a\u7ea7\u522b\u3002\u8fd9\u51e0\u4e2a\u7279\u5f81\u5c42\u76f8\u5bf9\u4e8e\u539f\u56fe\u7684\u6b65\u957f\u5206\u522b\u4e3a 4\u30018\u300116\u300132\u3002</p> <p>2.2.2 \u81ea\u4e0a\u5411\u4e0b\u548c\u4fa7\u5411\u8fde\u63a5  \u81ea\u4e0a\u5411\u4e0b\u662f\u7279\u5f81\u56fe\u653e\u5927\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u4e00\u822c\u91c7\u7528\u4e0a\u91c7\u6837\u6765\u5b9e\u73b0\u3002FPN \u7684\u5de7\u5999\u4e4b\u5904\u5c31\u5728\u4e8e\u4ece\u9ad8\u5c42\u7279\u5f81\u4e0a\u91c7\u6837\u65e2\u53ef\u4ee5\u5229\u7528\u9876\u5c42\u7684\u9ad8\u7ea7\u8bed\u4e49\u7279\u5f81\uff08\u6709\u52a9\u4e8e\u5206\u7c7b\uff09\u53c8\u53ef\u4ee5\u5229\u7528\u5e95\u5c42\u7684\u9ad8\u5206\u8fa8\u7387\u4fe1\u606f\uff08\u6709\u52a9\u4e8e\u5b9a\u4f4d\uff09\u3002\u4e0a\u91c7\u6837\u53ef\u4ee5\u4f7f\u7528\u63d2\u503c\u7684\u65b9\u5f0f\u5b9e\u73b0\u3002\u4e3a\u4e86\u5c06\u9ad8\u5c42\u8bed\u4e49\u7279\u5f81\u548c\u5e95\u5c42\u7684\u7cbe\u786e\u5b9a\u4f4d\u80fd\u529b\u7ed3\u5408\uff0c\u8bba\u6587\u63d0\u51fa\u4e86\u7c7b\u4f3c\u4e8e\u6b8b\u5dee\u7ed3\u6784\u7684\u4fa7\u5411\u8fde\u63a5\u3002\u5411\u8fde\u63a5\u5c06\u4e0a\u4e00\u5c42\u7ecf\u8fc7\u4e0a\u91c7\u6837\u540e\u548c\u5f53\u524d\u5c42\u5206\u8fa8\u7387\u4e00\u81f4\u7684\u7279\u5f81\uff0c\u901a\u8fc7\u76f8\u52a0\u7684\u65b9\u6cd5\u8fdb\u884c\u878d\u5408\u3002\u540c\u65f6\u4e3a\u4e86\u4fdd\u6301\u6240\u6709\u7ea7\u522b\u7684\u7279\u5f81\u5c42\u901a\u9053\u6570\u90fd\u4fdd\u6301\u4e00\u81f4\uff0c\u8fd9\u91cc\u4f7f\u7528 1 \u00d7 1  \u5377\u79ef\u6765\u5b9e\u73b0\u3002\u5728\u7f51\u4e0a\u770b\u5230\u4e00\u5f20\u56fe\uff0c\u6bd4\u8f83\u597d\u7684\u89e3\u91ca\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\uff1a</p> <p>\u81ea\u4e0a\u5411\u4e0b\u548c\u4fa7\u5411\u8fde\u63a5</p> <p>FPN \u53ea\u662f\u4e00\u4e2a\u7279\u5f81\u91d1\u5b57\u5854\u7ed3\u6784\uff0c\u9700\u8981\u914d\u5408\u5176\u4ed6\u76ee\u6807\u68c0\u6d4b\u7b97\u6cd5\u624d\u80fd\u4f7f\u7528\u3002</p> <p>2.3 SSH \u7b97\u6cd5  2.3.1 \u68c0\u6d4b\u6a21\u5757  \u4e0b\u9762\u7684 Figure3 \u662f\u68c0\u6d4b\u6a21\u5757\u7684\u793a\u610f\u56fe\uff1a</p> <p>\u68c0\u6d4b\u6a21\u5757\u7ed3\u6784</p> <p>\u5206\u7c7b\u548c\u56de\u5f52\u7684\u7279\u5f81\u56fe\u662f\u878d\u5408\u4e86\u666e\u901a\u5377\u79ef\u5c42\u548c\u4e0a\u4e0b\u6587\u6a21\u5757\u8f93\u51fa\u7684\u7ed3\u679c\u3002\u5206\u7c7b\u548c\u56de\u5f52\u652f\u8def\u8f93\u51fa\u7684 K  \u8868\u793a\u7279\u5f81\u56fe\u4e0a\u6bcf\u4e2a\u70b9\u90fd\u8bbe\u7f6e\u4e86 K  \u4e2a Anchor\uff0c\u8fd9 K  \u4e2a Anchor \u7684\u5bbd\u9ad8\u6bd4\u4f8b\u90fd\u662f 1 : 1 \uff0c\u8bba\u6587\u8bf4\u589e\u52a0\u5bbd\u9ad8\u6bd4\u4f8b\u5bf9\u4e8e\u4eba\u8138\u68c0\u6d4b\u7684\u6548\u679c\u6ca1\u6709\u63d0\u793a\u8fd8\u4f1a\u589e\u52a0 Anchor \u7684\u6570\u91cf\u3002</p> <p>2.3.2 \u4e0a\u4e0b\u6587\u6a21\u5757  \u4e0b\u9762\u7684 Figure4 \u662f\u4e0a\u4e0b\u6587\u6a21\u5757\u7684\u793a\u610f\u56fe\uff1a</p> <p>\u4e0a\u4e0b\u6587\u6a21\u5757\u7ed3\u6784</p> <p>\u4f5c\u8005\u539f\u672c\u662f\u901a\u8fc7\u5f15\u5165\u5377\u79ef\u6838\u5c3a\u5bf8\u8f83\u5927\u7684\u5377\u79ef\u5c42\u4f8b\u5982 5 \u00d7 5  \u548c 7 \u00d7 7  \u6765\u589e\u5927\u611f\u53d7\u91ce\uff0c\u4ece\u800c\u5f15\u5165\u66f4\u591a\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002\u4f46\u4e3a\u4e86\u51cf\u5c11\u8ba1\u7b97\u91cf\uff0c\u4f5c\u8005\u501f\u9274\u4e86 GoogleNet \u4e2d\u7528\u591a\u4e2a 3 \u00d7 3  \u5377\u79ef\u4ee3\u66ff 5 \u00d7 5  \u5377\u79ef\u6216\u8005 7 \u00d7 7  \u5377\u79ef\u7684\u505a\u6cd5\uff0c\u4e8e\u662f\u6700\u7ec8\u4e0a\u4e0b\u6587\u6a21\u5757\u7684\u7ed3\u6784\u5c31\u5982 Figure4 \u6240\u793a\u4e86\uff0c\u53e6\u5916\u6ce8\u610f\u5230\u5f00\u5934\u7684 3 \u00d7 3  \u5377\u79ef\u662f\u5171\u4eab\u7684\u3002</p> <p>2.4 \u635f\u5931\u51fd\u6570  \u635f\u5931\u51fd\u6570\u7684\u6539\u8fdb\u662f\u8fd9\u7bc7\u8bba\u6587\u7684\u4e00\u4e2a\u6838\u5fc3\u8d21\u732e\uff0c\u4e3a\u4e86\u5b9e\u73b0\u4e0b\u9762\u7684\u635f\u5931\u51fd\u6570\u7684\u8bad\u7ec3\uff0c\u4f5c\u8005\u8fd8\u5728 WIDER FACE \u8fd9\u4e2a\u5de8\u5927\u7684\u4eba\u8138\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u4e86 5 \u70b9\u7684\u6807\u6ce8\uff0c\u635f\u5931\u51fd\u6570\u5982\u4e0b\uff1a</p> <p>RetinaFace\u7684Loss</p> <p>\u524d\u9762\u4e24\u9879\u548c\u4ee5\u524d\u7684\u591a\u4efb\u52a1\u4eba\u8138\u68c0\u6d4b\u7684\u635f\u5931\u662f\u4e00\u6837\u7684\uff0c\u5373\u5206\u7c7b\u548c bbox \u56de\u5f52\u635f\u5931\uff0c\u7b2c\u4e09\u9879\u662f 5  \u4e2a\u4eba\u8138\u5173\u952e\u70b9\u7684\u56de\u5f52\u635f\u5931\u3002\u800c\u6700\u540e\u4e00\u9879\u662f\u8bba\u6587\u63d0\u51fa\u7684 Dense Regression \u5206\u652f\u5e26\u6765\u7684\u635f\u5931\uff0c\u4e0b\u9762\u4f1a\u518d\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u3002\u5176\u4e2d \u03bb 1 , \u03bb 2 , \u03bb 3  \u7684\u53d6\u503c\u5206\u522b\u662f 0.25 , 0.1 , 0.01 \uff0c\u4e5f\u5373\u662f\u8bf4\u6765\u81ea\u68c0\u6d4b\u5206\u652f\u548c\u5173\u952e\u70b9\u5206\u652f\u7684\u635f\u5931\u6743\u91cd\u66f4\u9ad8\uff0c\u800c Dense Regression \u5206\u652f\u7684\u635f\u5931\u6743\u91cd\u5360\u6bd4\u5c0f\u3002</p> <p>2.5 Dense Regression \u5206\u652f  \u8fd9\u4e2a\u5206\u652f\u5c31\u662f\u5c06 2D \u7684\u4eba\u8138\u6620\u5c04\u5230 3D \u6a21\u578b\u4e0a\uff0c\u518d\u5c06 3D \u6a21\u578b\u89e3\u7801\u4e3a 2D \u56fe\u7247\uff0c\u7136\u540e\u8ba1\u7b97\u7ecf\u8fc7\u4e86\u7f16\u89e3\u7801\u7684\u56fe\u7247\u548c\u539f\u59cb\u56fe\u7247\u7684\u5dee\u522b\u3002\u4e2d\u95f4\u8fd8\u7528\u5230\u4e86 GCN\u3002\u8fd9\u91cc\u5b9e\u9645\u4e0a\u7528\u5230\u4e86 mesh decoder \u6765\u505a\u89e3\u7801\u90e8\u5206\uff0cmesh decoder \u662f\u4e00\u79cd\u57fa\u4e8e GCN \u7684\u65b9\u6cd5\uff0c\u53c2\u6570\u91cf\u6bd4\u5e38\u7528\u7684 2D \u5377\u79ef\u8981\u5c11\u3002\u5982 Figure3 \u6240\u793a\uff1a</p> <p>2D\u5377\u79ef\u548c\u56fe\u5377\u79ef\u7684\u5bf9\u6bd4</p> <p>\u4ece\u4e0a\u56fe\u53ef\u4ee5\u770b\u5230\uff0c\u666e\u901a\u7684\u5377\u79ef\u64cd\u4f5c\u53c2\u6570\u91cf\u4e00\u822c\u662f k e r n e l H \u00d7 k e r n e l W \u00d7 c h a n n e l s i n \u00d7 c h a n n e l s o u t \uff0c\u800c GCN \u7684\u53c2\u6570\u91cf\u53ea\u6709 K \u00d7 c h a n n e l i n \u00d7 c h a n n e l o u t \u3002</p> <p>\u5728 Decoder \u5b8c\u6210\u4e4b\u540e\u4f1a\u518d\u505a\u4e00\u4e2a 3D \u5230 2D \u7684\u6620\u5c04\uff0c\u4e4b\u540e\u5c31\u4f1a\u6709\u4e00\u4e2a Dense Regression Loss\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u6bd4\u8f83\u7f16\u89e3\u7801\u524d\u540e\u7684\u4eba\u8138\u56fe\u7247\u7684 5  \u4e2a\u4eba\u8138\u7279\u5f81\u70b9\u7684\u4f4d\u7f6e\u5dee\u8ddd\u4e86\uff0cDense Regression Loss \u7684\u516c\u5f0f\u8868\u8fbe\u5982\u4e0b\uff1a</p> <p>Dense Regression Loss</p> <p>\u5176\u4e2d\uff0c W  \u548c H  \u5206\u522b\u8868\u793a Anchor \u533a\u57df I \u2217 i , j  \u7684\u5bbd\u9ad8\u3002</p> <ol> <li>\u5b9e\u73b0\u7ec6\u8282  RetinaFace \u4f7f\u7528 ResNet152 \u4e3a Backbone \u7684 FPN \u7ed3\u6784\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u5c42\u91d1\u5b57\u5854\u90fd\u6709\u7279\u5b9a\u7684 Anchor \u8bbe\u7f6e\uff0c\u8fd9\u6837\u53ef\u4ee5\u6355\u6349\u5230\u4e0d\u540c\u5c3a\u5bf8\u7684\u76ee\u6807\uff0cP2 \u88ab\u8bbe\u7f6e\u4e3a\u6355\u6349\u5fae\u5c0f\u4eba\u8138\u3002\u5177\u4f53\u8bbe\u7f6e\u5982\u4e0b\uff1a</li> </ol> <p>Anchor\u7684\u5177\u4f53\u8bbe\u7f6e</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u4e2d\u95f4\u8fd8\u4f7f\u7528\u4e86 OHEM \u6765\u5e73\u8861 positive \u548c negative \u7684 anchors\uff0c\u56e0\u4e3a negative anchors \u7684\u6570\u91cf\u660e\u663e\u8981\u591a\u3002\u53e6\u5916\u8fd8\u4f7f\u7528\u53ef\u53d8\u5f62\u5377\u79ef MASA DCN(\u53ef\u53d8\u5f62\u5377\u79ef) \u7b97\u6cd5\u7b14\u8bb0\u63cf\u8ff0 \u4ee3\u66ff\u4e86 lateral connections \u548c context modules \u4e2d\u7684 3*3 \u5377\u79ef \u3002</p> <p>\u6700\u540e\uff0c\u9664\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u9488\u5bf9\u7f51\u7edc\u7ed3\u6784\u4e0a\u7684 Trick\uff0c\u8fd8\u5728\u6570\u636e\u4e0a\u505a\u4e86\u989d\u5916\u7684\u6807\u6ce8\u4fe1\u606f\uff0c\u5177\u4f53\u4e3a\uff1a</p> <p>\u5b9a\u4e49\u4e86 5 \u4e2a\u7b49\u7ea7\u7684\u4eba\u8138\u8d28\u91cf\uff0c\u6839\u636e\u6e05\u6670\u5ea6\u6765\u5b9a\u4e49\u68c0\u6d4b\u96be\u5ea6\u3002 \u5b9a\u4e49\u4e86 5 \u4e2a\u4eba\u8138\u5173\u952e\u70b9\u3002 \u6570\u636e\u7684\u989d\u5916\u6807\u6ce8\u4fe1\u606f\uff0c\u8fc7\u4e8e\u6a21\u7cca\u7684\u5c31\u6ca1\u6709\u5173\u952e\u70b9</p> <p>\u6700\u7ec8\uff0c\u57fa\u4e8e\u4e0a\u9762\u7684\u8fd9\u4e9b\u6539\u8fdb\u5c31\u6210\u5c31\u4e86\u8fd9\u4e00\u5927\u540d\u9f0e\u9f0e\u7684 RetinaFace\u3002\u8fd9\u4e9b Trick \u7684\u6d88\u878d\u5b9e\u9a8c\u5982 Table3 \u6240\u793a\uff1a</p> <p>RetinaFace Trick\u7684\u6d88\u878d\u5b9e\u9a8c</p> <ol> <li>\u901f\u5ea6  \u8bba\u6587\u7ed9\u51fa\u7684\u5728 Wider Face \u4e0a\u7684\u7ed3\u679c\u662f\u57fa\u4e8e ResNet-152 \u7684\u9aa8\u5e72\u7f51\u7edc\uff0c\u5982\u679c\u5c06\u9aa8\u5e72\u7f51\u7edc\u6362\u6210\u8f7b\u91cf\u5316\u7f51\u7edc\uff0c\u90a3\u4e48 RetinaFace \u5c31\u53ef\u4ee5\u8f7b\u677e\u5728 Arm \u4e0a\u8fbe\u5230\u5b9e\u65f6\u68c0\u6d4b\u3002</li> </ol> <p>\u4e0d\u540cBackbone\u7684RetinaFace\u5728\u4e0d\u540c\u786c\u4ef6\u4e0a\u7684\u8017\u65f6\u6d4b\u8bd5</p> <ol> <li> <p>\u90e8\u7f72  \u524d\u51e0\u5929 Hanson \u5927\u4f6c\u53d1\u8868\u4e86\u4e00\u7bc7\u6587\u7ae0\uff1aNINE \u4e4b RetinaFace \u90e8\u7f72\u91cf\u5316\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u4e86 MobileNet-0.25 \u4e3a BackBone \u7684 RetinaFace \u5728 Hisi35xx \u677f\u5b50\u4e0a\u7684\u90e8\u7f72\u6d41\u7a0b\uff0c\u5217\u4e3e\u4e86\u90e8\u7f72\u4e2d\u7684\u6240\u6709\u5751\u70b9\uff0c\u6b22\u8fce\u53bb\u5b66\u4e60\u5e76\u5c06 RetinaFace \u90e8\u7f72\u5728\u81ea\u5df1\u7684\u5de5\u7a0b\u4e2d\u3002\u5b9e\u9645\u4e0a MobileNet-0.25 \u7684 RetinaFace \u53c2\u6570\u91cf\u662f\u5f88\u5c11\u7684\uff0cCaffeModel \u53ea\u6709 1.7M\uff0c\u4ece\u901f\u5ea6\u548c\u7cbe\u5ea6\u7684 TradeOff \u6765\u770b\uff0c\u8fd9\u53ef\u80fd\u662f\u81f3\u4eca\u4e3a\u6b62\u6700\u597d\u7528\u7684\u4eba\u8138\u68c0\u6d4b\u5668\u4e86\u3002\uff08\u8bad\u7ec3\u8fc7 MTCNN \u7684\u90fd\u61c2\uff0c\u90a3\u662f\u771f\u4e0d\u597d\u8bad\u7ec3\uff0c\u5e76\u4e14\u6211\u4e2a\u4eba\u4e5f\u66f4\u503e\u5411\u4e8e\u8fd9\u79cd\u5355\u9636\u6bb5\u7684\uff0c\u4e0d\u4ec5\u597d\u8bad\u7ec3\u8fd8\u76f8\u5bf9\u597d\u90e8\u7f72\u554a\uff09\u3002</p> </li> <li> <p>\u6838\u5fc3\u4ee3\u7801 </p> </li> </ol> <p>import torch import torch.nn as nn import torchvision.models.detection.backbone_utils as backbone_utils import torchvision.models._utils as _utils import torch.nn.functional as F from collections import OrderedDict</p> <p>from models.net import MobileNetV1 as MobileNetV1 from models.net import FPN as FPN from models.net import SSH as SSH</p> <p>class ClassHead(nn.Module):     def init(self,inchannels=512,num_anchors=3):         super(ClassHead,self).init()         self.num_anchors = num_anchors         self.conv1x1 = nn.Conv2d(inchannels,self.num_anchors*2,kernel_size=(1,1),stride=1,padding=0)</p> Text Only<pre><code>def forward(self,x):\n    out = self.conv1x1(x)\n    out = out.permute(0,2,3,1).contiguous()\n\n    return out.view(out.shape[0], -1, 2)\n</code></pre> <p>class BboxHead(nn.Module):     def init(self,inchannels=512,num_anchors=3):         super(BboxHead,self).init()         self.conv1x1 = nn.Conv2d(inchannels,num_anchors*4,kernel_size=(1,1),stride=1,padding=0)</p> Text Only<pre><code>def forward(self,x):\n    out = self.conv1x1(x)\n    out = out.permute(0,2,3,1).contiguous()\n\n    return out.view(out.shape[0], -1, 4)\n</code></pre> <p>class LandmarkHead(nn.Module):     def init(self,inchannels=512,num_anchors=3):         super(LandmarkHead,self).init()         self.conv1x1 = nn.Conv2d(inchannels,num_anchors*10,kernel_size=(1,1),stride=1,padding=0)</p> Text Only<pre><code>def forward(self,x):\n    out = self.conv1x1(x)\n    out = out.permute(0,2,3,1).contiguous()\n\n    return out.view(out.shape[0], -1, 10)\n</code></pre> <p>class RetinaFace(nn.Module):     def init(self, cfg = None, phase = 'train'):         \"\"\"         :param cfg:  Network related settings.         :param phase: train or test.         \"\"\"         super(RetinaFace,self).init()         self.phase = phase         backbone = None         if cfg['name'] == 'mobilenet0.25':             backbone = MobileNetV1()             if cfg['pretrain']:                 checkpoint = torch.load(\"./weights/mobilenetV1X0.25_pretrain.tar\", map_location=torch.device('cpu'))                 from collections import OrderedDict                 new_state_dict = OrderedDict()                 for k, v in checkpoint['state_dict'].items():                     name = k[7:]  # remove module.                     new_state_dict[name] = v                 # load params                 backbone.load_state_dict(new_state_dict)         elif cfg['name'] == 'Resnet50':             import torchvision.models as models             backbone = models.resnet50(pretrained=cfg['pretrain'])</p> Text Only<pre><code>    self.body = _utils.IntermediateLayerGetter(backbone, cfg['return_layers'])\n    in_channels_stage2 = cfg['in_channel']\n    in_channels_list = [\n        in_channels_stage2 * 2,\n        in_channels_stage2 * 4,\n        in_channels_stage2 * 8,\n    ]\n    out_channels = cfg['out_channel']\n    self.fpn = FPN(in_channels_list,out_channels)\n    self.ssh1 = SSH(out_channels, out_channels)\n    self.ssh2 = SSH(out_channels, out_channels)\n    self.ssh3 = SSH(out_channels, out_channels)\n\n    self.ClassHead = self._make_class_head(fpn_num=3, inchannels=cfg['out_channel'])\n    self.BboxHead = self._make_bbox_head(fpn_num=3, inchannels=cfg['out_channel'])\n    self.LandmarkHead = self._make_landmark_head(fpn_num=3, inchannels=cfg['out_channel'])\n\ndef _make_class_head(self,fpn_num=3,inchannels=64,anchor_num=2):\n    classhead = nn.ModuleList()\n    for i in range(fpn_num):\n        classhead.append(ClassHead(inchannels,anchor_num))\n    return classhead\n\ndef _make_bbox_head(self,fpn_num=3,inchannels=64,anchor_num=2):\n    bboxhead = nn.ModuleList()\n    for i in range(fpn_num):\n        bboxhead.append(BboxHead(inchannels,anchor_num))\n    return bboxhead\n\ndef _make_landmark_head(self,fpn_num=3,inchannels=64,anchor_num=2):\n    landmarkhead = nn.ModuleList()\n    for i in range(fpn_num):\n        landmarkhead.append(LandmarkHead(inchannels,anchor_num))\n    return landmarkhead\n\ndef forward(self,inputs):\n    out = self.body(inputs)\n\n    # FPN\n    fpn = self.fpn(out)\n\n    # SSH\n    feature1 = self.ssh1(fpn[0])\n    feature2 = self.ssh2(fpn[1])\n    feature3 = self.ssh3(fpn[2])\n    features = [feature1, feature2, feature3]\n\n    bbox_regressions = torch.cat([self.BboxHead[i](feature) for i, feature in enumerate(features)], dim=1)\n    classifications = torch.cat([self.ClassHead[i](feature) for i, feature in enumerate(features)],dim=1)\n    ldm_regressions = torch.cat([self.LandmarkHead[i](feature) for i, feature in enumerate(features)], dim=1)\n\n    if self.phase == 'train':\n        output = (bbox_regressions, classifications, ldm_regressions)\n    else:\n        output = (bbox_regressions, F.softmax(classifications, dim=-1), ldm_regressions)\n    return output\n</code></pre> <p>\u5f15\u7528\u7684 fpn\uff0cssh \u7b49\u7ed3\u6784\u4ee3\u7801</p> <p>import time import torch import torch.nn as nn import torchvision.models._utils as _utils import torchvision.models as models import torch.nn.functional as F from torch.autograd import Variable</p> <p>def conv_bn(inp, oup, stride = 1, leaky = 0):     return nn.Sequential(         nn.Conv2d(inp, oup, 3, stride, 1, bias=False),         nn.BatchNorm2d(oup),         nn.LeakyReLU(negative_slope=leaky, inplace=True)     )</p> <p>def conv_bn_no_relu(inp, oup, stride):     return nn.Sequential(         nn.Conv2d(inp, oup, 3, stride, 1, bias=False),         nn.BatchNorm2d(oup),     )</p> <p>def conv_bn1X1(inp, oup, stride, leaky=0):     return nn.Sequential(         nn.Conv2d(inp, oup, 1, stride, padding=0, bias=False),         nn.BatchNorm2d(oup),         nn.LeakyReLU(negative_slope=leaky, inplace=True)     )</p> <p>def conv_dw(inp, oup, stride, leaky=0.1):     return nn.Sequential(         nn.Conv2d(inp, inp, 3, stride, 1, groups=inp, bias=False),         nn.BatchNorm2d(inp),         nn.LeakyReLU(negative_slope= leaky,inplace=True),</p> Text Only<pre><code>    nn.Conv2d(inp, oup, 1, 1, 0, bias=False),\n    nn.BatchNorm2d(oup),\n    nn.LeakyReLU(negative_slope= leaky,inplace=True),\n)\n</code></pre> <p>class SSH(nn.Module):     def init(self, in_channel, out_channel):         super(SSH, self).init()         assert out_channel % 4 == 0         leaky = 0         if (out_channel &lt;= 64):             leaky = 0.1         self.conv3X3 = conv_bn_no_relu(in_channel, out_channel//2, stride=1)</p> Text Only<pre><code>    self.conv5X5_1 = conv_bn(in_channel, out_channel//4, stride=1, leaky = leaky)\n    self.conv5X5_2 = conv_bn_no_relu(out_channel//4, out_channel//4, stride=1)\n\n    self.conv7X7_2 = conv_bn(out_channel//4, out_channel//4, stride=1, leaky = leaky)\n    self.conv7x7_3 = conv_bn_no_relu(out_channel//4, out_channel//4, stride=1)\n\ndef forward(self, input):\n    conv3X3 = self.conv3X3(input)\n\n    conv5X5_1 = self.conv5X5_1(input)\n    conv5X5 = self.conv5X5_2(conv5X5_1)\n\n    conv7X7_2 = self.conv7X7_2(conv5X5_1)\n    conv7X7 = self.conv7x7_3(conv7X7_2)\n\n    out = torch.cat([conv3X3, conv5X5, conv7X7], dim=1)\n    out = F.relu(out)\n    return out\n</code></pre> <p>class FPN(nn.Module):     def init(self,in_channels_list,out_channels):         super(FPN,self).init()         leaky = 0         if (out_channels &lt;= 64):             leaky = 0.1         self.output1 = conv_bn1X1(in_channels_list[0], out_channels, stride = 1, leaky = leaky)         self.output2 = conv_bn1X1(in_channels_list[1], out_channels, stride = 1, leaky = leaky)         self.output3 = conv_bn1X1(in_channels_list[2], out_channels, stride = 1, leaky = leaky)</p> Text Only<pre><code>    self.merge1 = conv_bn(out_channels, out_channels, leaky = leaky)\n    self.merge2 = conv_bn(out_channels, out_channels, leaky = leaky)\n\ndef forward(self, input):\n    # names = list(input.keys())\n    input = list(input.values())\n\n    output1 = self.output1(input[0])\n    output2 = self.output2(input[1])\n    output3 = self.output3(input[2])\n\n    up3 = F.interpolate(output3, size=[output2.size(2), output2.size(3)], mode=\"nearest\")\n    output2 = output2 + up3\n    output2 = self.merge2(output2)\n\n    up2 = F.interpolate(output2, size=[output1.size(2), output1.size(3)], mode=\"nearest\")\n    output1 = output1 + up2\n    output1 = self.merge1(output1)\n\n    out = [output1, output2, output3]\n    return out\n</code></pre> <p>class MobileNetV1(nn.Module):     def init(self):         super(MobileNetV1, self).init()         self.stage1 = nn.Sequential(             conv_bn(3, 8, 2, leaky = 0.1),    # 3             conv_dw(8, 16, 1),   # 7             conv_dw(16, 32, 2),  # 11             conv_dw(32, 32, 1),  # 19             conv_dw(32, 64, 2),  # 27             conv_dw(64, 64, 1),  # 43         )         self.stage2 = nn.Sequential(             conv_dw(64, 128, 2),  # 43 + 16 = 59             conv_dw(128, 128, 1), # 59 + 32 = 91             conv_dw(128, 128, 1), # 91 + 32 = 123             conv_dw(128, 128, 1), # 123 + 32 = 155             conv_dw(128, 128, 1), # 155 + 32 = 187             conv_dw(128, 128, 1), # 187 + 32 = 219         )         self.stage3 = nn.Sequential(             conv_dw(128, 256, 2), # 219 +3 2 = 241             conv_dw(256, 256, 1), # 241 + 64 = 301         )         self.avg = nn.AdaptiveAvgPool2d((1,1))         self.fc = nn.Linear(256, 1000)</p> Text Only<pre><code>def forward(self, x):\n    x = self.stage1(x)\n    x = self.stage2(x)\n    x = self.stage3(x)\n    x = self.avg(x)\n    # x = self.model(x)\n    x = x.view(-1, 256)\n    x = self.fc(x)\n    return x\n</code></pre> <ol> <li> <p>\u7559\u5751  \u6ce8\u610f\u5230\u8bba\u6587\u91cc\u9762\u8fd8\u6bd4\u8f83\u4e86\u4e00\u4e0b\u5728 RetinaFace \u4e0a\u52a0\u5165 ArcFace \u7684\u5b9e\u9a8c\u7ed3\u679c\uff0c\u4ecd\u7136\u8fd8\u662f\u6709\u63d0\u5347\u7684\uff0cArcFace \u6211\u540e\u9762\u6211\u4f1a\u4ed4\u7ec6\u8bb2\u8bb2\uff0c\u4eca\u5929\u6682\u65f6\u8bb2\u5230\u8fd9\u91cc\u4e86\uff0c\u5982\u679c\u5bf9\u4f60\u6709\u5e2e\u52a9\u53f3\u4e0b\u89d2\u70b9\u8d5e\u54e6\uff0c\u8c22\u8c22\u3002\u6709\u95ee\u9898\u8bf7\u7559\u8a00\u533a\u4ea4\u6d41\u54e6\u3002</p> </li> <li> <p>\u53c2\u8003  https://arxiv.org/pdf/1905.00641.pdf https://zhuanlan.zhihu.com/p/70834919 https://www.cnblogs.com/ywheunji/p/12285421.html https://github.com/biubug6/Pytorch_Retinaface</p> </li> </ol>"},{"location":"cv/Segment/FCN/","title":"FCN","text":"<p>\u8bba\u6587\u539f\u6587</p> <p>\u521b\u65b0\u70b9  \u63d0\u51fa\u4e86\u4e00\u79cd\u7aef\u5230\u7aef\u7684\u505a\u8bed\u4e49\u5206\u5272\u7684\u65b9\u6cd5\uff0c</p> <p>\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0</p> <p>\u5982\u56fe\uff0c\u76f4\u63a5\u62ff\u5206\u5272\u7684 ground truth \u4f5c\u4e3a\u76d1\u7763\u4fe1\u606f\uff0c\u8bad\u7ec3\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u7f51\u7edc\uff0c\u8ba9\u7f51\u7edc\u505a p \u50cf\u7d20\u7ea7\u522b\u7684\u9884\u6d4b\u3002</p> <p>\u5982\u4f55\u8bbe\u8ba1\u7f51\u7edc\u7ed3\u6784  \u5982\u4f55\u505a\u50cf\u7d20\u7ea7\u522b\u7684\u9884\u6d4b  \u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0</p> <p>\u5728 VGG16 \u4e2d\u7684\u7b2c\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\u7684\u7ef4\u5ea6\u662f 25088x4096 \u7684\uff0c\u5c06\u4e4b\u89e3\u91ca\u4e3a 512x7x7x4096 \u7684\u5377\u79ef\u6838\uff0c\u8fd9\u6837\u6700\u540e\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a featuremap\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u5728\u4e8e\u53ef\u4ee5\u5b9e\u73b0\u8fc1\u79fb\u5b66\u4e60\u7684 fine-tune\u3002\u6700\u540e\u6211\u4eec\u5bf9\u5f97\u5230\u7684 feature map \u8fdb\u884c bilinear \u4e0a\u91c7\u6837\uff0c\u5c31\u662f\u53cd\u5377\u79ef\u5c42\u3002\u5c31\u53ef\u4ee5\u5f97\u5230\u548c\u539f\u56fe\u4e00\u6837\u5927\u5c0f\u7684\u8bed\u4e49\u5206\u5272\u540e\u7684\u56fe\u4e86\u3002</p> <p>\u5982\u4f55\u4fdd\u8bc1\u7cbe\u5ea6  \u6211\u4eec\u5728\u505a upsampling \u65f6\uff0c\u6b65\u957f\u662f 32\uff0c\u8f93\u5165\u4e3a 3x500x500 \u7684\u65f6\u5019\uff0c\u8f93\u51fa\u662f 544x544\uff0c\u8fb9\u7f18\u5f88\u4e0d\u597d\u3002\u6240\u4ee5\u6211\u4eec\u91c7\u7528 skip layer \u7684\u65b9\u6cd5\uff0c\u5728\u6d45\u5c42\u5904\u51cf\u5c0f upsampling \u7684\u6b65\u957f\uff0c\u5f97\u5230\u7684 fine layer \u548c \u9ad8\u5c42\u5f97\u5230\u7684 coarse layer \u505a\u878d\u5408\uff0c\u7136\u540e\u518d upsampling \u5f97\u5230\u8f93\u51fa\u3002\u8fd9\u79cd\u505a\u6cd5\u517c\u987e local \u548c global \u4fe1\u606f\uff0c\u5373\u6587\u4e2d\u8bf4\u7684 combining what and where\uff0c\u53d6\u5f97\u4e86\u4e0d\u9519\u7684\u6548\u679c\u63d0\u5347\u3002FCN-32s \u4e3a 59.4\uff0cFCN-16s \u63d0\u5347\u5230\u4e86 62.4\uff0cFCN-8s \u63d0\u5347\u5230 62.7\u3002\u53ef\u4ee5\u770b\u51fa\u6548\u679c\u8fd8\u662f\u5f88\u660e\u663e\u7684\u3002</p> <p>\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0</p> <p>\u8bba\u6587\u7ed3\u679c  \u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0</p> <p>\u4ee3\u7801\u5b9e\u73b0  FCN8</p>"},{"location":"cv/Segment/FCN/#codingutf-8","title":"coding=utf-8","text":"<p>from keras.models import * from keras.layers import * import os</p> <p>def crop(o1, o2, i):     o_shape2 = Model(i, o2).output_shape     outputHeight2 = o_shape2[1]     outputWidth2 = o_shape2[2]</p> Text Only<pre><code>o_shape1 = Model(i, o1).output_shape\noutputHeight1 = o_shape1[1]\noutputWidth1 = o_shape1[2]\n\ncx = abs(outputWidth1 - outputWidth2)\ncy = abs(outputHeight2 - outputHeight1)\n\nif outputWidth1 &gt; outputWidth2:\n    o1 = Cropping2D(cropping=((0,0), (0, cx)))(o1)\nelse:\n    o2 = Cropping2D( cropping=((0,0) ,  (  0 , cx )))(o2)\n\nif outputHeight1 &gt; outputHeight2 :\n    o1 = Cropping2D( cropping=((0,cy) ,  (  0 , 0 )))(o1)\nelse:\n    o2 = Cropping2D( cropping=((0, cy ) ,  (  0 , 0 )))(o2)\n\nreturn o1, o2\n</code></pre> <p>def FCN8(nClasses, input_height=416, input_width=608, vgg_level=3):</p> Text Only<pre><code>img_input = Input(shape=(input_height, input_width, 3))\n\nx = Conv2D(64, (3, 3), activation='relu', padding='same', name='block1_conv1')(img_input)\nx = Conv2D(64, (3, 3), activation='relu', padding='same', name='block1_conv2')(x)\nx = MaxPooling2D((2, 2), strides=(2, 2), name='block1_pool')(x)\nf1 = x\n# Block 2\nx = Conv2D(128, (3, 3), activation='relu', padding='same', name='block2_conv1')(x)\nx = Conv2D(128, (3, 3), activation='relu', padding='same', name='block2_conv2')(x)\nx = MaxPooling2D((2, 2), strides=(2, 2), name='block2_pool')(x)\nf2 = x\n\n# Block 3\nx = Conv2D(256, (3, 3), activation='relu', padding='same', name='block3_conv1')(x)\nx = Conv2D(256, (3, 3), activation='relu', padding='same', name='block3_conv2')(x)\nx = Conv2D(256, (3, 3), activation='relu', padding='same', name='block3_conv3')(x)\nx = MaxPooling2D((2, 2), strides=(2, 2), name='block3_pool')(x)\nf3 = x\n\n# Block 4\nx = Conv2D(512, (3, 3), activation='relu', padding='same', name='block4_conv1')(x)\nx = Conv2D(512, (3, 3), activation='relu', padding='same', name='block4_conv2')(x)\nx = Conv2D(512, (3, 3), activation='relu', padding='same', name='block4_conv3')(x)\nx = MaxPooling2D((2, 2), strides=(2, 2), name='block4_pool')(x)\nf4 = x\n\n# Block 5\nx = Conv2D(512, (3, 3), activation='relu', padding='same', name='block5_conv1')(x)\nx = Conv2D(512, (3, 3), activation='relu', padding='same', name='block5_conv2')(x)\nx = Conv2D(512, (3, 3), activation='relu', padding='same', name='block5_conv3')(x)\nx = MaxPooling2D((2, 2), strides=(2, 2), name='block5_pool')(x)\nf5 = x\n\nx = Flatten(name='flatten')(x)\nx = Dense(4096, activation='relu', name='fc1')(x)\nx = Dense(4096, activation='relu', name='fc2')(x)\n#x = Dense(1000, activation='softmax', name='predictions')(x)\n\n#vgg = Model(img_input, x)\n#vgg.load_weights(VGG_Weights_path)\n\no = f5\n\no = (Conv2D(4096, (7, 7), activation='relu', padding='same'))(o)\no = Dropout(0.5)(o)\no = (Conv2D(4096, (1, 1), activation='relu', padding='same'))(o)\no = Dropout(0.5)(o)\n\no = (Conv2D(nClasses, (1, 1), kernel_initializer='he_normal'))(o)\no = Conv2DTranspose(nClasses, kernel_size=(4, 4), strides=(2, 2), use_bias=False)(o)\n\no2 = f4\no2 = (Conv2D(nClasses, (1, 1), kernel_initializer='he_normal'))(o2)\n\no, o2 = crop(o, o2, img_input)\n\no = Add()([o, o2])\n\no = Conv2DTranspose(nClasses, kernel_size=(4, 4),  strides=(2, 2), use_bias=False)(o)\no2 = f3 \no2 = (Conv2D(nClasses,  (1, 1), kernel_initializer='he_normal'))(o2)\no2, o = crop(o2, o, img_input)\no = Add()([o2, o])\n\n\no = Conv2DTranspose(nClasses , kernel_size=(16,16),  strides=(8,8), use_bias=False)(o)\n\no_shape = Model(img_input, o).output_shape\n\noutputHeight = o_shape[1]\noutputWidth = o_shape[2]\n\no = (Reshape((-1, outputHeight*outputWidth)))(o)\no = (Permute((2, 1)))(o)\no = (Activation('softmax'))(o)\nmodel = Model(img_input, o)\nmodel.outputWidth = outputWidth\nmodel.outputHeight = outputHeight\n\nreturn model\n</code></pre> <p>FCN32</p>"},{"location":"cv/Segment/FCN/#codingutf-8_1","title":"coding=utf-8","text":"<p>from keras.models import * from keras.layers import * import os</p> <p>def FCN32(n_classes,  input_height=416, input_width=608, vgg_level=3):</p> Text Only<pre><code>img_input = Input(shape=(3, input_height, input_width))\n\nx = Conv2D(64, (3, 3), activation='relu', padding='same', name='block1_conv1')(img_input)\nx = Conv2D(64, (3, 3), activation='relu', padding='same', name='block1_conv2')(x)\nx = MaxPooling2D((2, 2), strides=(2, 2), name='block1_pool')(x)\nf1 = x\n# Block 2\nx = Conv2D(128, (3, 3), activation='relu', padding='same', name='block2_conv1')(x)\nx = Conv2D(128, (3, 3), activation='relu', padding='same', name='block2_conv2')(x)\nx = MaxPooling2D((2, 2), strides=(2, 2), name='block2_pool')(x)\nf2 = x\n\n# Block 3\nx = Conv2D(256, (3, 3), activation='relu', padding='same', name='block3_conv1')(x)\nx = Conv2D(256, (3, 3), activation='relu', padding='same', name='block3_conv2')(x)\nx = Conv2D(256, (3, 3), activation='relu', padding='same', name='block3_conv3')(x)\nx = MaxPooling2D((2, 2), strides=(2, 2), name='block3_pool')(x)\nf3 = x\n\n# Block 4\nx = Conv2D(512, (3, 3), activation='relu', padding='same', name='block4_conv1')(x)\nx = Conv2D(512, (3, 3), activation='relu', padding='same', name='block4_conv2')(x)\nx = Conv2D(512, (3, 3), activation='relu', padding='same', name='block4_conv3')(x)\nx = MaxPooling2D((2, 2), strides=(2, 2), name='block4_pool')(x)\nf4 = x\n\n# Block 5\nx = Conv2D(512, (3, 3), activation='relu', padding='same', name='block5_conv1')(x)\nx = Conv2D(512, (3, 3), activation='relu', padding='same', name='block5_conv2')(x)\nx = Conv2D(512, (3, 3), activation='relu', padding='same', name='block5_conv3')(x)\nx = MaxPooling2D((2, 2), strides=(2, 2), name='block5_pool')(x)\nf5 = x\n\nx = Flatten(name='flatten')(x)\nx = Dense(4096, activation='relu', name='fc1')(x)\nx = Dense(4096, activation='relu', name='fc2')(x)\nx = Dense(1000, activation='softmax', name='predictions')(x)\n\n#vgg = Model(img_input, x)\n#vgg.load_weights(VGG_Weights_path)\n\no = f5\n\no = (Conv2D(4096, (7, 7), activation='relu', padding='same'))(o)\no = Dropout(0.5)(o)\no = (Conv2D(4096, (1, 1), activation='relu', padding='same'))(o)\no = Dropout(0.5)(o)\n\no = (Conv2D(n_classes,  (1, 1), kernel_initializer='he_normal'))(o)\no = Conv2DTranspose(n_classes, kernel_size=(64, 64),  strides=(32, 32), use_bias=False)(o)\no_shape = Model(img_input, o).output_shape\n\noutputHeight = o_shape[1]\noutputWidth = o_shape[2]\n\no = (Reshape((-1, outputHeight*outputWidth)))(o)\no = (Permute((2, 1)))(o)\no = (Activation('softmax'))(o)\nmodel = Model(img_input, o )\nmodel.outputWidth = outputWidth\nmodel.outputHeight = outputHeight\n\nreturn model\n</code></pre>"},{"location":"cv/base/Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/","title":"1. \u524d\u8a00","text":"<p>\u63a5\u7740\u6628\u5929\u624b\u52a8\u6784\u9020Sobel\u7b97\u5b50\u5b9e\u73b0\u68c0\u6d4b\uff0c\u4eca\u5929\u6765\u8bb2\u8bb2\u5982\u4f55\u624b\u52a8\u5b9e\u73b0Canny\u8fb9\u7f18\u68c0\u6d4b\u3002\u7531\u4e8e\u8981\u5b9e\u73b0\u8fd9\u4e2a\u7b97\u6cd5\u7684\u9700\u8981\u7684\u5148\u9a8c\u77e5\u8bc6\u6bd4\u8f83\u591a\uff0c\u6240\u4ee5\u5728\u5b66\u4e60\u8fd9\u4e2a\u7b97\u6cd5\u7684\u5b9e\u73b0\u4e4b\u524d\u6211\u4eec\u5148\u6765\u5b66\u4e60\u4e00\u4e0b\u7528\u4e8e\u56fe\u50cf\u4e8c\u503c\u5316\u7684OSTU\u5927\u6d25\u6cd5\u3002</p>"},{"location":"cv/base/Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#2-otsu","title":"2. OTSU\u7b97\u6cd5\u539f\u7406","text":"<p>Ostu\u65b9\u6cd5\u53c8\u540d\u6700\u5927\u7c7b\u95f4\u5dee\u65b9\u6cd5\uff0c\u901a\u8fc7\u7edf\u8ba1\u6574\u4e2a\u56fe\u50cf\u7684\u76f4\u65b9\u56fe\u7279\u6027\u6765\u5b9e\u73b0\u5168\u5c40\u9608\u503c\\(t\\)\u7684\u81ea\u52a8\u9009\u53d6\u3002</p> <p>\u5b83\u5c06\u56fe\u50cf\u7684\u50cf\u7d20\u6309\u7070\u5ea6\u7ea7\u5206\u6210\\(2\\)\u4e2a\u90e8\u5206\uff0c\u4f7f\u5f97\\(2\\)\u4e2a\u90e8\u5206\u4e4b\u95f4\u7684\u7070\u5ea6\u503c\u5dee\u5f02\u6700\u5c0f\uff0c\u901a\u8fc7\u65b9\u5dee\u7684\u8ba1\u7b97\u6765\u5bfb\u627e\u4e00\u4e2a\u5408\u9002\u7684\u7070\u5ea6\u7ea7\u522b\u6765\u5212\u5206\u3002</p> <p>OTSU\u7b97\u6cd5\u7684\u8ba1\u7b97\u5f88\u7b80\u5355\uff0c\u4e0d\u53d7\u5230\u56fe\u50cf\u4eae\u5ea6\u548c\u5bf9\u6bd4\u5ea6\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u4f7f\u5f97\u7c7b\u95f4\u65b9\u5dee\u6700\u5927\u7684\u5206\u5272\u610f\u5473\u7740\u9519\u5206\u6982\u7387\u6700\u5c0f\u3002</p> <p>\u8bbe\\(t\\)\u4e3a\u7070\u5ea6\u7ea7\u9608\u503c\uff0c\u4ece\\(L\\)(\u4e00\u822c\u4e3a\\(255\\))\u4e2a\u7070\u5ea6\u7ea7\u904d\u5386\\(t\\)\uff0c\u4f7f\u5f97\\(t\\)\u4e3a\u67d0\u4e2a\u503c\u7684\u65f6\u5019\uff0c\u524d\u666f\u548c\u80cc\u666f\u7684\u65b9\u5dee\u6700\u5927\uff0c\u8fd9\u4e2a\\(t\\)\u503c\u4fbf\u662f\u6211\u4eec\u8981\u6c42\u7684\u7070\u5ea6\u7ea7\u9608\u503c\u3002</p> <p>\u8bbe\\(w0\\)\u8868\u793a\u5206\u5f00\u540e\u524d\u666f\u50cf\u7d20\u70b9\u5360\u56fe\u50cf\u50cf\u7d20\u6bd4\u4f8b\uff0c\\(u0\\)\u8868\u793a\u5206\u5f00\u540e\u524d\u666f\u50cf\u7d20\u70b9\u7684\u5e73\u5747\u7070\u5ea6\uff0c\\(w1\\)\u8868\u793a\u5206\u5f00\u540e\u80cc\u666f\u50cf\u7d20\u70b9\u6570\u5360\u56fe\u50cf\u6bd4\u4f8b\uff0c\\(u1\\)\u8868\u793a\u5206\u5f00\u540e\u80cc\u666f\u50cf\u7d20\u70b9\u7684\u5e73\u5747\u7070\u5ea6\u3002</p> <p>\u56fe\u50cf\u7684\u603b\u7070\u5ea6\u88ab\u5b9a\u4e49\u4e3a\uff1a\uff1f</p> <p>\\(u=w0*u0+w1*u1..............(1)\\)</p> <p>\u56fe\u50cf\u7684\u65b9\u5dee\u8ba1\u7b97\u516c\u5f0f\u4e3a\uff1a</p> <p>\\(g=w0*(u0-w0)*(u0-w0)+w1*(u1-w1)*(u1-w1)...............(2)\\)</p> <p>\u5e76\u4e14\u6709\uff1a</p> <p>\\(w0+w1=1...................................(3)\\)</p> <p>\u6240\u4ee5\u53ef\u4ee5\u628a\u516c\u5f0f(2)\u5c55\u5f00\u5316\u7b80\u4e3a\uff1a</p> <p>\\(g=w0*w1*(u0-u1)*(u0-u1)\\)</p> <p>\u516c\u5f0f\u63a8\u5bfc\u5b8c\u6bd5\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0bOTSU\u7b97\u6cd5\u7684\u8be6\u7ec6\u6b65\u9aa4\u3002</p>"},{"location":"cv/base/Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#3-otsu","title":"3. OTSU\u7b97\u6cd5\u6d41\u7a0b","text":"<ul> <li>\u5148\u8ba1\u7b97\u56fe\u50cf\u7684\u76f4\u65b9\u56fe\uff0c\u5373\u5c06\u56fe\u50cf\u6240\u6709\u7684\u50cf\u7d20\u70b9\u6309\u7167\\(0~255\\)\u5171\\(256\\)\u4e2abin\uff0c\u7edf\u8ba1\u843d\u5728\u6bcf\u4e2abin\u7684\u50cf\u7d20\u70b9\u6570\u91cf\u3002</li> <li>\u5f52\u4e00\u5316\u76f4\u65b9\u56fe\uff0c\u4e5f\u5373\u5c06\u6bcf\u4e2abin\u4e2d\u50cf\u7d20\u70b9\u6570\u91cf\u9664\u4ee5\u603b\u7684\u50cf\u7d20\u70b9\u3002</li> <li>\\(i\\)\u8868\u793a\u5206\u7c7b\u7684\u9608\u503c\uff0c\u4e5f\u5373\u4e00\u4e2a\u7070\u5ea6\u7ea7\uff0c\u4ece\\(0\\)\u5f00\u59cb\u8fed\u4ee3\u3002</li> <li>\u901a\u8fc7\u5f52\u4e00\u5316\u7684\u76f4\u65b9\u56fe\uff0c\u7edf\u8ba1\\([0\uff0ci]\\)\u7070\u5ea6\u7ea7\u7684\u50cf\u7d20(\u5047\u8bbe\u50cf\u7d20\u503c\u5728\u6b64\u8303\u56f4\u7684\u50cf\u7d20\u53eb\u505a\u524d\u666f\u50cf\u7d20) \u6240\u5360\u6574\u5e45\u56fe\u50cf\u7684\u6bd4\u4f8b\\(w0\\)\uff0c\u5e76\u7edf\u8ba1\u524d\u666f\u50cf\u7d20\u7684\u5e73\u5747\u7070\u5ea6\\(u0\\)\u3002\u7136\u540e\u7edf\u8ba1\\([i\uff0c255]\\)\u7070\u5ea6\u7ea7\u7684\u50cf\u7d20(\u5047\u8bbe\u50cf\u7d20\u503c\u5728\u6b64\u8303\u56f4\u7684\u50cf\u7d20\u53eb\u505a\u80cc\u666f\u50cf\u7d20) \u6240\u5360\u6574\u5e45\u56fe\u50cf\u7684\u6bd4\u4f8b\\(w1\\)\uff0c\u5e76\u7edf\u8ba1\u80cc\u666f\u50cf\u7d20\u7684\u5e73\u5747\u7070\u5ea6\\(u1\\)\u3002</li> <li>\u8ba1\u7b97\u524d\u666f\u50cf\u7d20\u548c\u80cc\u666f\u50cf\u7d20\u7684\u65b9\u5dee\\(g=w0*w1*(u0-u1)*(u0-u1)\\)\uff08\u5df2\u7ecf\u63a8\u5bfc\u4e86\uff09\u3002</li> <li>\u4e0d\u65ad\\(i++\\)\uff0c\u8f6c\u5230\u7b2c\\(4\\)\u4e2a\u6b65\u9aa4\u3002</li> <li>\u5c06\u6700\u5927\\(g\\)\u76f8\u5e94\u7684\\(i\\)\u503c\u4f5c\u4e3a\u56fe\u50cf\u7684\u5168\u5c40\u9608\u503c\u3002</li> </ul>"},{"location":"cv/base/Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#4-otsu","title":"4. OTSU\u7b97\u6cd5\u4ee3\u7801\u5b9e\u73b0","text":"C++<pre><code>int OTSU(Mat src){\n    int row = src.rows;\n    int col = src.cols;\n    int PixelCount[256]={0};\n    float PixelPro[256]={0};\n    int total_Pixel = row * col;\n    float threshold = 0;\n    //\u7edf\u8ba1\u7070\u5ea6\u7ea7\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u5728\u6574\u526f\u56fe\u4e2d\u7684\u4e2a\u6570\n    for(int i = 0; i &lt; row; i++){\n        for(int j = 0; j &lt; col; j++){\n            PixelCount[src.at&lt;int&gt;(i, j)]++;\n        }\n    }\n    //\u8ba1\u7b97\u6bcf\u4e2a\u50cf\u7d20\u5728\u6574\u526f\u56fe\u4e2d\u7684\u4e2a\u6570\n    for(int i = 0; i &lt; 256; i++){\n        PixelPro[i] = (float)(PixelCount[i]) / (float)(total_Pixel);\n    }\n    //\u904d\u5386\u7070\u5ea6\u7ea7[0,255]\uff0c\u8ba1\u7b97\u51fa\u65b9\u5dee\u6700\u5927\u7684\u7070\u5ea6\u503c\uff0c\u4e3a\u6700\u4f73\u9608\u503c\n    float w0, w1, u0tmp, u1tmp, u0, u1, u, deltaTmp, deltaMax = 0;\n    for(int i = 0; i &lt; 256; i++){\n        w0 = w1 = u0tmp = u1tmp = u0 = u1 = u = deltaTmp = 0;\n        for(int j = 0; j &lt; 256; j++){\n            if(j &lt;= i){//\u4ee5i\u4e3a\u9608\u503c\u5206\u7c7b\uff0c\u7b2c\u4e00\u7c7b\u603b\u7684\u6982\u7387\n                w0 += PixelPro[j];\n                u0tmp += j * PixelPro[j];\n            }else{//\u524d\u666f\u90e8\u5206\n                w1 += PixelPro[j];\n                u1tmp += j * PixelPro[j];\n            }\n        }\n        u0 = u0tmp / w0; //\u7b2c\u4e00\u7c7b\u7684\u5e73\u5747\u7070\u5ea6\n        u1 = u1tmp / w1; //\u7b2c\u4e8c\u7c7b\u7684\u5e73\u5747\u7070\u5ea6\n        u = u0 + u1; //\u6574\u526f\u56fe\u50cf\u7684\u5e73\u5747\u7070\u5ea6\n        //\u8ba1\u7b97\u7c7b\u95f4\u65b9\u5dee\n        deltaTmp = w0 * (u0 - u) * (u0 - u) + w1 * (u1 - u) * (u1 - u);\n        //\u627e\u51fa\u6700\u5927\u7c7b\u95f4\u65b9\u5dee\u4ee5\u53ca\u5bf9\u5e94\u9608\u503c\n        if(deltaTmp &gt; deltaMax){\n            deltaMax = deltaTmp;\n            threshold = i;\n        }\n    }\n    return threshold;\n}\n</code></pre>"},{"location":"cv/base/Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#5","title":"5. \u8fb9\u7f18\u68c0\u6d4b\u7684\u4e00\u822c\u6807\u51c6","text":"<p>\u8fb9\u7f18\u68c0\u6d4b\u6709\u4e0b\u9762\u51e0\u4e2a\u6807\u51c6\uff1a (1) \u4ee5\u4f4e\u7684\u9519\u8bef\u7387\u68c0\u6d4b\u8fb9\u7f18\uff0c\u4e5f\u5373\u610f\u5473\u7740\u9700\u8981\u5c3d\u53ef\u80fd\u51c6\u786e\u7684\u6355\u83b7\u56fe\u50cf\u4e2d\u5c3d\u53ef\u80fd\u591a\u7684\u8fb9\u7f18\u3002 (2) \u68c0\u6d4b\u5230\u7684\u8fb9\u7f18\u5e94\u7cbe\u786e\u5b9a\u4f4d\u5728\u771f\u5b9e\u8fb9\u7f18\u7684\u4e2d\u5fc3\u3002 (3) \u56fe\u50cf\u4e2d\u7ed9\u5b9a\u7684\u8fb9\u7f18\u5e94\u53ea\u88ab\u6807\u8bb0\u4e00\u6b21\uff0c\u5e76\u4e14\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u56fe\u50cf\u7684\u566a\u58f0\u4e0d\u5e94\u4ea7\u751f\u5047\u7684\u8fb9\u7f18\u3002</p>"},{"location":"cv/base/Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#6-canny","title":"6. Canny\u7b97\u5b50\u8fb9\u7f18\u68c0\u6d4b\u6b65\u9aa4","text":"<p>\u6709\u4e86\u4e0a\u9762\u7684\u94fa\u57ab\uff0c\u6211\u4eec\u6765\u5230\u4eca\u5929\u7684\u4e3b\u9898\uff0c\u6211\u4eec\u76f4\u63a5\u6765\u770b\u4e00\u4e0b\u57fa\u4e8eCanny\u7b97\u5b50\u8fdb\u884c\u8fb9\u7f18\u68c0\u6d4b\u7684\u6b65\u9aa4\uff0c\u6211\u4f1a\u5728\u7b2c6\u8282\u8be6\u7ec6\u8bb2\u89e3\u6bcf\u4e00\u4e2a\u6b65\u9aa4\u3002\u57fa\u4e8eCanny\u7b97\u5b50\u8fb9\u7f18\u68c0\u6d4b\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ul> <li>\u4f7f\u7528\u9ad8\u65af\u6ee4\u6ce2\u7b97\u6cd5\uff0c\u4ee5\u5e73\u6ed1\u56fe\u50cf\uff0c\u6ee4\u9664\u566a\u58f0</li> <li>\u8ba1\u7b97\u56fe\u50cf\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u70b9\u7684\u68af\u5ea6\u5f3a\u5ea6\u548c\u65b9\u5411</li> <li>\u5e94\u7528\u975e\u6781\u5927\u503c\u6291\u5236\uff0c\u4ee5\u6d88\u9664\u8fb9\u7f18\u68c0\u6d4b\u5e26\u6765\u7684\u6742\u6563\u54cd\u5e94</li> <li>\u5e94\u7528\u53cc\u9608\u503c\u68c0\u6d4b\u6765\u786e\u5b9a\u771f\u6b63\u7684\u8fb9\u7f18\u548c\u6f5c\u5728\u7684\u8fb9\u7f18</li> <li>\u901a\u8fc7\u6291\u5236\u5b64\u7acb\u7684\u5f31\u8fb9\u7f18\u6700\u7ec8\u5b8c\u6210\u8fb9\u7f18\u68c0\u6d4b</li> </ul>"},{"location":"cv/base/Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#7","title":"7. \u5bf9\u5e94\u7b97\u6cd5\u6b65\u9aa4\u7684\u8be6\u7ec6\u89e3\u91ca","text":""},{"location":"cv/base/Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#71","title":"7.1 \u9ad8\u65af\u6ee4\u6ce2","text":"<p>\u9996\u5148\u9ad8\u65af\u51fd\u6570\u7684\u5b9a\u4e49\u4e3a\\(h(x, y) = e^{-\\frac{x^2+y^2}{2\\sigma^2}}\\)\uff0c\u5176\u4e2d\\((x,y)\\)\u662f\u56fe\u50cf\u4e2d\u50cf\u7d20\u70b9\u7684\u5750\u6807\uff0c\\(\\sigma\\)\u4e3a\u6807\u51c6\u5dee\uff0c\u9ad8\u65af\u6a21\u677f\u5c31\u662f\u5229\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u7684\u3002</p> <p>\u63a5\u4e0b\u6765\u770b\u9ad8\u65af\u6a21\u677f\u662f\u5982\u4f55\u6784\u9020\u7684\uff0c\u5047\u8bbe\u9ad8\u65af\u6a21\u677f\u7684\u5c3a\u5bf8\u4e3a\\((2k+1)\\times (2k+1)\\)\u3002</p> <p>\u4e3a\u4ec0\u4e48\u957f\u5bbd\u90fd\u4e3a\u5947\u6570\uff0c\u8fd9\u4e3b\u8981\u662f\u4fdd\u8bc1\u6574\u4e2a\u6a21\u677f\u6709\u552f\u4e00\u4e2d\u5fc3\u5143\u7d20\uff0c\u4fbf\u4e8e\u8ba1\u7b97\u3002</p> <p>\u9ad8\u65af\u6a21\u677f\u4e2d\u7684\u5143\u7d20\u503c\u4e3a\uff1a</p> <p>\\(H_{i,j}=\\frac{1}{2\\pi {\\sigma^2}}e^{-\\frac{(i-k-1)^2+(j-k-1)^2}{2\\sigma^2}}\\)</p> <p>\u7136\u540e\u5728\u5b9e\u73b0\u751f\u6210\u9ad8\u65af\u6a21\u677f\u65f6\uff0c\u53c8\u6709\u4e24\u79cd\u5f62\u5f0f\uff0c\u5373\u6574\u6570\u5f62\u5f0f\u548c\u5c0f\u6570\u5f62\u5f0f\u3002\u5bf9\u4e8e\u5c0f\u6570\u5f62\u5f0f\u7684\u5c31\u662f\u6309\u7167\u4e0a\u9762\u7684\u516c\u5f0f\u76f4\u63a5\u6784\u9020\uff0c\u4e0d\u9700\u8981\u5176\u4ed6\u5904\u7406\uff0c\u800c\u6574\u6570\u5f62\u5f0f\u7684\u9700\u8981\u5f52\u4e00\u5316\uff0c\u5373\u5c06\u6a21\u677f\u5de6\u4e0a\u89d2\u7684\u503c\u5f52\u4e00\u5316\u4e3a\\(1\\)\u3002</p> <p>\u4f7f\u7528\u6574\u6570\u9ad8\u65af\u6a21\u677f\u65f6\uff0c\u9700\u8981\u5728\u6a21\u677f\u524d\u9762\u52a0\u4e00\u4e2a\u7cfb\u6570\uff0c\u8fd9\u4e2a\u7cfb\u6570\u4e3a\\(\\frac{1}{\\sum_{(i,j)\\in w}w_{i,j}}\\)\uff0c\u5c31\u662f\u6a21\u677f\u7cfb\u6570\u548c\u7684\u5bfc\u6570\u3002</p> <p>\u751f\u6210\u5c0f\u6570\u9ad8\u65af\u6a21\u677f\u4ee3\u7801\u5982\u4e0b\uff1a</p> <p>Text Only<pre><code>#define PI 3.1415926\n//\u751f\u6210\u5c0f\u6570\u5f62\u5f0f\u7684\u9ad8\u65af\u6a21\u677f\nvoid generateGaussianTemplate(double window[][11], int ksize, double sigma){\n    int center = ksize / 2; //\u6a21\u677f\u7684\u4e2d\u5fc3\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u5750\u6807\u539f\u70b9\n    double x2, y2;\n    for(int i = 0; i &lt; ksize; i++){\n        x2 = pow(i - center, 2);\n        for(int j = 0; j &lt; ksize; j++){\n            y2 = pow(j - center, 2);\n            double g = exp(-(x2 + y2)) / (2 * sigma * sigma);\n            g /= 2 * PI * sigma;\n            window[i][j] = g;\n        }\n    }\n    //\u5f52\u4e00\u5316\u5de6\u4e0a\u89d2\u7684\u6570\u4e3a1\n    double k = 1 / window[0][0];\n    for(int i = 0; i &lt; ksize; i++) {\n        for (int j = 0; j &lt; ksize; j++) {\n            window[i][j] *= k;\n        }\n    }\n}\n</code></pre> \u6574\u6570\u90e8\u5206\u57fa\u672c\u4e00\u6837\uff0c\u5c31\u4e0d\u8bf4\u4e86\u3002\u5bf9\u4e8e\\(ksize=3\\)\uff0c\\(\\sigma=0.8\\)\u7684\u9ad8\u65af\u6a21\u677f\u7ed3\u679c\u4e3a\uff1a</p> Bash<pre><code>1.00000 2.71828 1.00000 \n2.71828 7.38906 2.71828 \n1.00000 2.71828 1.00000 \n</code></pre> <p>\u8fd9\u91cc\u60f3\u8bf4\u4e00\u4e0b\\(\\sigma\\)\u7684\u4f5c\u7528\uff0c\u5f53\\(\\sigma\\)\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\uff0c\u751f\u6210\u7684\u9ad8\u65af\u6a21\u677f\u4e2d\u5fc3\u7684\u7cfb\u6570\u6bd4\u8f83\u5927\uff0c\u800c\u5468\u56f4\u7684\u7cfb\u6570\u6bd4\u8f83\u5c0f\uff0c\u8fd9\u6837\u5bf9\u56fe\u50cf\u7684\u5e73\u6ed1\u6548\u679c\u4e0d\u660e\u663e\u3002\u800c\u5f53\\(\\sigma\\)\u6bd4\u8f83\u5927\u65f6\uff0c\u751f\u6210\u7684\u6a21\u677f\u7684\u5404\u4e2a\u7cfb\u6570\u76f8\u5dee\u5c31\u4e0d\u662f\u5f88\u5927\uff0c\u6bd4\u8f83\u7c7b\u4f3c\u4e8e\u5747\u503c\u6a21\u677f\uff0c\u5bf9\u56fe\u50cf\u7684\u5e73\u6ed1\u6548\u679c\u6bd4\u8f83\u660e\u663e\u3002</p>"},{"location":"cv/base/Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#72","title":"7.2 \u8ba1\u7b97\u68af\u5ea6\u5f3a\u5ea6\u548c\u65b9\u5411","text":"<p>\u5229\u7528Sobel\u7b97\u5b50\u8fd4\u56de\u6c34\u5e73\\(Gx\\)\u548c\u5782\u76f4\\(Gy\\)\u7684\u4e00\u9636\u5bfc\u6570\u503c\u3002\u4ee5\u6b64\u6765\u8ba1\u7b97\u68af\u5ea6\u5f3a\u5ea6\\(G\\)\u548c\u68af\u5ea6\u65b9\u5411\u3002</p> <p>\\(G=\\sqrt{G_x^2+G_y^2}\\)</p> <p>\\(\\theta = arctan(\\frac{G_y}{G_x})\\)</p> <p>\\(G_x=\\sum_i\\sum_jSobelx_{i,j}*img_{i,j}\\)</p> <p>\\(G_y=\\sum_i\\sum_jSobely_{i,j}*img_{i,j}\\)</p> <p>\u5173\u4e8eSobel\u7b97\u5b50\u7684\u6784\u9020\u8bf7\u770b\u6628\u5929\u7684\u63a8\u6587\uff1aOpenCV\u56fe\u50cf\u5904\u7406\u4e13\u680f\u5341\u516b | \u624b\u52a8\u6784\u9020Sobel\u7b97\u5b50\u5b8c\u6210\u8fb9\u7f18\u68c0\u6d4b</p>"},{"location":"cv/base/Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#73","title":"7.3 \u5e94\u7528\u975e\u6781\u5927\u503c\u6291\u5236\uff0c\u4ee5\u6d88\u9664\u8fb9\u7f18\u68c0\u6d4b\u5e26\u6765\u7684\u6742\u6563\u54cd\u5e94","text":"<p>\u975e\u6781\u5927\u503c\u6291\u5236\u662f\u4e00\u79cd\u8fb9\u7f18\u7a00\u758f\u6280\u672f\uff0c\u4f5c\u7528\u5728\u4e8e\u7626\u8fb9\u3002\u5728\u5bf9\u56fe\u7247\u8fdb\u884c\u68af\u5ea6\u8ba1\u7b97\u4e4b\u540e\uff0c\u4ec5\u4ec5\u57fa\u4e8e\u68af\u5ea6\u503c\u63d0\u53d6\u7684\u8fb9\u7f18\u4ecd\u7136\u6bd4\u8f83\u6a21\u7cca\u3002\u6839\u636e\u6807\u51c6(3)\uff0c\u5bf9\u8fb9\u7f18\u6709\u4e14\u5e94\u5f53\u53ea\u6709\u4e00\u4e2a\u51c6\u786e\u7684\u54cd\u5e94\u3002\u800c\u975e\u6781\u5927\u503c\u6291\u5236\u53ef\u4ee5\u5e2e\u52a9\u5c06\u5c06\u5c40\u90e8\u6700\u5927\u503c\u4e4b\u5916\u7684\u6240\u6709\u68af\u5ea6\u503c\u6291\u5236\u4e3a\\(0\\)\uff0c\u5bf9\u68af\u5ea6\u56fe\u50cf\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u8fdb\u884c\u975e\u6781\u5927\u503c\u6291\u5236\u7684\u7b97\u6cd5\u6b65\u9aa4\u4e3a\uff1a</p> <p>(1) \u5c06\u5f53\u524d\u50cf\u7d20\u7684\u68af\u5ea6\u5f3a\u5ea6\u4e0e\u6cbf\u6b63\u8d1f\u68af\u5ea6\u65b9\u5411\u4e0a\u7684\u4e24\u4e2a\u50cf\u7d20\u8fdb\u884c\u6bd4\u8f83\u3002</p> <p>(2) \u5982\u679c\u5f53\u524d\u50cf\u7d20\u7684\u68af\u5ea6\u503c\u4e0e\u53e6\u5916\u4e24\u4e2a\u50cf\u7d20\u503c\u76f8\u6bd4\u6700\u5927\uff0c\u5219\u8be5\u50cf\u7d20\u70b9\u4fdd\u7559\u4e3a\u8fb9\u7f18\u70b9\uff0c\u5426\u5219\u8be5\u50cf\u7d20\u70b9\u88ab\u6291\u5236\u3002</p> <p>\u901a\u5e38\u4e3a\u4e86\u66f4\u52a0\u7cbe\u786e\u7684\u8ba1\u7b97\uff0c\u5728\u8de8\u68af\u5ea6\u65b9\u5411\u7684\u4e24\u4e2a\u76f8\u90bb\u50cf\u7d20\u4e4b\u95f4\u4f7f\u7528\u7ebf\u6027\u63d2\u503c\u6765\u5f97\u5230\u8981\u6bd4\u8f83\u7684\u50cf\u7d20\u68af\u5ea6\u3002</p> <p></p> <p>\u5982Fig1\u6240\u793a\uff0c\u5c06\u68af\u5ea6\u5206\u4e3a\\(8\\)\u4e2a\u65b9\u5411\uff0c\u5206\u522b\u4e3aE\u3001NE\u3001N\u3001NW\u3001W\u3001SW\u3001S\u3001SE\u3002\u5176\u4e2d\\(0\\)\u4ee3\u8868\\([0^o,45^o]\\),\\(1\\)\u4ee3\u8868\\([45^o,90^o]\\)\uff0c\\(2\\)\u4ee3\u8868\\([-90^o,-45^o]\\)\uff0c\\(3\\)\u4ee3\u8868\\([-45^o,0^o]\\)\u3002\u50cf\u7d20\u70b9\\(P\\)\u7684\u68af\u5ea6\u65b9\u5411\u4e3a\\(\\theta\\)\uff0c\u5219\u50cf\u7d20\u70b9\\(P1\\)\u548c\\(P2\\)\u7684\u68af\u5ea6\u7ebf\u6027\u63d2\u503c\u4e3a\uff1a </p> <p></p> <p>\u56e0\u6b64\u975e\u6781\u5927\u503c\u6291\u5236\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <p></p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u4f55\u6807\u5fd7\u65b9\u5411\u5e76\u4e0d\u91cd\u8981\uff0c\u91cd\u8981\u7684\u662f\u68af\u5ea6\u65b9\u5411\u7684\u8ba1\u7b97\u8981\u548c\u68af\u5ea6\u7b97\u5b50\u7684\u9009\u53d6\u4fdd\u6301\u4e00\u81f4\u3002</p>"},{"location":"cv/base/Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#74","title":"7.4 \u53cc\u9608\u503c\u68c0\u6d4b","text":"<p>\u5728\u65bd\u52a0\u975e\u6781\u5927\u503c\u6291\u5236\u4e4b\u540e\uff0c\u5269\u4f59\u7684\u50cf\u7d20\u53ef\u4ee5\u66f4\u51c6\u786e\u5730\u8868\u793a\u56fe\u50cf\u4e2d\u7684\u5b9e\u9645\u8fb9\u7f18\u3002\u7136\u800c\uff0c\u4ecd\u7136\u5b58\u5728\u7531\u4e8e\u566a\u58f0\u548c\u989c\u8272\u53d8\u5316\u5f15\u8d77\u7684\u4e00\u4e9b\u8fb9\u7f18\u50cf\u7d20\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u6742\u6563\u54cd\u5e94\uff0c\u5fc5\u987b\u7528\u5f31\u68af\u5ea6\u503c\u8fc7\u6ee4\u8fb9\u7f18\u50cf\u7d20\uff0c\u5e76\u4fdd\u7559\u5177\u6709\u9ad8\u68af\u5ea6\u503c\u7684\u8fb9\u7f18\u50cf\u7d20\uff0c\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u9ad8\u4f4e\u9608\u503c\u6765\u5b9e\u73b0\u3002\u5982\u679c\u8fb9\u7f18\u50cf\u7d20\u7684\u68af\u5ea6\u503c\u9ad8\u4e8e\u9ad8\u9608\u503c\uff0c\u5219\u5c06\u5176\u6807\u8bb0\u4e3a\u5f3a\u8fb9\u7f18\u50cf\u7d20\uff1b\u5982\u679c\u8fb9\u7f18\u50cf\u7d20\u7684\u68af\u5ea6\u503c\u5c0f\u4e8e\u9ad8\u9608\u503c\u5e76\u4e14\u5927\u4e8e\u4f4e\u9608\u503c\uff0c\u5219\u5c06\u5176\u6807\u8bb0\u4e3a\u5f31\u8fb9\u7f18\u50cf\u7d20\uff1b\u5982\u679c\u8fb9\u7f18\u50cf\u7d20\u7684\u68af\u5ea6\u503c\u5c0f\u4e8e\u4f4e\u9608\u503c\uff0c\u5219\u4f1a\u88ab\u6291\u5236\u3002\u9608\u503c\u7684\u9009\u62e9\u53d6\u51b3\u4e8e\u7ed9\u5b9a\u8f93\u5165\u56fe\u50cf\u7684\u5185\u5bb9\u3002</p> <p>\u53cc\u9608\u503c\u68c0\u6d4b\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"cv/base/Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#75","title":"7.5 \u6291\u5236\u5b64\u7acb\u5f31\u8fb9\u7f18\u5b8c\u6210\u8fb9\u7f18\u68c0\u6d4b","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u88ab\u5212\u5206\u4e3a\u5f3a\u8fb9\u7f18\u7684\u50cf\u7d20\u70b9\u5df2\u7ecf\u88ab\u786e\u5b9a\u4e3a\u8fb9\u7f18\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u4ece\u56fe\u50cf\u4e2d\u7684\u771f\u5b9e \u8fb9\u7f18\u4e2d\u63d0\u53d6\u51fa\u6765\u7684\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u5f31\u8fb9\u7f18\u50cf\u7d20\uff0c\u5c06\u4f1a\u6709\u4e00\u4e9b\u4e89\u8bba\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u50cf\u7d20\u53ef\u4ee5\u4ece\u771f\u5b9e\u8fb9\u7f18\u63d0\u53d6\u4e5f\u53ef\u4ee5\u662f\u56e0\u566a\u58f0\u6216\u989c\u8272\u53d8\u5316\u5f15\u8d77\u7684\u3002\u4e3a\u4e86\u83b7\u5f97\u51c6\u786e\u7684\u7ed3\u679c\uff0c\u5e94\u8be5\u6291\u5236\u7531\u540e\u8005\u5f15\u8d77\u7684\u5f31\u8fb9\u7f18\u3002\u901a\u5e38\uff0c\u7531\u771f\u5b9e\u8fb9\u7f18\u5f15\u8d77\u7684\u5f31\u8fb9\u7f18\u50cf\u7d20\u5c06\u8fde\u63a5\u5230\u5f3a\u8fb9\u7f18\u50cf\u7d20\uff0c\u800c\u566a\u58f0\u54cd\u5e94\u672a\u8fde\u63a5\u3002\u4e3a\u4e86\u8ddf\u8e2a\u8fb9\u7f18\u8fde\u63a5\uff0c\u901a\u8fc7\u67e5\u770b\u5f31\u8fb9\u7f18\u50cf\u7d20\u53ca\u5176\\(8\\)\u4e2a\u90bb\u57df\u50cf\u7d20\uff0c\u53ea\u8981\u5176\u4e2d\u4e00\u4e2a\u4e3a\u5f3a\u8fb9\u7f18\u50cf\u7d20\uff0c\u5219\u8be5\u5f31\u8fb9\u7f18\u70b9\u5c31\u53ef\u4ee5\u4fdd\u7559\u4e3a\u771f\u5b9e\u7684\u8fb9\u7f18\u3002</p> <p>\u8fd9\u90e8\u5206\u7684\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"cv/base/Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#8-c","title":"8. C++\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u6309\u7167\u4e0a\u9762\u7684\u6b65\u9aa4\u4e00\u6b65\u6b65\u5b9e\u73b0\u57fa\u4e8eCanny\u7684\u8fb9\u7f18\u68c0\u6d4b\u7b97\u6cd5\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p> C++<pre><code>const double PI = 3.1415926;\n\ndouble getSum(Mat src){\n    double sum = 0;\n    for(int i = 0; i &lt; src.rows; i++){\n        for(int j = 0; j &lt; src.cols; j++){\n            sum += (double)src.at&lt;double&gt;(i, j);\n        }\n    }\n    return sum;\n}\n\nMat CannyEdgeDetection(cv::Mat src, int kSize, double hightThres, double lowThres){\n//    if(src.channels() == 3){\n//        cvtColor(src, src, CV_BGR2GRAY);\n//    }\n    cv::Rect rect;\n    Mat gaussResult;\n    int row = src.rows;\n    int col = src.cols;\n    printf(\"%d %d\\n\", row, col);\n    Mat filterImg = Mat::zeros(row, col, CV_64FC1);\n    src.convertTo(src, CV_64FC1);\n    Mat dst = Mat::zeros(row, col, CV_64FC1);\n    int gaussCenter = kSize / 2;\n    double  sigma = 1;\n    Mat guassKernel = Mat::zeros(kSize, kSize, CV_64FC1);\n    for(int i = 0; i &lt; kSize; i++){\n        for(int j = 0; j &lt; kSize; j++){\n            guassKernel.at&lt;double&gt;(i, j) = (1.0 / (2.0 * PI * sigma * sigma)) * (double)exp(-(((double)pow((i - (gaussCenter+1)), 2) + (double)pow((j-(gaussCenter+1)), 2)) / (2.0*sigma*sigma)));\n        }\n    }\n    Scalar sumValueScalar = cv::sum(guassKernel);\n    double sum = sumValueScalar.val[0];\n    guassKernel = guassKernel / sum;\n    for(int i = gaussCenter; i &lt; row - gaussCenter; i++){\n        for(int j = gaussCenter; j &lt; col - gaussCenter; j++){\n            rect.x = j - gaussCenter;\n            rect.y = i - gaussCenter;\n            rect.width = kSize;\n            rect.height = kSize;\n            //printf(\"%d %d\\n\", i, j);\n            //printf(\"%d %d %.5f\\n\", i, j, cv::sum(guassKernel.mul(src(rect))).val[0]);\n            filterImg.at&lt;double&gt;(i, j) = cv::sum(guassKernel.mul(src(rect))).val[0];\n        }\n    }\n    Mat gradX = Mat::zeros(row, col, CV_64FC1); //\u6c34\u5e73\u68af\u5ea6\n    Mat gradY = Mat::zeros(row, col, CV_64FC1); //\u5782\u76f4\u68af\u5ea6\n    Mat grad = Mat::zeros(row, col, CV_64FC1); //\u68af\u5ea6\u5e45\u503c\n    Mat thead = Mat::zeros(row, col, CV_64FC1); //\u68af\u5ea6\u89d2\u5ea6\n    Mat whereGrad = Mat::zeros(row, col, CV_64FC1);//\u533a\u57df\n    //x\u65b9\u5411\u7684Sobel\u7b97\u5b50\n    Mat Sx = (cv::Mat_&lt;double&gt;(3, 3) &lt;&lt; -1, 0, 1, -2, 0, 2, -1, 0, 1);\n    //y\u65b9\u5411\u7684Sobel\u7b97\u5b50\n    Mat Sy = (cv::Mat_&lt;double &gt;(3, 3) &lt;&lt; 1, 2, 1, 0, 0, 0, -1, -2, -1);\n    //\u8ba1\u7b97\u68af\u5ea6\u8d4b\u503c\u548c\u89d2\u5ea6\n    for(int i=1; i &lt; row-1; i++){\n        for(int j=1; j &lt; col-1; j++){\n            rect.x = j-1;\n            rect.y = i-1;\n            rect.width = 3;\n            rect.height = 3;\n            Mat rectImg = Mat::zeros(3, 3, CV_64FC1);\n            filterImg(rect).copyTo(rectImg);\n            //\u68af\u5ea6\u548c\u89d2\u5ea6\n            gradX.at&lt;double&gt;(i, j) += cv::sum(rectImg.mul(Sx)).val[0];\n            gradY.at&lt;double&gt;(i, j) += cv::sum(rectImg.mul(Sy)).val[0];\n            grad.at&lt;double&gt;(i, j) = sqrt(pow(gradX.at&lt;double&gt;(i, j), 2) + pow(gradY.at&lt;double&gt;(i, j), 2));\n            thead.at&lt;double&gt;(i, j) = atan(gradY.at&lt;double&gt;(i, j)/gradX.at&lt;double&gt;(i, j));\n            if(0 &lt;= thead.at&lt;double&gt;(i, j) &lt;= (PI/4.0)){\n                whereGrad.at&lt;double&gt;(i, j) = 0;\n            }else if(PI/4.0 &lt; thead.at&lt;double&gt;(i, j) &lt;= (PI/2.0)){\n                whereGrad.at&lt;double&gt;(i, j) = 1;\n            }else if(-PI/2.0 &lt;= thead.at&lt;double&gt;(i, j) &lt;= (-PI/4.0)){\n                whereGrad.at&lt;double&gt;(i, j) = 2;\n            }else if(-PI/4.0 &lt; thead.at&lt;double&gt;(i, j) &lt; 0){\n                whereGrad.at&lt;double&gt;(i, j) = 3;\n            }\n        }\n    }\n    //printf(\"success\\n\");\n    //\u68af\u5ea6\u5f52\u4e00\u5316\n    double gradMax;\n    cv::minMaxLoc(grad, &amp;gradMax);\n    if(gradMax != 0){\n        grad = grad / gradMax;\n    }\n    //\u53cc\u9608\u503c\u786e\u5b9a\n    cv::Mat caculateValue = cv::Mat::zeros(row, col, CV_64FC1); //grad\u53d8\u6210\u4e00\u7ef4\n    resize(grad, caculateValue, Size(1, grad.rows * grad.cols));\n    cv::sort(caculateValue, caculateValue, CV_SORT_EVERY_COLUMN + CV_SORT_ASCENDING);//\u5347\u5e8f\n    long long highIndex= row * col * hightThres;\n    double highValue = caculateValue.at&lt;double&gt;(highIndex, 0); //\u6700\u5927\u9608\u503c\n    double lowValue = highValue * lowThres;\n    //NMS\n    for(int i = 1 ; i &lt; row-1; i++ ){\n        for( int j = 1; j&lt;col-1; j++){\n            // \u516b\u4e2a\u65b9\u4f4d\n            double N = grad.at&lt;double&gt;(i-1, j);\n            double NE = grad.at&lt;double&gt;(i-1, j+1);\n            double E = grad.at&lt;double&gt;(i, j+1);\n            double SE = grad.at&lt;double&gt;(i+1, j+1);\n            double S = grad.at&lt;double&gt;(i+1, j);\n            double SW = grad.at&lt;double&gt;(i-1, j-1);\n            double W = grad.at&lt;double&gt;(i, j-1);\n            double NW = grad.at&lt;double&gt;(i -1, j -1); // \u533a\u57df\u5224\u65ad\uff0c\u7ebf\u6027\u63d2\u503c\u5904\u7406\n            double tanThead; // tan\u89d2\u5ea6\n            double Gp1; // \u4e24\u4e2a\u65b9\u5411\u7684\u68af\u5ea6\u5f3a\u5ea6\n            double Gp2; // \u6c42\u89d2\u5ea6\uff0c\u7edd\u5bf9\u503c\n            tanThead = abs(tan(thead.at&lt;double&gt;(i,j)));\n            switch ((int)whereGrad.at&lt;double&gt;(i,j)) {\n                case 0: Gp1 = (1- tanThead) * E + tanThead * NE; Gp2 = (1- tanThead) * W + tanThead * SW; break;\n                case 1: Gp1 = (1- tanThead) * N + tanThead * NE; Gp2 = (1- tanThead) * S + tanThead * SW; break;\n                case 2: Gp1 = (1- tanThead) * N + tanThead * NW; Gp2 = (1- tanThead) * S + tanThead * SE; break;\n                case 3: Gp1 = (1- tanThead) * W + tanThead *NW; Gp2 = (1- tanThead) * E + tanThead *SE; break;\n                default: break;\n            }\n            // NMS -\u975e\u6781\u5927\u503c\u6291\u5236\u548c\u53cc\u9608\u503c\u68c0\u6d4b\n            if(grad.at&lt;double&gt;(i, j) &gt;= Gp1 &amp;&amp; grad.at&lt;double&gt;(i, j) &gt;= Gp2){\n                //\u53cc\u9608\u503c\u68c0\u6d4b\n                if(grad.at&lt;double&gt;(i, j) &gt;= highValue){\n                    grad.at&lt;double&gt;(i, j) = highValue;\n                    dst.at&lt;double&gt;(i, j) = 255;\n                } else if(grad.at&lt;double&gt;(i, j) &lt; lowValue){\n                    grad.at&lt;double&gt;(i, j) = 0;\n                } else{\n                    grad.at&lt;double&gt;(i, j) = lowValue;\n                }\n            } else{\n                grad.at&lt;double&gt;(i, j) = 0;\n            }\n        }\n    }\n    //\u6291\u5236\u5b64\u7acb\u4f4e\u9608\u503c\u70b9 3*3. \u627e\u5230\u9ad8\u9608\u503c\u5c31255\n    for(int i = 1; i &lt; row - 1; i++){\n        for(int j = 1; j &lt; col - 1; j++){\n            if(grad.at&lt;double&gt;(i, j) == lowValue){\n                //3*3 \u533a\u57df\u5f3a\u5ea6\n                rect.x = i-1;\n                rect.y = j-1;\n                rect.width = 3;\n                rect.height = 3;\n                for(int x = 0; x &lt; 3; x++){\n                    for(int y = 0; y &lt; 3; y++){\n                        if(grad(rect).at&lt;double&gt;(x, y)==highValue){\n                            dst.at&lt;double&gt;(i, j) = 255;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return dst;\n}\n</code></pre>"},{"location":"cv/base/Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#9","title":"9. \u6548\u679c","text":"<p> \u8fb9\u7f18\u68c0\u6d4b\u7684\u6548\u679c\u4e0d\u5982OpenCV\u81ea\u5e26\u7684\uff0c\u9700\u8981\u518d\u7814\u7a76\u7814\u7a76\u3002</p>"},{"location":"cv/base/Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#10","title":"10. \u7ed3\u8bba","text":"<p>\u672c\u6587\u4ecb\u7ecd\u4e86\u56fe\u50cf\u5904\u7406\u7b97\u6cd5\u4e2d\u6700\u5e38\u7528\u7684\u8fb9\u7f18\u68c0\u6d4b\u7b97\u6cd5\u7684\u539f\u7406\u4ee5\u53ca\u4e00\u4e2aC++\u590d\u73b0\uff0c\u7136\u800c\u53ef\u60dc\u7684\u662f\u6548\u679c\u6ca1\u6709OpenCV\u81ea\u5e26\u7b97\u6cd5\u7684\u6548\u679c\u597d\uff0c\u5e76\u4e14\u901f\u5ea6\u4e5f\u4f1a\u7a0d\u6162\uff0c\u4e00\u5b9a\u662f\u67d0\u4e2a\u7ec6\u8282\u6ca1\u6709\u5904\u7406\u5b8c\u7f8e\uff0c\u4f46\u4f5c\u4e3a\u79d1\u666e\u6765\u8bb2\u5927\u6982\u5df2\u7ecf\u591f\u7528\u4e86\uff0c\u5982\u679c\u60f3\u5b9e\u73b0\u5b8c\u7f8e\u7684Sobel\u8fb9\u7f18\u68c0\u6d4b\u8bf7\u67e5\u770bOpenCV\u6e90\u7801\u6216\u8005\u548c\u6211\u4e00\u8d77\u8ba8\u8bba\u3002</p>"},{"location":"cv/base/Canny%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#11","title":"11. \u53c2\u8003","text":"<ul> <li> <p>https://blog.csdn.net/jmu201521121021/article/details/80622011</p> </li> <li> <p>https://www.cnblogs.com/techyan1990/p/7291771.html</p> </li> </ul>"},{"location":"cv/base/Sobel%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/","title":"1. \u524d\u8a00","text":"<p>\u4f17\u6240\u5468\u77e5\uff0c\u5728\u4f20\u7edf\u7684\u56fe\u50cf\u8fb9\u7f18\u68c0\u6d4b\u7b97\u6cd5\u4e2d\uff0c\u6700\u5e38\u7528\u7684\u4e00\u79cd\u7b97\u6cd5\u662f\u5229\u7528Sobel\u7b97\u5b50\u5b8c\u6210\u7684\u3002Sobel\u7b97\u5b50\u4e00\u5171\u6709\\(2\\)\u4e2a\uff0c\u4e00\u4e2a\u662f\u68c0\u6d4b\u6c34\u5e73\u8fb9\u7f18\u7684\u7b97\u5b50\uff0c\u53e6\u4e00\u4e2a\u662f\u68c0\u6d4b\u5782\u76f4\u8fb9\u7f18\u7684\u7b97\u5b50\u3002</p>"},{"location":"cv/base/Sobel%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#2-sobel","title":"2. Sobel\u7b97\u5b50\u4f18\u7f3a\u70b9","text":"<p>Sobel\u7b97\u5b50\u7684\u4f18\u70b9\u662f\u53ef\u4ee5\u5229\u7528\u5feb\u901f\u5377\u79ef\u51fd\u6570\uff0c\u7b80\u5355\u6709\u6548\uff0c\u4e14\u5bf9\u9886\u57df\u50cf\u7d20\u4f4d\u7f6e\u7684\u5f71\u54cd\u505a\u4e86\u52a0\u6743\uff0c\u53ef\u4ee5\u964d\u4f4e\u8fb9\u7f18\u6a21\u7cca\u7a0b\u5ea6\uff0c\u6709\u8f83\u597d\u6548\u679c\u3002\u7136\u800cSobel\u7b97\u5b50\u5e76\u6ca1\u6709\u57fa\u4e8e\u56fe\u50cf\u7684\u7070\u5ea6\u4fe1\u606f\u8fdb\u884c\u5904\u7406\uff0c\u6240\u4ee5\u5728\u63d0\u53d6\u56fe\u50cf\u8fb9\u7f18\u4fe1\u606f\u7684\u65f6\u5019\u53ef\u80fd\u4e0d\u4f1a\u8ba9\u4eba\u89c6\u89c9\u6ee1\u610f\u3002</p>"},{"location":"cv/base/Sobel%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#3-sobel","title":"3. \u624b\u52a8\u6784\u9020Sobel\u7b97\u5b50","text":"<p>\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u600e\u4e48\u6784\u9020Sobel\u7b97\u5b50\uff1f</p> <p>Sobel\u7b97\u5b50\u662f\u5728\u4e00\u4e2a\u5750\u6807\u8f74\u7684\u65b9\u5411\u8fdb\u884c\u975e\u5f52\u4e00\u5316\u7684\u9ad8\u65af\u5e73\u6ed1\uff0c\u5728\u53e6\u5916\u4e00\u4e2a\u5750\u6807\u8f74\u65b9\u5411\u505a\u4e00\u4e2a\u5dee\u5206\uff0c\\(kszie\\times ksize\\)\u5927\u5c0f\u7684Sobel\u7b97\u5b50\u662f\u7531\u5e73\u6ed1\u7b97\u5b50\u548c\u5dee\u5206\u7b97\u5b50\u5168\u5377\u79ef\u5f97\u5230\uff0c\u5176\u4e2d\\(ksize\\)\u4ee3\u8868Sobel\u7b97\u5b50\u7684\u534a\u5f84\uff0c\u5fc5\u987b\u4e3a\u5947\u6570\u3002</p> <p>\u5bf9\u4e8e\u7a97\u53e3\u5927\u5c0f\u4e3a\\(ksize\\)\u7684\u975e\u5f52\u4e00\u5316Sobel\u5e73\u6ed1\u7b97\u5b50\u7b49\u4e8e\\(ksize-1\\)\u9636\u7684\u4e8c\u9879\u5f0f\u5c55\u5f00\u5f0f\u7684\u7cfb\u6570\uff0c\u800cSobel\u5e73\u6ed1\u7b97\u5b50\u7b49\u4e8e\\(ksize-2\\)\u9636\u7684\u4e8c\u9879\u5f0f\u5c55\u5f00\u5f0f\u7684\u7cfb\u6570\u4e24\u4fa7\u8865\\(0\\)\uff0c\u7136\u540e\u5411\u524d\u5dee\u5206\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u6784\u9020\u4e00\u4e2a\\(4\\)\u9636\u7684Sobel\u975e\u5f52\u4e00\u5316\u7684Sobel\u5e73\u6ed1\u7b97\u5b50\u548cSobel\u5dee\u5206\u7b97\u5b50\uff1a</p> <p>Sobel\u5e73\u6ed1\u7b97\u5b50\uff1a \u53d6\u4e8c\u9879\u5f0f\u7684\u9636\u6570\u4e3a\\(n=3\\)\uff0c\u7136\u540e\u8ba1\u7b97\u5c55\u5f00\u5f0f\u7cfb\u6570\u4e3a\uff0c\\([C_3^0, C_3^1, C_3^2, C_3^3]\\) \u4e5f\u5373\u662f\\([1, 3, 3, 3]\\)\uff0c\u8fd9\u5c31\u662f\\(4\\)\u9636\u7684\u975e\u5f52\u4e00\u5316\u7684Sobel\u5e73\u6ed1\u7b97\u5b50\u3002</p> <p>Sobel\u5dee\u5206\u7b97\u5b50\uff1a\u53d6\u4e8c\u9879\u5f0f\u7684\u9636\u6570\u4e3a\\(n=4-2=2\\)\uff0c\u7136\u540e\u8ba1\u7b97\u4e8c\u9879\u5c55\u5f00\u5f0f\u7684\u7cfb\u6570\uff0c\u5373\u4e3a\uff1a\\([C_2^0, C_2^1, C_2^2]\\)\uff0c\u4e24\u4fa7\u8865\\(0\\) \u5e76\u4e14\u524d\u5411\u5dee\u5206\u5f97\u5230\\([1, 1, -1, -1]\\)\uff0c\u7b2c\\(5\\)\u9879\u5dee\u5206\u540e\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u3002</p> <p>Sobel\u7b97\u5b50\uff1a\u5c06\\(4\\)\u9636\u7684Sobel\u5e73\u6ed1\u7b97\u5b50\u548cSobel\u5dee\u5206\u7b97\u5b50\u8fdb\u884c\u5168\u5377\u79ef\uff0c\u5373\u53ef\u5f97\u5230\\(4\\times 4\\)\u7684Sobel\u7b97\u5b50\u3002</p> <p>\u5176\u4e2d\\(x\\)\u65b9\u5411\u7684Sobel\u7b97\u5b50\u4e3a\uff1a</p> <p>\\(soble_x=\\begin{bmatrix} 1 \\\\3\\\\3\\\\1 \\end{bmatrix} * \\begin{bmatrix} 1 &amp;1 &amp;-1&amp; -1\\end{bmatrix}=\\begin{bmatrix} 1 &amp;1&amp;-1&amp;-1\\\\3&amp;3&amp;-3&amp;-3\\\\3&amp;3&amp;-3&amp;-3\\\\1&amp;1&amp;-1&amp;-1  \\end{bmatrix}\\)</p> <p>\u800c\\(y\\)\u65b9\u5411\u7684Sobel\u7b97\u5b50\u4e3a\uff1a</p> <p>\\(sobel_y=\\begin{bmatrix} 1 &amp;3&amp;3&amp;1 \\end{bmatrix}*\\begin{bmatrix} 1 \\\\1\\\\-1\\\\-1 \\end{bmatrix}=\\begin{bmatrix} 1 &amp;3&amp;3&amp;1\\\\1&amp;3&amp;3&amp;1\\\\-1&amp;-3&amp;-3&amp;-1\\\\-1&amp;-3&amp;-3&amp;-1  \\end{bmatrix}\\)</p>"},{"location":"cv/base/Sobel%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#4","title":"4. \u4ee3\u7801\u5b9e\u73b0","text":"C++<pre><code>const int fac[9]={1, 1, 2, 6, 24, 120, 720, 5040, 40320};\n//Sobel\u5e73\u6ed1\u7b97\u5b50\nMat getSmmoothKernel(int ksize){\n    Mat Smooth = Mat::zeros(Size(ksize, 1), CV_32FC1);\n    for(int i = 0; i &lt; ksize; i++){\n        Smooth.at&lt;float&gt;(0, i) = float(fac[ksize-1]/(fac[i] * fac[ksize-1-i]));\n    }\n    return Smooth;\n}\n//Sobel\u5dee\u5206\u7b97\u5b50\nMat getDiffKernel(int ksize){\n    Mat Diff = Mat::zeros(Size(ksize, 1), CV_32FC1);\n    Mat preDiff = getSmmoothKernel(ksize-1);\n    for(int i = 0; i &lt; ksize; i++){\n        if(i == 0){\n            Diff.at&lt;float&gt;(0, i) = 1;\n        }else if(i == ksize-1){\n            Diff.at&lt;float&gt;(0, i) = -1;\n        }else{\n            Diff.at&lt;float&gt;(0, i) = preDiff.at&lt;float&gt;(0, i) - preDiff.at&lt;float&gt;(0, i-1);\n        }\n    }\n    return Diff;\n}\n//\u8c03\u7528filter2D\u5b9e\u73b0\u5377\u79ef\nvoid conv2D(InputArray src, InputArray kernel, OutputArray dst, int dep, Point anchor=Point(-1,-1), int borderType=BORDER_DEFAULT){\n    Mat kernelFlip;\n    flip(kernel, kernelFlip, -1);\n    filter2D(src, dst, dep, kernelFlip, anchor, 0.0, borderType);\n}\n//\u5148\u8fdb\u884c\u5782\u76f4\u65b9\u5411\u7684\u5377\u79ef\uff0c\u518d\u8fdb\u884c\u6c34\u5e73\u65b9\u5411\u7684\u5377\u79ef\nvoid sepConv2D_Y_X(InputArray src, OutputArray dst, int dep, InputArray kernelY, InputArray kernelX, Point anchor=Point(-1,-1), int borderType=BORDER_DEFAULT){\n    Mat Y;\n    conv2D(src, kernelY, Y, dep, anchor, borderType);\n    conv2D(Y, kernelX, dst, dep, anchor, borderType);\n}\n//\u5148\u8fdb\u884c\u6c34\u5e73\u65b9\u5411\u7684\u5377\u79ef\uff0c\u518d\u8fdb\u884c\u5782\u76f4\u65b9\u5411\u7684\u5377\u79ef\nvoid sepConv2D_X_Y(InputArray src, OutputArray dst, int dep, InputArray kernelX, InputArray kernelY, Point anchor=Point(-1,-1), int borderType=BORDER_DEFAULT){\n    Mat X;\n    conv2D(src, kernelX, X, dep, anchor, borderType);\n    conv2D(X, kernelY, dst, dep, anchor, borderType);\n}\n//Sobel\u7b97\u5b50\u63d0\u53d6\u8fb9\u7f18\u4fe1\u606f\nMat Sobel(Mat &amp;src, int x_flag, int y_flag, int kSize, int borderType){\n    Mat Smooth = getSmmoothKernel(kSize);\n    Mat Diff = getDiffKernel(kSize);\n    Mat dst;\n    if(x_flag){\n        sepConv2D_Y_X(src, dst, CV_32FC1, Smooth.t(), Diff, Point(-1, -1), borderType);\n    }else if(x_flag == 0 &amp;&amp; y_flag){\n        sepConv2D_X_Y(src, dst, CV_32FC1, Smooth, Diff.t(), Point(-1, -1), borderType);\n    }\n    return dst;\n}\nint main(){\n    Mat src = imread(\"../lena.jpg\");\n    Mat gray;\n    cvtColor(src, gray, CV_BGR2GRAY);\n    Mat dst1 = Sobel(gray, 1, 0, 3, BORDER_DEFAULT);\n    Mat dst2 = Sobel(gray, 0, 1, 3, BORDER_DEFAULT);\n    //\u8f6c8\u4f4d\u7070\u5ea6\u56fe\u663e\u793a\n    convertScaleAbs(dst1, dst1);\n    convertScaleAbs(dst2, dst2);\n    imshow(\"origin\", gray);\n    imshow(\"result-X\", dst1);\n    imshow(\"result-Y\", dst2);\n    imwrite(\"../result.jpg\", dst1);\n    imwrite(\"../result2.jpg\", dst2);\n    waitKey(0);\n    return 0;\n}\n</code></pre>"},{"location":"cv/base/Sobel%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#5","title":"5. \u6548\u679c","text":"<p>\u53ef\u4ee5\u770b\u5230\u4e24\u79cd\u4e0d\u540c\u7684\u64cd\u4f5c\u987a\u5e8f\u4f1a\u83b7\u5f97\u4e0d\u5b8c\u5168\u4e00\u6837\u7684\u8fb9\u7f18\u68c0\u6d4b\u6548\u679c\u3002</p>"},{"location":"cv/base/Sobel%E7%AE%97%E5%AD%90%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/#6","title":"6. \u7ed3\u8bba","text":"<p>\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86\u8fb9\u7f18\u68c0\u6d4b\u662f\u5982\u4f55\u624b\u52a8\u6784\u9020\u7684\uff0c\u53ea\u8981\u719f\u8bb0\u4e8c\u9879\u5f0f\u5c55\u5f00\u7684\u7cfb\u6570\uff0c\u4ee5\u6b64\u4e3a\u51fa\u53d1\u70b9\u5c31\u6bd4\u8f83\u597d\u5206\u6790\u4e86\u3002</p>"},{"location":"cv/base/%E5%8F%8C%E8%BE%B9%E6%BB%A4%E6%B3%A2%E5%8E%9F%E7%90%86%E5%8F%8AOpencv%E8%B0%83%E7%94%A8/","title":"\u7b97\u6cd5\u539f\u7406","text":"<p>\u53cc\u8fb9\u6ee4\u6ce2\u662f\u4e00\u79cd\u975e\u7ebf\u6027\u6ee4\u6ce2\u65b9\u6cd5\uff0c\u662f\u7ed3\u5408\u4e86\u56fe\u50cf\u7684\u90bb\u8fd1\u5ea6\u548c\u50cf\u7d20\u503c\u76f8\u4f3c\u5ea6\u7684\u4e00\u79cd\u6298\u4e2d\uff0c\u5728\u6ee4\u9664\u566a\u58f0\u7684\u540c\u65f6\u53ef\u4ee5\u4fdd\u7559\u539f\u56fe\u7684\u8fb9\u7f18\u4fe1\u606f\u3002\u6574\u4e2a\u53cc\u8fb9\u6ee4\u6ce2\u662f\u7531\u4e24\u4e2a\u51fd\u6570\u6784\u6210\uff1a\u4e00\u4e2a\u51fd\u6570\u662f\u7531\u7a7a\u95f4\u8ddd\u79bb\u51b3\u5b9a\u7684\u6ee4\u6ce2\u5668\u7cfb\u6570\uff0c\u53e6\u5916\u4e00\u4e2a\u8bd7\u7531\u50cf\u7d20\u5dee\u503c\u51b3\u5b9a\u7684\u6ee4\u6ce2\u5668\u7cfb\u6570\u3002\u6574\u4e2a\u53cc\u8fb9\u6ee4\u6ce2\u7684\u516c\u5f0f\u5982\u4e0b\uff1a \\(g(i,.j)=\\frac{\\sum_{k,l}f(k,l)w(i,j,k,l)}{\\sum_{k,l}w(i,j,k,l)}\\),\u6743\u91cd\u7cfb\u6570\\(w(i,j,k,l)\\)\u53d6\u51b3\u4e8e\u5b9a\u4e49\u57df\u6838\\(d(i,j,k,l)=exp(-\\frac{(i-k)^2+(j-l)^2}{2\\sigma_d^{2}})\\)\u548c\u503c\u57df\u6838\\(r(i,j,k,l)=exp(-\\frac{||f(i,j)-f(k,l)||^2}{2\\sigma_r^{2}})\\)\u7684\u4e58\u79ef\u3002</p> <p>\\(w(i,j,k,l)=exp(-\\frac{(i-k)^2+(j-l)^2}{2\\sigma_d^{2}}-\\frac{||f(i,j)-f(k,l)||^2}{2\\sigma_r^{2}})\\)\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u6a21\u677f\u662f\u5168\u5c40\u6a21\u677f\uff0c\u53ea\u9700\u8981\u751f\u6210\u5c31\u53ef\u4ee5\u4e86\u3002\u7b2c\u4e8c\u4e2a\u6a21\u677f\u9700\u8981\u5bf9\u6bcf\u4e2a\u50cf\u7d20\u70b9\u6ed1\u52a8\u8fdb\u884c\u8ba1\u7b97\u3002\u53cc\u8fb9\u6ee4\u6ce2\u76f8\u5bf9\u4e8e\u9ad8\u65af\u6ee4\u6ce2\u591a\u4e86\u4e00\u4e2a\u9ad8\u65af\u65b9\u5dee\\(\\sigma_d\\)\uff0c\u5b83\u662f\u7ed9\u4e88\u7a7a\u95f4\u5206\u5e03\u7684\u9ad8\u65af\u6ee4\u6ce2\u51fd\u6570\uff0c\u6240\u4ee5\u5728\u8fb9\u7f18\u9644\u8fd1\uff0c\u79bb\u5f97\u8f83\u8fdc\u7684\u50cf\u7d20\u4e0d\u4f1a\u592a\u591a\u5f71\u54cd\u5230\u8fb9\u7f18\u7684\u50cf\u7d20\uff0c\u6240\u4ee5\u53ef\u4ee5\u66f4\u597d\u7684\u4fdd\u7559\u8fb9\u7f18\u4fe1\u606f\uff0c\u4f46\u662f\u7531\u4e8e\u4fdd\u7559\u4e86\u8fc7\u591a\u9ad8\u9891\u4fe1\u606f\uff0c\u5bf9\u4e8eRGB\u56fe\u50cf\u4e2d\u7684\u9ad8\u9891\u566a\u58f0\uff0c\u53cc\u8fb9\u6ee4\u6ce2\u4e0d\u80fd\u5e72\u51c0\u7684\u6ee4\u6389\uff0c\u53ea\u80fd\u5bf9\u4f4e\u9891\u566a\u58f0\u8f83\u597d\u7684\u6ee4\u9664\u3002</p>"},{"location":"cv/base/%E5%8F%8C%E8%BE%B9%E6%BB%A4%E6%B3%A2%E5%8E%9F%E7%90%86%E5%8F%8AOpencv%E8%B0%83%E7%94%A8/#_2","title":"\u7b97\u6cd5\u5b9e\u73b0","text":"<p>OpenCV\u4e2d\u63d0\u4f9b\u4e86\u53cc\u8fb9\u6ee4\u6ce2\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u76f4\u63a5\u8c03\u7528\u5373\u53ef\u3002</p> Text Only<pre><code>void bilateralFilter(InputArray src, OutputArray dst, int d, double sigmaColor, double sigmaSpace, int borderType=BORDER_DEFAULT );\n</code></pre> <p>\u5176\u4e2d\uff1a</p> <ul> <li>InputArray src: \u8f93\u5165\u56fe\u50cf\uff0c\u53ef\u4ee5\u662fMat\u7c7b\u578b\uff0c\u56fe\u50cf\u5fc5\u987b\u662f8\u4f4d\u6216\u6d6e\u70b9\u578b\u5355\u901a\u9053\u3001\u4e09\u901a\u9053\u7684\u56fe\u50cf\u3002</li> <li>OutputArray dst: \u8f93\u51fa\u56fe\u50cf\uff0c\u548c\u539f\u56fe\u50cf\u6709\u76f8\u540c\u7684\u5c3a\u5bf8\u548c\u7c7b\u578b\u3002</li> <li>int d: \u8868\u793a\u5728\u8fc7\u6ee4\u8fc7\u7a0b\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u90bb\u57df\u7684\u76f4\u5f84\u8303\u56f4\u3002\u5982\u679c\u8fd9\u4e2a\u503c\u662f\u975e\u6b63\u6570\uff0c\u5219\u51fd\u6570\u4f1a\u4ece\u7b2c\u4e94\u4e2a\u53c2\u6570sigmaSpace\u8ba1\u7b97\u8be5\u503c\u3002</li> <li>double sigmaColor: \u989c\u8272\u7a7a\u95f4\u8fc7\u6ee4\u5668\u7684sigma\u503c\uff0c\u8fd9\u4e2a\u53c2\u6570\u7684\u503c\u8d8a\u5927\uff0c\u8868\u660e\u8be5\u50cf\u7d20\u90bb\u57df\u5185\u6709\u8d8a\u5bbd\u5e7f\u7684\u989c\u8272\u4f1a\u88ab\u6df7\u5408\u5230\u4e00\u8d77\uff0c\u4ea7\u751f\u8f83\u5927\u7684\u534a\u76f8\u7b49\u989c\u8272\u533a\u57df\u3002</li> <li>double sigmaSpace: \u5750\u6807\u7a7a\u95f4\u4e2d\u6ee4\u6ce2\u5668\u7684sigma\u503c\uff0c\u5982\u679c\u8be5\u503c\u8f83\u5927\uff0c\u5219\u610f\u5473\u7740\u989c\u8272\u76f8\u8fd1\u7684\u8f83\u8fdc\u7684\u50cf\u7d20\u5c06\u76f8\u4e92\u5f71\u54cd\uff0c\u4ece\u800c\u4f7f\u66f4\u5927\u7684\u533a\u57df\u4e2d\u8db3\u591f\u76f8\u4f3c\u7684\u989c\u8272\u83b7\u53d6\u76f8\u540c\u7684\u989c\u8272\u3002\u5f53d&gt;0\u65f6\uff0cd\u6307\u5b9a\u4e86\u90bb\u57df\u5927\u5c0f\u4e14\u4e0esigmaSpace\u65e0\u5173\uff0c\u5426\u5219d\u6b63\u6bd4\u4e8esigmaSpace.</li> <li>int borderType=BORDER_DEFAULT: \u7528\u4e8e\u63a8\u65ad\u56fe\u50cf\u5916\u90e8\u50cf\u7d20\u7684\u67d0\u79cd\u8fb9\u754c\u6a21\u5f0f\uff0c\u6709\u9ed8\u8ba4\u503cBORDER_DEFAULT. \\(\\quad\\)\u53cc\u8fb9\u6ee4\u6ce2\u7684\u590d\u6742\u5ea6\u76f8\u5bf9\u4e8e\u5176\u4ed6\u6ee4\u6ce2\u5668\u4e5f\u662f\u6bd4\u8f83\u9ad8\u7684\uff0c\u6211\u8c03\u7528Opencv\u5b9e\u73b0\u4e86\u4e00\u4e2a\u53ef\u4ee5\u8c03\u8282\u53cc\u8fb9\u6ee4\u6ce23\u4e2a\u53ef\u53d8\u53c2\u6570\u8fdb\u884c\u6ee4\u6ce2\u7684\u7a0b\u5e8f\u653e\u5728\u4e0b\u9762\u3002</li> </ul>"},{"location":"cv/base/%E5%8F%8C%E8%BE%B9%E6%BB%A4%E6%B3%A2%E5%8E%9F%E7%90%86%E5%8F%8AOpencv%E8%B0%83%E7%94%A8/#_3","title":"\u4ee3\u7801","text":"C++<pre><code>#include \"opencv2/opencv.hpp\"\n#include \"iostream\"\n#include \"algorithm\"\n#include \"vector\"\nusing namespace std;\nusing namespace cv;\n\nconst int g_ndMaxValue = 100;\nconst int g_nsigmaColorMaxValue = 200;\nconst int g_nsigmaSpaceMaxValue = 200;\nint g_ndValue, g_nsigmaColorValue, g_nsigmaSpaceValue;\nMat src, dst;\nvoid on_bilateralFilterTrackbar(int, void*){\n    bilateralFilter(src, dst, g_ndValue, g_nsigmaColorValue, g_nsigmaSpaceValue);\n    imshow(\"filtering\", dst);\n}\n\nint main(){\n//    Mat src = imread(\"/home/streamax/CLionProjects/Paper/101507_588686279_15.jpg\");\n//    Mat dst;\n//    bilateralFilter(src, dst, 9, 50, 50);\n//    imshow(\"src\", src);\n//    imshow(\"dst\", dst);\n//    imwrite(\"../result.jpg\", dst);\n//    waitKey(0);\n    src = imread(\"../101507_588686279_15.jpg\");\n    namedWindow(\"origin\", WINDOW_AUTOSIZE);\n    imshow(\"origin\", src);\n    g_ndValue = 9;\n    g_nsigmaColorValue = 50;\n    g_nsigmaSpaceValue = 50;\n    namedWindow(\"filtering\", WINDOW_AUTOSIZE);\n    char dname[20];\n    sprintf(dname, \"Neighborhood diamter %d\", g_ndMaxValue);\n    char sigmaColorName[20];\n    sprintf(sigmaColorName, \"sigmaColor %d\", g_nsigmaColorMaxValue);\n    char sigmaSpaceName[20];\n    sprintf(sigmaSpaceName, \"sigmaSpace %d\", g_nsigmaSpaceMaxValue);\n    //\u521b\u5efa\u8f68\u8ff9\u6761\n    createTrackbar(dname, \"filtering\", &amp;g_ndValue, g_ndMaxValue, on_bilateralFilterTrackbar);\n    on_bilateralFilterTrackbar(g_ndValue, 0);\n    createTrackbar(sigmaColorName, \"filtering\", &amp;g_nsigmaColorValue, g_nsigmaColorMaxValue, on_bilateralFilterTrackbar);\n    on_bilateralFilterTrackbar(g_nsigmaColorValue, 0);\n    createTrackbar(sigmaSpaceName, \"filtering\", &amp;g_nsigmaSpaceValue, g_nsigmaSpaceMaxValue, on_bilateralFilterTrackbar);\n    on_bilateralFilterTrackbar(g_nsigmaSpaceValue, 0);\n    waitKey(0);\n    return 0;\n}\n</code></pre>"},{"location":"cv/base/%E5%B8%B8%E8%A7%81%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%BA%92%E8%BD%AC/","title":"\u524d\u8a00","text":"<p>\u4eca\u5929\u662fOpenCV\u4f20\u7edf\u56fe\u50cf\u5904\u7406\u7b97\u6cd5\u7684\u7b2c\u4e00\u7bc7\uff0c\u6211\u4eec\u6765\u76d8\u70b9\u4e00\u4e0b\u5e38\u89c1\u76846\u79cd\u989c\u8272\u7a7a\u95f4\u4e92\u8f6c\u7b97\u6cd5\uff0c\u5e76\u7ed9\u51fa\u4e86\u4e00\u4e9b\u7b80\u5355\u7684\u52a0\u901f\u65b9\u6848\uff0c\u5e0c\u671b\u53ef\u4ee5\u5e2e\u52a9\u5230\u5b66\u4e60OpenCV\u56fe\u50cf\u5904\u7406\u7684\u540c\u5b66\u3002\u8fd96\u79cd\u7b97\u6cd5\u5206\u522b\u662f\uff1a</p> <ul> <li>RGB\u548cGRAY\u4e92\u8f6c</li> <li>RGB\u548cYUV\u4e92\u8f6c</li> <li>RGB\u548cHSV\u4e92\u8f6c</li> <li>RGB\u548cHSI\u4e92\u8f6c\u3001</li> <li>RGB\u548cYCbCr\u4e92\u8f6c</li> <li>RGB\u548cYDbDr\u4e92\u8f6c</li> </ul>"},{"location":"cv/base/%E5%B8%B8%E8%A7%81%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%BA%92%E8%BD%AC/#_2","title":"\u7b97\u6cd5\u539f\u7406\u548c\u4ee3\u7801\u5b9e\u73b0","text":""},{"location":"cv/base/%E5%B8%B8%E8%A7%81%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%BA%92%E8%BD%AC/#rgbgggray","title":"\u4e00\uff0cRGBGG\u8f6cGRAY","text":"<p>RGB\u662f\u4f9d\u636e\u4eba\u773c\u8bc6\u522b\u7684\u989c\u8272\u5b9a\u4e49\u51fa\u7684\u7a7a\u95f4\uff0c\u53ef\u8868\u793a\u5927\u90e8\u5206\u989c\u8272\u3002\u662f\u56fe\u50cf\u5904\u7406\u4e2d\u6700\u57fa\u672c\u3001\u6700\u5e38\u7528\u3001\u9762\u5411\u786c\u4ef6\u7684\u989c\u8272\u7a7a\u95f4\uff0c\u662f\u4e00\u79cd\u5149\u6df7\u5408\u7684\u4f53\u7cfb\u3002</p> <p>RGB\u989c\u8272\u7a7a\u95f4\u6700\u5e38\u7528\u7684\u7528\u9014\u5c31\u662f\u663e\u793a\u5668\u7cfb\u7edf\uff0c\u5f69\u8272\u9634\u6781\u5c04\u7ebf\u7ba1,\u5f69\u8272\u5149\u6805\u56fe\u5f62\u7684\u663e\u793a\u5668\u90fd\u4f7f\u7528R\u3001G\u3001B\u6570\u503c\u6765\u9a71\u52a8R\u3001G\u3001B \u7535\u5b50\u67aa\u53d1\u5c04\u7535\u5b50\uff0c\u5e76\u5206\u522b\u6fc0\u53d1\u8367\u5149\u5c4f\u4e0a\u7684R\u3001G\u3001B\u4e09\u79cd\u989c\u8272\u7684\u8367\u5149\u7c89\u53d1\u51fa\u4e0d\u540c\u4eae\u5ea6\u7684\u5149\u7ebf\uff0c\u5e76\u901a\u8fc7\u76f8\u52a0\u6df7\u5408\u4ea7\u751f\u5404\u79cd\u989c\u8272\u3002\u626b\u63cf\u4eea\u4e5f\u662f\u901a\u8fc7\u5438\u6536\u539f\u7a3f\u7ecf\u53cd\u5c04\u6216\u900f\u5c04\u800c\u53d1\u9001\u6765\u7684\u5149\u7ebf\u4e2d\u7684R\u3001G\u3001B\u6210\u5206\uff0c\u5e76\u7528\u5b83\u6765\u8868\u793a\u539f\u7a3f\u7684\u989c\u8272\u3002</p> <p>\u9996\u5148\u662fRGB2GRAY\uff0c\u4e5f\u5c31\u662f\u5f69\u8272\u56fe\u8f6c\u7070\u5ea6\u56fe\u7684\u7b97\u6cd5\u3002RGB\u503c\u548c\u7070\u5ea6\u7684\u8f6c\u6362\uff0c\u5b9e\u9645\u4e0a\u662f\u4eba\u773c\u5bf9\u4e8e\u5f69\u8272\u7684\u611f\u89c9\u5230\u4eae\u5ea6\u611f\u89c9\u7684\u8f6c\u6362\uff0c\u8fd9\u662f\u4e00\u4e2a\u5fc3\u7406\u5b66\u95ee\u9898\uff0c\u6709\u4e00\u4e2a\u516c\u5f0f\uff1a Grey = 0.299\\(\\times\\)R + 0.587\\(\\times\\)G + 0.114\\(\\times\\)B\u3002\u76f4\u63a5\u8ba1\u7b97\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u8003\u8651\u4f18\u5316\u53ef\u4ee5\u5c06\u5c0f\u6570\u8f6c\u4e3a\u6574\u6570\uff0c\u9664\u6cd5\u53d8\u4e3a\u79fb\u4f4d\uff0c\u4e58\u6cd5\u4e5f\u53d8\u4e3a\u79fb\u4f4d\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u4f1a\u5e26\u6765\u4e00\u5b9a\u7684\u7cbe\u5ea6\u635f\u5931\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u9700\u8981\u4fdd\u7559\u7684\u7cbe\u5ea6\u4f4d\u6570\u3002\u4e0b\u9762\u7ed9\u51fa\u4e0d\u540c\u7cbe\u5ea6(2-20\u4f4d)\u7684\u8ba1\u7b97\u516c\u5f0f\uff1a</p> <p>Text Only<pre><code>Grey = (R*1 + G*2 + B*1) &gt;&gt; 2\n\nGrey= (R*2 + G*5 + B*1) &gt;&gt; 3\n\nGrey= (R*4 + G*10 + B*2) &gt;&gt; 4\n\nGrey = (R*9 + G*19 + B*4) &gt;&gt; 5\n\nGrey = (R*19 + G*37 + B*8) &gt;&gt; 6\n\nGrey= (R*38 + G*75 + B*15) &gt;&gt; 7\n\nGrey= (R*76 + G*150 + B*30) &gt;&gt; 8\n\nGrey = (R*153 + G*300 + B*59) &gt;&gt; 9\n\nGrey = (R*306 + G*601 + B*117) &gt;&gt; 10\n\nGrey = (R*612 + G*1202 + B*234) &gt;&gt; 11\n\nGrey = (R*1224 + G*2405 + B*467) &gt;&gt; 12\n\nGrey= (R*2449 + G*4809 + B*934) &gt;&gt; 13\n\nGrey= (R*4898 + G*9618 + B*1868) &gt;&gt; 14\n\nGrey = (R*9797 + G*19235 + B*3736) &gt;&gt; 15\n\nGrey = (R*19595 + G*38469 + B*7472) &gt;&gt; 16\n\nGrey = (R*39190 + G*76939 + B*14943) &gt;&gt; 17\n\nGrey = (R*78381 + G*153878 + B*29885) &gt;&gt; 18\n\nGrey =(R*156762 + G*307757 + B*59769) &gt;&gt; 19\n\nGrey= (R*313524 + G*615514 + B*119538) &gt;&gt; 20\n</code></pre> \u518d\u7ed9\u51fa\u4fdd\u755920\u4f4d\u7cbe\u5ea6\u7684\u8ba1\u7b97\u4ee3\u7801(\u4f7f\u7528\u4e86Openmp\u591a\u7ebf\u7a0b\u4f18\u5316)\uff1a</p> Text Only<pre><code>//RGB2GRAY\u4f18\u5316\nMat speed_rgb2gray(Mat src) {\n    Mat dst(src.rows, src.cols, CV_8UC1);\n#pragma omp parallel for num_threads(4)\n    for (int i = 0; i &lt; src.rows; i++) {\n        for (int j = 0; j &lt; src.cols; j++) {\n            dst.at&lt;uchar&gt;(i, j) = ((src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 18) + (src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 15) + (src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 14) +\n                (src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 11) + (src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 7) + (src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 7) + (src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 5) +\n                (src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 4) + (src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 2) +\n                (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 19) + (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 16) + (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 14) + (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 13) +\n                (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 10) + (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 8) + (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 4) + (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 3) + (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 1) +\n                (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 16) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 15) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 14) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 12) +\n                (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 9) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 7) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 6) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 5) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 4) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 1) &gt;&gt; 20);\n        }\n    }\n    return dst;\n}\n</code></pre>"},{"location":"cv/base/%E5%B8%B8%E8%A7%81%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%BA%92%E8%BD%AC/#rgbyuv","title":"\u4e8c\uff0cRGB\u548cYUV\u4e92\u8f6c","text":"<p>\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0bYUV\u989c\u8272\u7a7a\u95f4\uff0cYUV(\u4ea6\u79f0YCrCb)\u662f\u88ab\u6b27\u6d32\u7535\u89c6\u7cfb\u7edf\u6240\u91c7\u7528\u7684\u4e00\u79cd\u989c\u8272\u7f16\u7801\u65b9\u6cd5\u3002\u5728\u73b0\u4ee3\u5f69\u8272\u7535\u89c6\u7cfb\u7edf\u4e2d\uff0c\u901a\u5e38\u91c7\u7528\u4e09\u7ba1\u5f69\u8272\u6444\u50cf\u673a\u6216\u5f69\u8272CCD\u6444\u5f71\u673a\u8fdb\u884c\u53d6\u50cf\uff0c\u7136\u540e\u628a\u53d6\u5f97\u7684\u5f69\u8272\u56fe\u50cf\u4fe1\u53f7\u7ecf\u5206\u8272\u3001\u5206\u522b\u653e\u5927\u6821\u6b63\u540e\u5f97\u5230RGB\uff0c\u518d\u7ecf\u8fc7\u77e9\u9635\u53d8\u6362\u7535\u8def\u5f97\u5230\u4eae\u5ea6\u4fe1\u53f7Y\u548c\u4e24\u4e2a\u8272\u5dee\u4fe1\u53f7R-Y(\u5373U)\u3001B-Y(\u5373V)\uff0c\u6700\u540e\u53d1\u9001\u7aef\u5c06\u4eae\u5ea6\u548c\u4e24\u4e2a\u8272\u5dee\u603b\u5171\u4e09\u4e2a\u4fe1\u53f7\u5206\u522b\u8fdb\u884c\u7f16\u7801\uff0c\u7528\u540c\u4e00\u4fe1\u9053\u53d1\u9001\u51fa\u53bb\u3002\u8fd9\u79cd\u8272\u5f69\u7684\u8868\u793a\u65b9\u6cd5\u5c31\u662f\u6240\u8c13\u7684YUV\u8272\u5f69\u7a7a\u95f4\u8868\u793a\u3002\u91c7\u7528YUV\u8272\u5f69\u7a7a\u95f4\u7684\u91cd\u8981\u6027\u662f\u5b83\u7684\u4eae\u5ea6\u4fe1\u53f7Y\u548c\u8272\u5ea6\u4fe1\u53f7U\u3001V\u662f\u5206\u79bb\u7684\u3002\u5982\u679c\u53ea\u6709Y\u4fe1\u53f7\u5206\u91cf\u800c\u6ca1\u6709U\u3001V\u4fe1\u53f7\u5206\u91cf\uff0c\u90a3\u4e48\u8fd9\u6837\u8868\u793a\u7684\u56fe\u50cf\u5c31\u662f\u9ed1\u767d\u7070\u5ea6\u56fe\u50cf\u3002\u5f69\u8272\u7535\u89c6\u91c7\u7528YUV\u7a7a\u95f4\u6b63\u662f\u4e3a\u4e86\u7528\u4eae\u5ea6\u4fe1\u53f7Y\u89e3\u51b3\u5f69\u8272\u7535\u89c6\u673a\u4e0e\u9ed1\u767d\u7535\u89c6\u673a\u7684\u517c\u5bb9\u95ee\u9898\uff0c\u4f7f\u9ed1\u767d\u7535\u89c6\u673a\u4e5f\u80fd\u63a5\u6536\u5f69\u8272\u7535\u89c6\u4fe1\u53f7\u3002 YUV\u4e3b\u8981\u7528\u4e8e\u4f18\u5316\u5f69\u8272\u89c6\u9891\u4fe1\u53f7\u7684\u4f20\u8f93\uff0c\u4f7f\u5176\u5411\u540e\u76f8\u5bb9\u8001\u5f0f\u9ed1\u767d\u7535\u89c6\u3002\u4e0eRGB\u89c6\u9891\u4fe1\u53f7\u4f20\u8f93\u76f8\u6bd4\uff0c\u5b83\u6700\u5927\u7684\u4f18\u70b9\u5728\u4e8e\u53ea\u9700\u5360\u7528\u6781\u5c11\u7684\u9891\u5bbd\uff08RGB\u8981\u6c42\u4e09\u4e2a\u72ec\u7acb\u7684\u89c6\u9891\u4fe1\u53f7\u540c\u65f6\u4f20\u8f93\uff09\u3002\u5176\u4e2d\u201cY\u201d\u8868\u793a\u660e\u4eae\u5ea6\uff08Luminance\u6216Luma\uff09\uff0c\u4e5f\u5c31\u662f\u7070\u9636\u503c\uff1b\u800c\u201cU\u201d\u548c\u201cV\u201d \u8868\u793a\u7684\u5219\u662f\u8272\u5ea6\uff08Chrominance\u6216Chroma\uff09\uff0c\u4f5c\u7528\u662f\u63cf\u8ff0\u5f71\u50cf\u8272\u5f69\u53ca\u9971\u548c\u5ea6\uff0c\u7528\u4e8e\u6307\u5b9a\u50cf\u7d20\u7684\u989c\u8272\u3002\u201c\u4eae\u5ea6\u201d\u662f\u900f\u8fc7RGB\u8f93\u5165\u4fe1\u53f7\u6765\u5efa\u7acb\u7684\uff0c\u65b9\u6cd5\u662f\u5c06RGB\u4fe1\u53f7\u7684\u7279\u5b9a\u90e8\u5206\u53e0\u52a0\u5230\u4e00\u8d77\u3002\u201c\u8272\u5ea6\u201d\u5219\u5b9a\u4e49\u4e86\u989c\u8272\u7684\u4e24\u4e2a\u65b9\u9762\u2500\u8272\u8c03\u4e0e\u9971\u548c\u5ea6\uff0c\u5206\u522b\u7528Cr\u548cCb\u6765\u8868\u793a\u3002\u5176\u4e2d\uff0cCr\u53cd\u6620\u4e86RGB\u8f93\u5165\u4fe1\u53f7\u7ea2\u8272\u90e8\u5206\u4e0eRGB\u4fe1\u53f7\u4eae\u5ea6\u503c\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u800cCb\u53cd\u6620\u7684\u662fRGB\u8f93\u5165\u4fe1\u53f7\u84dd\u8272\u90e8\u5206\u4e0eRGB\u4fe1\u53f7\u4eae\u5ea6\u503c\u4e4b\u540c\u7684\u5dee\u5f02\u3002</p> <p>1\uff0cRGB\u8f6cYUV</p> <p>Y = 0.299R + 0.587G + 0.114B U = -0.147R - 0.289G + 0.436B V = 0.615R - 0.515G - 0.100B</p> <p>2\uff0cYUV\u8f6cRGB</p> <p>R = Y + 1.14V G = Y - 0.39U - 0.58V B = Y + 2.03U</p>"},{"location":"cv/base/%E5%B8%B8%E8%A7%81%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%BA%92%E8%BD%AC/#1","title":"\u4f18\u53161\uff1a\u53bb\u6389\u6d6e\u70b9\u8fd0\u7b97","text":"<p>\u57fa\u4e8e\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u505a\u5982\u4e0b\u64cd\u4f5c\uff1a</p> Text Only<pre><code>Y * 256 = 0.299 * 256R + 0.587 * 256G + 0.114 * 256B\n\nU * 256 = -0.147 * 256R - 0.289 * 256G + 0.436 * 256B\nV * 256 = 0.615 * 256R - 0.515 * 256G - 0.100 * 256B\n\nR * 256 = Y * 256 + 1.14 * 256V\nG * 256 = Y * 256 - 0.39 * 256U - 0.58 * 256V\nB * 256 = Y * 256 + 2.03 * 256U\n</code></pre> <p>\u7b80\u5316\u4e0a\u9762\u7684\u516c\u5f0f\u5982\u4e0b\uff1a</p> <p>Text Only<pre><code>256Y = 76.544R + 150.272G + 29.184B\n\n256U = -37.632R - 73.984G + 111.616B\n\n256V = 157.44R - 131.84G - 25.6B\n\n256R = 256Y + 291.84V\n\n256G = 256Y - 99.84U - 148.48V\n\n256B = 256Y + 519.68U\n</code></pre> \u7136\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u4e0a\u8ff0\u516c\u5f0f\u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u5f7b\u5e95\u5e72\u6389\u5c0f\u6570\uff0c\u6ce8\u610f\u8fd9\u91cc\u662f\u6709\u7cbe\u5ea6\u635f\u5931\u7684\u3002</p> Text Only<pre><code>256Y = 77R + 150G + 29B\n\n256U = -38R - 74G + 112B\n\n256V = 158R - 132G - 26B\n\n256R = 256Y + 292V\n\n256G = 256Y - 100U - 149V\n\n256B = 256Y + 520U\n</code></pre> <p>\u5b9e\u9645\u4e0a\u5c31\u662f\u56db\u820d\u4e94\u5165\uff0c\u8fd9\u662f\u4e58\u4ee5256\u662f\u4e3a\u4e86\u7f29\u5c0f\u8bef\u5dee\uff0c\u5f53\u7136\u4e58\u6570\u8d8a\u5927\uff0c\u8bef\u5dee\u8d8a\u5c0f\u3002\u548cRGB2GRAY\u4e00\u6837\u7684\u5957\u8def\u3002</p>"},{"location":"cv/base/%E5%B8%B8%E8%A7%81%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%BA%92%E8%BD%AC/#_3","title":"\u4f18\u5316\u4e8c\uff1a\u4e58\u6cd5\u548c\u9664\u6cd5\u53d8\u4e3a\u79fb\u4f4d\u8fd0\u7b97","text":"<p>\u5148\u5c06\u9664\u6cd5\u53d8\u4e3a\u79fb\u4f4d\u8fd0\u7b97\uff1a Text Only<pre><code>Y = (77R + 150G + 29B) &gt;&gt; 8\n\nU = (-38R - 74G + 112B) &gt;&gt; 8\n\nV = (158R - 132G - 26B) &gt;&gt; 8\n\nR = (256Y + 292V) &gt;&gt; 8\n\nG = (256Y - 100U - 149V) &gt;&gt; 8\n\nB = (256Y + 520U) &gt;&gt; 8\n</code></pre> \u516c\u5f0f\u4e2d\u8fd8\u6709\u5f88\u591a\u4e58\u6cd5\u8fd0\u7b97\uff0c\u4e58\u6cd5\u8ddf\u79fb\u4f4d\u8fd0\u7b97\u76f8\u6bd4\uff0c\u8fd8\u662f\u6548\u7387\u592a\u4f4e\u4e86\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u628a\u6240\u6709\u4e58\u6cd5\u90fd\u6539\u6210\u79fb\u4f4d\u8fd0\u7b97\u3002\u5982\u4f55\u5c06\u5e38\u6570\u4e58\u6cd5\u6539\u6210\u79fb\u4f4d\u8fd0\u7b97\uff1f\u8fd9\u91cc\u7ed9\u4e2a\u4f8b\u5b50\uff1aY=Y*9\u53ef\u4ee5\u6539\u4e3a\uff1aY=(Y&lt;&lt;3)+Y\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb2YUV\u7684\u516c\u5f0f\u7ee7\u7eed\u6539\u4e3a\u6700\u7b80\uff1a RGB\u8f6cYUV\uff1a Text Only<pre><code>Y = ((R &lt;&lt; 6) + (R &lt;&lt; 3) + (R &lt;&lt; 2) + R + (G &lt;&lt; 7) + (G &lt;&lt; 4) + (G &lt;&lt; 2) + (G &lt;&lt; 1) + (B &lt;&lt; 4) + (B &lt;&lt; 3) + (B &lt;&lt; 2) + B) &gt;&gt; 8;\nU = (-((R &lt;&lt; 5) + (R &lt;&lt; 2) + (R &lt;&lt; 1)) - ((G &lt;&lt; 6) + (G &lt;&lt; 3) + (G &lt;&lt; 1)) + ((B &lt;&lt; 6) + (B &lt;&lt; 5) + (B &lt;&lt; 4))) &gt;&gt; 8;\nV = ((R &lt;&lt; 7) + (R &lt;&lt; 4) + (R &lt;&lt; 3) + (R &lt;&lt; 2) + (R &lt;&lt; 1) - ((G &lt;&lt; 7) + (G &lt;&lt; 2)) - ((B &lt;&lt; 4) + (B &lt;&lt; 3) + (B &lt;&lt; 1))) &gt;&gt; 8;\n</code></pre> YUV\u8f6cRGB\uff1a Text Only<pre><code>R = ((Y &lt;&lt; 8) + ((V &lt;&lt; 8) + (V &lt;&lt; 5) + (V &lt;&lt; 2))) &gt;&gt; 8;\nG = ((Y &lt;&lt; 8) - ((U &lt;&lt; 6) + (U &lt;&lt; 5) + (U &lt;&lt; 2)) - ((V &lt;&lt; 7) + (V &lt;&lt; 4) + (V &lt;&lt; 2) + V)) &gt;&gt; 8;\nB = ((Y &lt;&lt; 8) + (U &lt;&lt; 9) + (U &lt;&lt; 3)) &gt;&gt; 8;\n</code></pre> \u4f7f\u7528OpemMP\u548c\u4e0a\u8bc9\u4f18\u5316\u7684\u4e92\u8f6c\u4ee3\u7801\u5982\u4e0b\uff1a\u6ce8\u610f\u4e00\u4e0b\uff0cimread\u8bfb\u53d6\u7684\u56fe\u7247\u901a\u9053\u987a\u5e8f\u9ed8\u8ba4\u662fBGR\u3002</p> Text Only<pre><code>//RGB2YUV\u4f18\u5316\nMat speed_rgb2yuv(Mat src) {\n    Mat dst(src.rows, src.cols, CV_8UC3);\n#pragma omp parallel for num_threads(4)\n    for (int i = 0; i &lt; src.rows; i++) {\n        for (int j = 0; j &lt; src.cols; j++) {\n            dst.at&lt;Vec3b&gt;(i, j)[0] =\n                ((src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 6) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 3) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 2) + src.at&lt;Vec3b&gt;(i, j)[2] +\n                (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 7) + (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 4) + (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 2) + (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 1) +\n                    (src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 4) + (src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 3) + (src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 2) + src.at&lt;Vec3b&gt;(i, j)[0]) &gt;&gt; 8;\n            dst.at&lt;Vec3b&gt;(i, j)[1] = (-((src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 5) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 2) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 1)) -\n                ((src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 6) + (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 3) + (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 1)) +\n                ((src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 6) + (src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 5) + (src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 4))) &gt;&gt; 8;\n            dst.at&lt;Vec3b&gt;(i, j)[2] = ((src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 7) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 4) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 3) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 2) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 1) -\n                ((src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 7) + (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 2)) - ((src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 4) + (src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 3) + (src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 1))) &gt;&gt; 8;\n        }\n    }\n    return dst;\n}\n\n\n//YUV2RGB\u4f18\u5316\nMat speed_yuv2rgb(Mat src) {\n    Mat dst(src.rows, src.cols, CV_8UC3);\n    #pragma omp parallel for num_threads(4)\n    for (int i = 0; i &lt; src.rows; i++) {\n        for (int j = 0; j &lt; src.cols; j++) {\n            dst.at&lt;Vec3b&gt;(i, j)[0] = ((src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 8) + (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 9) + (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 3)) &gt;&gt; 8;\n            dst.at&lt;Vec3b&gt;(i, j)[1] = ((src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 8) - ((src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 6) + (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 5) +\n            (src.at&lt;Vec3b&gt;(i, j)[1] &lt;&lt; 2)) - ((src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 7) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 4) +\n            (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 2) + src.at&lt;Vec3b&gt;(i, j)[2])) &gt;&gt; 8;\n            dst.at&lt;Vec3b&gt;(i, j)[2] = ((src.at&lt;Vec3b&gt;(i, j)[0] &lt;&lt; 8) + ((src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 8) + (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 5) +\n            (src.at&lt;Vec3b&gt;(i, j)[2] &lt;&lt; 2))) &gt;&gt; 8;\n        }\n    }\n    return dst;\n}\n</code></pre>"},{"location":"cv/base/%E5%B8%B8%E8%A7%81%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%BA%92%E8%BD%AC/#rgbhsv","title":"\u4e09\uff0cRGB\u548cHSV\u4e92\u8f6c","text":"<p>HSV\u662f\u4e00\u79cd\u5c06RGB\u8272\u5f69\u7a7a\u95f4\u4e2d\u7684\u70b9\u5728\u5012\u5706\u9525\u4f53\u4e2d\u7684\u8868\u793a\u65b9\u6cd5\u3002HSV\u5373\u8272\u76f8(Hue)\u3001\u9971\u548c\u5ea6(Saturation)\u3001\u660e\u5ea6(Value)\uff0c\u53c8\u79f0HSB(B\u5373Brightness)\u3002\u8272\u76f8\u662f\u8272\u5f69\u7684\u57fa\u672c\u5c5e\u6027\uff0c\u5c31\u662f\u5e73\u5e38\u8bf4\u7684\u989c\u8272\u7684\u540d\u79f0\uff0c\u5982\u7ea2\u8272\u3001\u9ec4\u8272\u7b49\u3002\u9971\u548c\u5ea6\uff08S\uff09\u662f\u6307\u8272\u5f69\u7684\u7eaf\u5ea6\uff0c\u8d8a\u9ad8\u8272\u5f69\u8d8a\u7eaf\uff0c\u4f4e\u5219\u9010\u6e10\u53d8\u7070\uff0c\u53d60-100%\u7684\u6570\u503c\u3002\u660e\u5ea6\uff08V\uff09\uff0c\u53d60-max(\u8ba1\u7b97\u673a\u4e2dHSV\u53d6\u503c\u8303\u56f4\u548c\u5b58\u50a8\u7684\u957f\u5ea6\u6709\u5173)\u3002HSV\u989c\u8272\u7a7a\u95f4\u53ef\u4ee5\u7528\u4e00\u4e2a\u5706\u9525\u7a7a\u95f4\u6a21\u578b\u6765\u63cf\u8ff0\u3002\u5706\u9525\u7684\u9876\u70b9\u5904\uff0cV=0\uff0cH\u548cS\u65e0\u5b9a\u4e49\uff0c\u4ee3\u8868\u9ed1\u8272\u3002\u5706\u9525\u7684\u9876\u9762\u4e2d\u5fc3\u5904V=max\uff0cS=0\uff0cH\u65e0\u5b9a\u4e49\uff0c\u4ee3\u8868\u767d\u8272\u3002 RGB\u989c\u8272\u7a7a\u95f4\u4e2d\uff0c\u4e09\u79cd\u989c\u8272\u5206\u91cf\u7684\u53d6\u503c\u4e0e\u6240\u751f\u6210\u7684\u989c\u8272\u4e4b\u95f4\u7684\u8054\u7cfb\u5e76\u4e0d\u76f4\u89c2\u3002\u800cHSV\u989c\u8272\u7a7a\u95f4\uff0c\u66f4\u7c7b\u4f3c\u4e8e\u4eba\u7c7b\u611f\u89c9\u989c\u8272\u7684\u65b9\u5f0f\uff0c\u5c01\u88c5\u4e86\u5173\u4e8e\u989c\u8272\u7684\u4fe1\u606f\uff1a\u201c\u8fd9\u662f\u4ec0\u4e48\u989c\u8272\uff1f\u6df1\u6d45\u5982\u4f55\uff1f\u660e\u6697\u5982\u4f55\uff1f\u201d\u3002 \u4eceRGB\u8f6c\u5230HSV\u7684\u8ba1\u7b97\u516c\u5f0f\u4e3a\uff1a\u8bbemax\u7b49\u4e8er\u3001g\u548cb\u4e2d\u7684\u6700\u5927\u8005\uff0cmin\u4e3a\u6700\u5c0f\u8005\u3002\u5bf9\u5e94\u7684HSV\u7a7a\u95f4\u4e2d\u7684(h,s,v)\u503c\u4e3a\uff1a</p> <p></p> <p>h\u57280\u5230360\u00b0\u4e4b\u95f4\uff0cs\u57280\u5230100%\u4e4b\u95f4\uff0cv\u57280\u5230max\u4e4b\u95f4\u3002 \u4eceHSV\u7a7a\u95f4\u8f6c\u56deRGB\u7a7a\u95f4\u7684\u516c\u5f0f\u4e3a\uff1a</p> <p></p> <p>\u4ee3\u7801\u5b9e\u73b0\uff0c\u6548\u679c\u6d4b\u8bd5\u65e0\u8bef\uff1a Text Only<pre><code>Mat RGB2HSV(Mat src) {\n    int row = src.rows;\n    int col = src.cols;\n    Mat dst(row, col, CV_32FC3);\n    for (int i = 0; i &lt; row; i++) {\n        for (int j = 0; j &lt; col; j++) {\n            float b = src.at&lt;Vec3b&gt;(i, j)[0] / 255.0;\n            float g = src.at&lt;Vec3b&gt;(i, j)[1] / 255.0;\n            float r = src.at&lt;Vec3b&gt;(i, j)[2] / 255.0;\n            float minn = min(r, min(g, b));\n            float maxx = max(r, max(g, b));\n            dst.at&lt;Vec3f&gt;(i, j)[2] = maxx; //V\n            float delta = maxx - minn;\n            float h, s;\n            if (maxx != 0) {\n                s = delta / maxx;\n            }\n            else {\n                s = 0;\n            }\n            if (r == maxx) {\n                h = (g - b) / delta;\n            }\n            else if (g == maxx) {\n                h = 2 + (b - r) / delta;\n            }\n            else {\n                h = 4 + (r - g) / delta;\n            }\n            h *= 60;\n            if (h &lt; 0)\n                h += 360;\n            dst.at&lt;Vec3f&gt;(i, j)[0] = h;\n            dst.at&lt;Vec3f&gt;(i, j)[1] = s;\n        }\n    }\n    return dst;\n}\n\nMat HSV2RGB(Mat src) {\n    int row = src.rows;\n    int col = src.cols;\n    Mat dst(row, col, CV_8UC3);\n    float r, g, b, h, s, v;\n    for (int i = 0; i &lt; row; i++) {\n        for (int j = 0; j &lt; col; j++) {\n            h = src.at&lt;Vec3f&gt;(i, j)[0];\n            s = src.at&lt;Vec3f&gt;(i, j)[1];\n            v = src.at&lt;Vec3f&gt;(i, j)[2];\n            if (s == 0) {\n                r = g = b = v;\n            }\n            else {\n                h /= 60;\n                int offset = floor(h);\n                float f = h - offset;\n                float p = v * (1 - s);\n                float q = v * (1 - s * f);\n                float t = v * (1 - s * (1 - f));\n                switch (offset)\n                {\n                case 0: r = v; g = t; b = p; break;\n                case 1: r = q; g = v; b = p; break;\n                case 2: r = p; g = v; b = t; break;\n                case 3: r = p; g = q; b = v; break;\n                case 4: r = t; g = p; b = v; break;\n                case 5: r = v; g = p; b = q; break;\n                default:\n                    break;\n                }\n            }\n            dst.at&lt;Vec3b&gt;(i, j)[0] = int(b * 255);\n            dst.at&lt;Vec3b&gt;(i, j)[1] = int(g * 255);\n            dst.at&lt;Vec3b&gt;(i, j)[2] = int(r * 255);\n        }\n    }\n    return dst;\n}\n</code></pre></p>"},{"location":"cv/base/%E5%B8%B8%E8%A7%81%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%BA%92%E8%BD%AC/#rgbhsi","title":"\u56db\uff0cRGB\u548cHSI\u4e92\u8f6c","text":"<p>HSI\u8272\u5f69\u7a7a\u95f4\u662f\u4ece\u4eba\u7684\u89c6\u89c9\u7cfb\u7edf\u51fa\u53d1\uff0c\u7528\u8272\u8c03(Hue)\u3001\u9971\u548c\u5ea6(Saturation\u6216Chroma)\u548c\u4eae\u5ea6 (Intensity\u6216Brightness)\u6765\u63cf\u8ff0\u8272\u5f69\u3002</p> <ul> <li>H\u2014\u2014\u8868\u793a\u989c\u8272\u7684\u76f8\u4f4d\u89d2\u3002\u7ea2\u3001\u7eff\u3001\u84dd\u5206\u522b\u76f8\u9694120\u5ea6\uff1b\u4e92\u8865\u8272\u5206\u522b\u76f8\u5dee180\u5ea6\uff0c\u5373\u989c\u8272\u7684\u7c7b\u522b\u3002</li> <li>S\u2014\u2014\u8868\u793a\u6210\u6240\u9009\u989c\u8272\u7684\u7eaf\u5ea6\u548c\u8be5\u989c\u8272\u6700\u5927\u7684\u7eaf\u5ea6\u4e4b\u95f4\u7684\u6bd4\u7387\uff0c\u8303\u56f4\uff1a[0,  1]\uff0c\u5373\u989c\u8272\u7684\u6df1\u6d45\u7a0b\u5ea6\u3002</li> <li>I\u2014\u2014\u8868\u793a\u8272\u5f69\u7684\u660e\u4eae\u7a0b\u5ea6\uff0c\u56f4\uff1a[0, 1]\uff0c\u4eba\u773c\u5bf9\u4eae\u5ea6\u5f88\u654f\u611f\uff01</li> </ul> <p></p> <p>\u53ef\u4ee5\u770b\u5230HSI\u8272\u5f69\u7a7a\u95f4\u548cRGB\u8272\u5f69\u7a7a\u95f4\u53ea\u662f\u540c\u4e00\u7269\u7406\u91cf\u7684\u4e0d\u540c\u8868\u793a\u6cd5\uff0c\u56e0\u800c\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u7740\u8f6c\u6362\u5173\u7cfb\uff1aHSI\u989c\u8272\u6a21\u5f0f\u4e2d\u7684\u8272\u8c03\u4f7f\u7528\u989c\u8272\u7c7b\u522b\u8868\u793a\uff0c\u9971\u548c\u5ea6\u4e0e\u989c\u8272\u7684\u767d\u5149\u5149\u4eae\u4eae\u5ea6\u521a\u597d\u6210\u53cd\u6bd4\uff0c\u4ee3\u8868\u7070\u8272\u4e0e\u8272\u8c03\u7684\u6bd4\u4f8b\uff0c\u4eae\u5ea6\u662f\u989c\u8272\u7684\u76f8\u5bf9\u660e\u6697\u7a0b\u5ea6\u3002 \u8f6c\u81ea\uff1ahttps://blog.csdn.net/aoshilang2249/article/details/38070663 RGB\u8f6c\u6362\u4e3aHSI\u7684\u516c\u5f0f\uff1a</p> <p></p> <p>HSI\u8f6cRGB\u7684\u516c\u5f0f\u4e3a\uff1a\u7ed9\u5b9a HSI\u7a7a\u95f4\u4e2d\u7684 (h, s, l) \u503c\u5b9a\u4e49\u7684\u4e00\u4e2a\u989c\u8272\uff0c\u5e26\u6709 h \u5728\u6307\u793a\u8272\u76f8\u89d2\u5ea6\u7684\u503c\u57df [0, 360\uff09\u4e2d\uff0c\u5206\u522b\u8868\u793a\u9971\u548c\u5ea6\u548c\u4eae\u5ea6\u7684s \u548c l \u5728\u503c\u57df [0, 1] \u4e2d\uff0c\u76f8\u5e94\u5728 RGB \u7a7a\u95f4\u4e2d\u7684 (r, g, b) \u4e09\u539f\u8272\uff0c\u5e26\u6709\u5206\u522b\u5bf9\u5e94\u4e8e\u7ea2\u8272\u3001\u7eff\u8272\u548c\u84dd\u8272\u7684 r, g \u548c b \u4e5f\u5728\u503c\u57df [0, 1] \u4e2d\uff0c\u5b83\u4eec\u53ef\u8ba1\u7b97\u4e3a\uff1a \u9996\u5148\uff0c\u5982\u679c s = 0\uff0c\u5219\u7ed3\u679c\u7684\u989c\u8272\u662f\u975e\u5f69\u8272\u7684\u3001\u6216\u7070\u8272\u7684\u3002\u5728\u8fd9\u4e2a\u7279\u6b8a\u60c5\u51b5\uff0cr, g \u548c b \u90fd\u7b49\u4e8e l\u3002\u6ce8\u610f h \u7684\u503c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u672a\u5b9a\u4e49\u7684\u3002\u5f53 s \u2260 0 \u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5217\u8fc7\u7a0b\uff1a</p> <p></p> <p>\u6e90\u7801\u5b9e\u73b0\uff0c\u6d4b\u8bd5\u65e0\u8bef\uff1a</p> Text Only<pre><code>Mat RGB2HSI(Mat src) {\n    int row = src.rows;\n    int col = src.cols;\n    Mat dst(row, col, CV_32FC3);\n    for (int i = 0; i &lt; row; i++) {\n        for (int j = 0; j &lt; col; j++) {\n            float b = src.at&lt;Vec3b&gt;(i, j)[0] / 255.0;\n            float g = src.at&lt;Vec3b&gt;(i, j)[1] / 255.0;\n            float r = src.at&lt;Vec3b&gt;(i, j)[2] / 255.0;\n            float minn = min(b, min(g, r));\n            float maxx = max(b, max(g, r));\n            float H = 0;\n            float S = 0;\n            float I = (minn + maxx) / 2.0f;\n            if (maxx == minn) {\n                dst.at&lt;Vec3f&gt;(i, j)[0] = H;\n                dst.at&lt;Vec3f&gt;(i, j)[1] = S;\n                dst.at&lt;Vec3f&gt;(i, j)[2] = I;\n            }\n            else {\n                float delta = maxx - minn;\n                if (I &lt; 0.5) {\n                    S = delta / (maxx + minn);\n                }\n                else {\n                    S = delta / (2.0 - maxx - minn);\n                }\n                if (r == maxx) {\n                    if (g &gt; b) {\n                        H = (g - b) / delta;\n                    }\n                    else {\n                        H = 6.0 + (g - b) / delta;\n                    }\n                }\n                else if (g == maxx) {\n                    H = 2.0 + (b - r) / delta;\n                }\n                else {\n                    H = 4.0 + (r - g) / delta;\n                }\n                H /= 6.0; //\u9664\u4ee56\uff0c\u8868\u793a\u5728\u90a3\u4e2a\u90e8\u5206\n                if (H &lt; 0.0)\n                    H += 1.0;\n                if (H &gt; 1)\n                    H -= 1;\n                H = (int)(H * 360); //\u8f6c\u6210[0, 360]\n                dst.at&lt;Vec3f&gt;(i, j)[0] = H;\n                dst.at&lt;Vec3f&gt;(i, j)[1] = S;\n                dst.at&lt;Vec3f&gt;(i, j)[2] = I;\n            }\n        }\n    }\n    return dst;\n}\n\nfloat get_Ans(double p, double q, double Ht) {\n    if (Ht &lt; 0.0)\n        Ht += 1.0;\n    else if (Ht &gt; 1.0)\n        Ht -= 1.0;\n    if ((6.0 * Ht) &lt; 1.0)\n        return (p + (q - p) * Ht * 6.0);\n    else if ((2.0 * Ht) &lt; 1.0)\n        return q;\n    else if ((3.0 * Ht) &lt; 2.0)\n        return (p + (q - p) * ((2.0F / 3.0F) - Ht) * 6.0);\n    else\n        return (p);\n}\n\nMat HSI2RGB(Mat src) {\n    int row = src.rows;\n    int col = src.cols;\n    Mat dst(row, col, CV_8UC3);\n    for (int i = 0; i &lt; row; i++) {\n        for (int j = 0; j &lt; col; j++) {\n            float r, g, b, M1, M2;\n            float H = src.at&lt;Vec3f&gt;(i, j)[0];\n            float S = src.at&lt;Vec3f&gt;(i, j)[1];\n            float I = src.at&lt;Vec3f&gt;(i, j)[2];\n            float hue = H / 360;\n            if (S == 0) {//\u7070\u8272\n                r = g = b = I;\n            }\n            else {\n                if (I &lt;= 0.5) {\n                    M2 = I * (1.0 + S);\n                }\n                else {\n                    M2 = I + S - I * S;\n                }\n                M1 = (2.0 * I - M2);\n                r = get_Ans(M1, M2, hue + 1.0 / 3.0);\n                g = get_Ans(M1, M2, hue);\n                b = get_Ans(M1, M2, hue - 1.0 / 3.0);\n            }\n            dst.at&lt;Vec3b&gt;(i, j)[0] = (int)(b * 255);\n            dst.at&lt;Vec3b&gt;(i, j)[1] = (int)(g * 255);\n            dst.at&lt;Vec3b&gt;(i, j)[2] = (int)(r * 255);\n        }\n    }\n    return dst;\n}\n</code></pre>"},{"location":"cv/base/%E5%B8%B8%E8%A7%81%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%BA%92%E8%BD%AC/#rgbycbcr","title":"\u4e94\uff0cRGB\u548cYCbCr\u4e92\u8f6c","text":"<p>\u5728\u5e38\u7528\u7684\u51e0\u79cd\u989c\u8272\u7a7a\u95f4\u4e2d\uff0cYCbCr\u989c\u8272\u7a7a\u95f4\u5728\u5b66\u672f\u8bba\u6587\u4e2d\u51fa\u73b0\u7684\u9891\u7387\u662f\u76f8\u5f53\u9ad8\u7684\uff0c\u5e38\u7528\u4e8e\u80a4\u8272\u68c0\u6d4b\u7b49\u7b49\u3002\u5176\u548cRGB\u7a7a\u95f4\u4e4b\u95f4\u7684\u76f8\u4e92\u8f6c\u6362\u516c\u5f0f\u5728\u7f51\u4e0a\u4e5f\u6709\u591a\u79cd\uff0c\u6211\u4eec\u8fd9\u91cc\u53d6http://en.wikipedia.org/wiki/YCbCr \u63cf\u8ff0\u7684JPG\u8f6c\u6362\u65f6\u4f7f\u7528\u7684\u8ba1\u7b97\u516c\u5f0f\uff1a</p> <p></p> <p>\u548cRGB\u4e0eCIEXYZ\u7a7a\u95f4\u4e92\u8f6c\u7684\u4f18\u5316\u5957\u8def\u4e00\u6837\uff0c\u6d4b\u8bd5\u65e0\u8bef\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> Text Only<pre><code>const float YCbCrYRF = 0.299F;              // RGB\u8f6cYCbCr\u7684\u7cfb\u6570(\u6d6e\u70b9\u7c7b\u578b\uff09\nconst float YCbCrYGF = 0.587F;\nconst float YCbCrYBF = 0.114F;\nconst float YCbCrCbRF = -0.168736F;\nconst float YCbCrCbGF = -0.331264F;\nconst float YCbCrCbBF = 0.500000F;\nconst float YCbCrCrRF = 0.500000F;\nconst float YCbCrCrGF = -0.418688F;\nconst float YCbCrCrBF = -0.081312F;\n\nconst float RGBRYF = 1.00000F;            // YCbCr\u8f6cRGB\u7684\u7cfb\u6570(\u6d6e\u70b9\u7c7b\u578b\uff09\nconst float RGBRCbF = 0.0000F;\nconst float RGBRCrF = 1.40200F;\nconst float RGBGYF = 1.00000F;\nconst float RGBGCbF = -0.34414F;\nconst float RGBGCrF = -0.71414F;\nconst float RGBBYF = 1.00000F;\nconst float RGBBCbF = 1.77200F;\nconst float RGBBCrF = 0.00000F;\n\nconst int Shift = 20;\nconst int HalfShiftValue = 1 &lt;&lt; (Shift - 1);\n\nconst int YCbCrYRI = (int)(YCbCrYRF * (1 &lt;&lt; Shift) + 0.5);         // RGB\u8f6cYCbCr\u7684\u7cfb\u6570(\u6574\u6570\u7c7b\u578b\uff09\nconst int YCbCrYGI = (int)(YCbCrYGF * (1 &lt;&lt; Shift) + 0.5);\nconst int YCbCrYBI = (int)(YCbCrYBF * (1 &lt;&lt; Shift) + 0.5);\nconst int YCbCrCbRI = (int)(YCbCrCbRF * (1 &lt;&lt; Shift) + 0.5);\nconst int YCbCrCbGI = (int)(YCbCrCbGF * (1 &lt;&lt; Shift) + 0.5);\nconst int YCbCrCbBI = (int)(YCbCrCbBF * (1 &lt;&lt; Shift) + 0.5);\nconst int YCbCrCrRI = (int)(YCbCrCrRF * (1 &lt;&lt; Shift) + 0.5);\nconst int YCbCrCrGI = (int)(YCbCrCrGF * (1 &lt;&lt; Shift) + 0.5);\nconst int YCbCrCrBI = (int)(YCbCrCrBF * (1 &lt;&lt; Shift) + 0.5);\n\nconst int RGBRYI = (int)(RGBRYF * (1 &lt;&lt; Shift) + 0.5);              // YCbCr\u8f6cRGB\u7684\u7cfb\u6570(\u6574\u6570\u7c7b\u578b\uff09\nconst int RGBRCbI = (int)(RGBRCbF * (1 &lt;&lt; Shift) + 0.5);\nconst int RGBRCrI = (int)(RGBRCrF * (1 &lt;&lt; Shift) + 0.5);\nconst int RGBGYI = (int)(RGBGYF * (1 &lt;&lt; Shift) + 0.5);\nconst int RGBGCbI = (int)(RGBGCbF * (1 &lt;&lt; Shift) + 0.5);\nconst int RGBGCrI = (int)(RGBGCrF * (1 &lt;&lt; Shift) + 0.5);\nconst int RGBBYI = (int)(RGBBYF * (1 &lt;&lt; Shift) + 0.5);\nconst int RGBBCbI = (int)(RGBBCbF * (1 &lt;&lt; Shift) + 0.5);\nconst int RGBBCrI = (int)(RGBBCrF * (1 &lt;&lt; Shift) + 0.5);\n\nMat RGB2YCbCr(Mat src) {\n    int row = src.rows;\n    int col = src.cols;\n    Mat dst(row, col, CV_8UC3);\n    for (int i = 0; i &lt; row; i++) {\n        for (int j = 0; j &lt; col; j++) {\n            int Blue = src.at&lt;Vec3b&gt;(i, j)[0];\n            int Green = src.at&lt;Vec3b&gt;(i, j)[1];\n            int Red = src.at&lt;Vec3b&gt;(i, j)[2];\n            dst.at&lt;Vec3b&gt;(i, j)[0] = (int)((YCbCrYRI * Red + YCbCrYGI * Green + YCbCrYBI * Blue + HalfShiftValue) &gt;&gt; Shift);\n            dst.at&lt;Vec3b&gt;(i, j)[1] = (int)(128 + ((YCbCrCbRI * Red + YCbCrCbGI * Green + YCbCrCbBI * Blue + HalfShiftValue) &gt;&gt; Shift));\n            dst.at&lt;Vec3b&gt;(i, j)[2] = (int)(128 + ((YCbCrCrRI * Red + YCbCrCrGI * Green + YCbCrCrBI * Blue + HalfShiftValue) &gt;&gt; Shift));\n        }\n    }\n    return dst;\n}\n\nMat YCbCr2RGB(Mat src) {\n    int row = src.rows;\n    int col = src.cols;\n    Mat dst(row, col, CV_8UC3);\n    for (int i = 0; i &lt; row; i++) {\n        for (int j = 0; j &lt; col; j++) {\n            int Y = src.at&lt;Vec3b&gt;(i, j)[0];\n            int Cb = src.at&lt;Vec3b&gt;(i, j)[1] - 128;\n            int Cr = src.at&lt;Vec3b&gt;(i, j)[2] - 128;\n            int Red = Y + ((RGBRCrI * Cr + HalfShiftValue) &gt;&gt; Shift);\n            int Green = Y + ((RGBGCbI * Cb + RGBGCrI * Cr + HalfShiftValue) &gt;&gt; Shift);\n            int Blue = Y + ((RGBBCbI * Cb + HalfShiftValue) &gt;&gt; Shift);\n            if (Red &gt; 255) Red = 255; else if (Red &lt; 0) Red = 0;\n            if (Green &gt; 255) Green = 255; else if (Green &lt; 0) Green = 0;    // \u7f16\u8bd1\u540e\u5e94\u8be5\u6bd4\u4e09\u76ee\u8fd0\u7b97\u7b26\u7684\u6548\u7387\u9ad8\n            if (Blue &gt; 255) Blue = 255; else if (Blue &lt; 0) Blue = 0;\n            dst.at&lt;Vec3b&gt;(i, j)[0] = Blue;\n            dst.at&lt;Vec3b&gt;(i, j)[1] = Green;\n            dst.at&lt;Vec3b&gt;(i, j)[2] = Red;\n        }\n    }\n    return dst;\n}\n</code></pre>"},{"location":"cv/base/%E5%B8%B8%E8%A7%81%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%BA%92%E8%BD%AC/#rgbydbdr","title":"\u516d\uff0cRGB\u548cYDbDr\u4e92\u8f6c","text":"<p>YDbDr\u989c\u8272\u7a7a\u95f4\u548cYCbCr\u989c\u8272\u7a7a\u95f4\u7c7b\u4f3c\uff0c\u5176\u548cRGB\u7a7a\u95f4\u4e4b\u95f4\u7684\u76f8\u4e92\u8f6c\u6362\u516c\u5f0f\u91cc\u53d6http://en.wikipedia.org/wiki/YDbDr \u6240\u63cf\u8ff0\u7684\u3002</p> <p></p> <p>\u4ee3\u7801\uff1a</p> Text Only<pre><code>const float YDbDrYRF = 0.299F;              // RGB\u8f6cYDbDr\u7684\u7cfb\u6570(\u6d6e\u70b9\u7c7b\u578b\uff09\nconst float YDbDrYGF = 0.587F;\nconst float YDbDrYBF = 0.114F;\nconst float YDbDrDbRF = -0.1688F;\nconst float YDbDrDbGF = -0.3312F;\nconst float YDbDrDbBF = 0.5F;\nconst float YDbDrDrRF = -0.5F;\nconst float YDbDrDrGF = 0.4186F;\nconst float YDbDrDrBF = 0.0814F;\n\nconst float RGBRYF = 1.00000F;            // YDbDr\u8f6cRGB\u7684\u7cfb\u6570(\u6d6e\u70b9\u7c7b\u578b\uff09\nconst float RGBRDbF = 0.0002460817072494899F;\nconst float RGBRDrF = -1.402083073344533F;\nconst float RGBGYF = 1.00000F;\nconst float RGBGDbF = -0.344268308442098F;\nconst float RGBGDrF = 0.714219609001458F;\nconst float RGBBYF = 1.00000F;\nconst float RGBBDbF = 1.772034373903893F;\nconst float RGBBDrF = 0.0002111539810593343F;\n\nconst int Shift = 20;\nconst int HalfShiftValue = 1 &lt;&lt; (Shift - 1);\n\nconst int YDbDrYRI = (int)(YDbDrYRF * (1 &lt;&lt; Shift) + 0.5);         // RGB\u8f6cYDbDr\u7684\u7cfb\u6570(\u6574\u6570\u7c7b\u578b\uff09\nconst int YDbDrYGI = (int)(YDbDrYGF * (1 &lt;&lt; Shift) + 0.5);\nconst int YDbDrYBI = (int)(YDbDrYBF * (1 &lt;&lt; Shift) + 0.5);\nconst int YDbDrDbRI = (int)(YDbDrDbRF * (1 &lt;&lt; Shift) + 0.5);\nconst int YDbDrDbGI = (int)(YDbDrDbGF * (1 &lt;&lt; Shift) + 0.5);\nconst int YDbDrDbBI = (int)(YDbDrDbBF * (1 &lt;&lt; Shift) + 0.5);\nconst int YDbDrDrRI = (int)(YDbDrDrRF * (1 &lt;&lt; Shift) + 0.5);\nconst int YDbDrDrGI = (int)(YDbDrDrGF * (1 &lt;&lt; Shift) + 0.5);\nconst int YDbDrDrBI = (int)(YDbDrDrBF * (1 &lt;&lt; Shift) + 0.5);\n\nconst int RGBRYI = (int)(RGBRYF * (1 &lt;&lt; Shift) + 0.5);              // YDbDr\u8f6cRGB\u7684\u7cfb\u6570(\u6574\u6570\u7c7b\u578b\uff09\nconst int RGBRDbI = (int)(RGBRDbF * (1 &lt;&lt; Shift) + 0.5);\nconst int RGBRDrI = (int)(RGBRDrF * (1 &lt;&lt; Shift) + 0.5);\nconst int RGBGYI = (int)(RGBGYF * (1 &lt;&lt; Shift) + 0.5);\nconst int RGBGDbI = (int)(RGBGDbF * (1 &lt;&lt; Shift) + 0.5);\nconst int RGBGDrI = (int)(RGBGDrF * (1 &lt;&lt; Shift) + 0.5);\nconst int RGBBYI = (int)(RGBBYF * (1 &lt;&lt; Shift) + 0.5);\nconst int RGBBDbI = (int)(RGBBDbF * (1 &lt;&lt; Shift) + 0.5);\nconst int RGBBDrI = (int)(RGBBDrF * (1 &lt;&lt; Shift) + 0.5);\n\nMat RGB2YDbDr(Mat src) {\n    int row = src.rows;\n    int col = src.cols;\n    Mat dst(row, col, CV_8UC3);\n    for (int i = 0; i &lt; row; i++) {\n        for (int j = 0; j &lt; col; j++) {\n            int Blue = src.at&lt;Vec3b&gt;(i, j)[0];\n            int Green = src.at&lt;Vec3b&gt;(i, j)[1];\n            int Red = src.at&lt;Vec3b&gt;(i, j)[2];\n            dst.at&lt;Vec3b&gt;(i, j)[0] = (uchar)((YDbDrYRI * Red + YDbDrYGI * Green + YDbDrYBI * Blue + HalfShiftValue) &gt;&gt; Shift);\n            dst.at&lt;Vec3b&gt;(i, j)[1] = (uchar)(128 + ((YDbDrDbRI * Red + YDbDrDbGI * Green + YDbDrDbBI * Blue + HalfShiftValue) &gt;&gt; Shift));\n            dst.at&lt;Vec3b&gt;(i, j)[2] = (uchar)(128 + ((YDbDrDrRI * Red + YDbDrDrGI * Green + YDbDrDrBI * Blue + HalfShiftValue) &gt;&gt; Shift));\n        }\n    }\n    return dst;\n}\n\nMat YDbDr2RGB(Mat src) {\n    int row = src.rows;\n    int col = src.cols;\n    Mat dst(row, col, CV_8UC3);\n    for (int i = 0; i &lt; row; i++) {\n        for (int j = 0; j &lt; col; j++) {\n            int Y = src.at&lt;Vec3b&gt;(i, j)[0];\n            int Db = src.at&lt;Vec3b&gt;(i, j)[1] - 128;\n            int Dr = src.at&lt;Vec3b&gt;(i, j)[2] - 128;\n            int Red = Y + ((RGBRDbI * Db + RGBRDrI * Dr + HalfShiftValue) &gt;&gt; Shift);\n            int Green = Y + ((RGBGDbI * Db + RGBGDrI * Dr + HalfShiftValue) &gt;&gt; Shift);\n            int Blue = Y + ((RGBBDbI * Db + RGBBDrI * Dr + HalfShiftValue) &gt;&gt; Shift);\n            if (Red &gt; 255) Red = 255;\n            else if (Red &lt; 0) Red = 0;\n            if (Green &gt; 255) Green = 255;\n            else if (Green &lt; 0) Green = 0;\n            if (Blue &gt; 255) Blue = 0;\n            else if (Blue &lt; 0) Blue = 0;\n            dst.at&lt;Vec3b&gt;(i, j)[0] = Blue;\n            dst.at&lt;Vec3b&gt;(i, j)[1] = Green;\n            dst.at&lt;Vec3b&gt;(i, j)[2] = Red;\n        }\n    }\n    return dst;\n}\n</code></pre>"},{"location":"cv/base/%E5%B8%B8%E8%A7%81%E9%A2%9C%E8%89%B2%E7%A9%BA%E9%97%B4%E4%BA%92%E8%BD%AC/#_4","title":"\u540e\u8bb0","text":"<p>\u672c\u6587\u76d8\u70b9\u4e866\u79cd\u5e38\u89c1\u7684\u989c\u8272\u7a7a\u95f4\u4e92\u8f6c\u7b97\u6cd5\uff0c\u56e0\u4e3a\u8fd9\u516d\u79cd\u7b97\u6cd5\u662f\u6211\u5728\u5b66\u4e60\u8fc7\u7a0b\u548c\u56fe\u50cf\u5904\u7406\u8bba\u6587\u590d\u73b0\u4e2d\u6709\u4f7f\u7528\u5230\u7684\uff0c\u6240\u4ee5\u5982\u679c\u8fd8\u6709\u5176\u4ed6\u6211\u8fd9\u91cc\u6ca1\u63d0\u5230\u7684\u7684\u8f6c\u6362\u7b97\u6cd5\uff0c\u6b22\u8fce\u7559\u8a00\u548c\u6211\u4ea4\u6d41\u54e6\u3002</p> <p>\u6b22\u8fce\u5173\u6ce8\u6211\u7684\u5fae\u4fe1\u516c\u4f17\u53f7GiantPadaCV\uff0c\u671f\u5f85\u548c\u4f60\u4e00\u8d77\u4ea4\u6d41\u673a\u5668\u5b66\u4e60\uff0c\u6df1\u5ea6\u5b66\u4e60\uff0c\u56fe\u50cf\u7b97\u6cd5\uff0c\u4f18\u5316\u6280\u672f\uff0c\u6bd4\u8d5b\u53ca\u65e5\u5e38\u751f\u6d3b\u7b49\u3002</p> <p></p>"},{"location":"infer/arm/ncnn%E7%A7%BB%E6%A4%8D%E6%AD%A5%E9%AA%A4/","title":"ncnn","text":""},{"location":"infer/arm/ncnn%E7%A7%BB%E6%A4%8D%E6%AD%A5%E9%AA%A4/#yuv-yuv","title":"YUV\u6570\u636e-\u64cd\u4f5c\u6307\u5b9a\u50cf\u7d20\u70b9\u6570\u636e,\u4fdd\u5b58yuv\u6587\u4ef6","text":"<p>YUV\u6570\u636e-\u64cd\u4f5c\u6307\u5b9a\u50cf\u7d20\u70b9\u6570\u636e,\u4fdd\u5b58yuv\u6587\u4ef6</p> <p>1.YUV\u683c\u5f0f\u6709\u4e24\u5927\u7c7b\uff1aplanar\u548cpacked\u3002</p> <p>\u5bf9\u4e8eplanar\u7684YUV\u683c\u5f0f\uff0c\u5148\u8fde\u7eed\u5b58\u50a8\u6240\u6709\u50cf\u7d20\u70b9\u7684Y\uff0c\u7d27\u63a5\u7740\u5b58\u50a8\u6240\u6709\u50cf\u7d20\u70b9\u7684U\uff0c\u968f\u540e\u662f\u6240\u6709\u50cf\u7d20\u70b9\u7684V\u3002</p> <p>\u5bf9\u4e8epacked\u7684YUV\u683c\u5f0f\uff0c\u6bcf\u4e2a\u50cf\u7d20\u70b9\u7684Y,U,V\u662f\u8fde\u7eed\u4ea4*\u5b58\u50a8\u7684\u3002</p> <p>\u672c\u6b21\u8bb2\u89e3\u7684\u662f\u5e38\u7528\u7684YUV420\uff08I420\uff09\u683c\u5f0f\uff0c\u8be5\u683c\u5f0f\u91c7\u7528planar\u683c\u5f0f\u3002</p> <p>\u8be5\u683c\u5f0f\u5bf9\u5e94\u7684\u6570\u636e\u91c7\u96c6\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0b\u56fe\uff1a</p> <p></p> <p></p> <p>Y'00\u3001Y'01\u3001Y'10\u3001Y'11\u5171\u7528Cr00\u3001Cb00\uff0c\u4e5f\u5c31\u662f\u4e24\u884c\u4e24\u5217Y\u6570\u636e\u5bf9\u5e94\u4e00\u884c\u4e00\u5217UV\u6570\u636e\u3002</p> <p>\u5bf9\u5e94\u4e00\u5e27\u5bbd\u4e3aW\uff0c\u9ad8\u4e3aH\u7684YUV\u6570\u636e\u3002\u6570\u636e\u7684\u5927\u5c0f\u4e3aWH3/2\u4e2a\u5b57\u8282\uff0c\u56e0\u4e3a\u50cf\u7d20\u70b9\u6709WH\u4e2a\uff0c\u5bf9\u5e94\u7684Y\u6570\u636e\u6709WH\u4e2a\u5b57\u8282\uff0c4\u4e2aY\u5bf9\u5e94\u4e00\u4e2aU\u548c\u4e00\u4e2aV\uff0c\u6240\u4ee5U/V\u5206\u522b\u5404\u6709W*H/4\u4e2a\u5b57\u8282\u3002</p> <p>YUV\u6570\u636e\u4e3aunsigned char\u7c7b\u578b\u800c\u4e0d\u662fchar\u7c7b\u578b\u3002\u5e76\u4e14\u6570\u636e\u662f\u6309\u7167\u884c\u4f18\u5148\u5b58\u50a8\u7684\uff0c\u4e5f\u5c31\u662f\u5148\u5b58\u653e\u4e86\u7b2c\u4e00\u884c\u7684Y\uff0c\u518d\u5b58\u653e\u7b2c\u4e8c\u884cY\uff0c\u5c06Y\u5b58\u50a8\u5b8c\u540e\u518d\u5b58\u50a8U/V\uff0cU/V\u5185\u90e8\u4e5f\u662f\u6309\u7167\u884c\u4f18\u5148\u5b58\u50a8\u3002</p> <p>\u4ee5\u4e0b\u4e3a\u5e38\u89c1\u8bfb\u53d6\u4e00\u5e27\u3001\u8bfb\u53d6\u6307\u5b9a\u50cf\u7d20\u70b9\u3001YUV\u8d4b\u503c\u3001\u4fdd\u5b58YUV\u6587\u4ef6</p> <p>1.\u6253\u5f00YUV\u6587\u4ef6\uff0c\u8bfb\u53d6\u4e00\u5e27YUV\u6570\u636e\u3002</p> <p>2.\u6839\u636e\u5750\u6807\u503c\u6c42\u5bf9\u5e94YUV</p> <p>\u5750\u6807\u70b9\u4f4dx,y \u2192</p> <p>\u5982\u679c\u76f4\u63a5\u628a\u8bfb\u53d6UV\u7684\u516c\u5f0f\u5199\u6210y*w/4  \u5219U\u7684\u4f1a\u6839\u636ey\u7684\u6bcf\u4e00\u884c\u589e\u52a0\u800c\u589e\u52a0\uff0c\u73b0\u5728\u662f\u53ea\u6709\u5f53y\u4e3a\u5076\u6570\u65f6\u5019\uff0c\u624d\u4f1a\u589e\u52a0\u3002\u5207\u8bb0\u662f\u4e24\u884c\u4e24\u5217Y\u5bf9\u5e94\u4e00\u884c\u4e00\u5217UV\u3002</p> <p>int temp = y/2;  </p> <p>Y:  y*w +x</p> <p>U:  wh + tempw/2 + x /  2</p> <p>V:  wh + wh /4  + temp*w/2 + x /  2</p> <p>\u8f6c\u4e3aC++\u4ee3\u7801\u5219\u662f\uff1a</p> <p>int temp = y/2;</p> <p>unsigned char Y = FrameData[w*y+x];</p> <p>unsigned char U = FrameData[wh+w/2temp+x/2];</p> <p>unsigned char V = FrameData[wh5/4+w/2*temp+x/2];</p> <p>3.\u5982\u4f55\u7ed9YUV\u6570\u636e\u8d4b\u503c</p> <p>//\u84dd\u82720x335681  \u50cf\u7d20\u70b9\u7684Y\u4e3a80,0x50  U\u503c\u4e3a155\uff0c0x9b,V\u503c\u4e3a107\uff0c0x6b</p> <p>\u5c06FrameData\u6307\u9488\u6307\u5411\u6b64\u5e27frame\u3002</p> <p>unsigned char Save_Y =80;</p> <p>unsigned char Save_U=155;</p> <p>unsigned char Save_V=107;</p> <p>memset(FrameData,Save_Y,w*h);</p> <p>memset(FrameData+(wh),Save_U,wh/4);</p> <p>memset(FrameData+(wh5/4),Save_V,w*h/4);</p> <p>tip:\u8bf7\u6ce8\u610fmemset\u7ed9char\u6216unsigned\u7c7b\u578b\u8d4b\u503c\u65f6\u5019\uff0c\u662f\u53ef\u4ee5\u8d4b\u4e0d\u8d85\u8fc7\u7c7b\u578b\u5bb9\u7eb3\u7684\u503c\uff0c[0,256],U/V\u7684\u6700\u5927\u503c\u4e3a256\u3002\u4f46\u662f\u5bf9\u4e8eint\u7c7b\u578b\uff0cmemset\u53ea\u80fd\u8d4b0\u3002\u5173\u4e8ememset\u7684\u7528\u6cd5\uff0c\u53ef\u4ee5\u81ea\u884c\u641c\u7d22\u66f4\u591a\u8d44\u6599\u3002</p> <p>4.\u4fdd\u5b58YUV\u6587\u4ef6</p> <p>\u200b    \uff08window\u64cd\u4f5c\uff09</p> <p>\u200b    \u5c06FrameData\u6307\u5411\u89e3\u7801\u540e\u6216\u8005\u81ea\u5df1\u624b\u52a8\u751f\u6210\u7684\u4e00\u5e27frame\u3002</p> <p>\u200b    FILE * fn1 = fopen(\"f:\\0.yuv\",\"ab+\");</p> <p>\u200b    fwrite(FrameData, 1,wh3/2,fn1);</p> <p>\u200b    fclose(fn1);</p>"},{"location":"infer/nginx/%E9%85%8D%E7%BD%AE%E6%AD%A5%E9%AA%A4/","title":"\u5b50\u57df\u540d\u6cdb\u89e3\u6790","text":""},{"location":"infer/nginx/%E9%85%8D%E7%BD%AE%E6%AD%A5%E9%AA%A4/#nginx","title":"\u521b\u5efanginx\u914d\u7f6e\u6587\u4ef6","text":"<ol> <li>\u8fdb\u5165nginx\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u5939\u8def\u5f84/etc/nginx/conf/conf.d</li> </ol> Bash<pre><code>cd /etc/nginx/conf/conf.d\ntouch llava.conf\nvi llava.conf\n</code></pre> Nginx Configuration File<pre><code>map $http_upgrade $connection_upgrade { \n    default upgrade; \n    '' close; \n} \n\n# \u8d1f\u8f7d\u5747\u8861\nupstream wsbackend{ \n    server 127.0.0.1:10000;\n    keepalive 1000; \n} \n\nserver { \n    listen 80;\n    server_name llava.iokko.cn; \n    location / { \n        proxy_http_version 1.1; \n        proxy_pass http://wsbackend;\n        proxy_redirect off; \n        proxy_set_header Host $host; \n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_read_timeout 3600s; \n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \n        proxy_set_header Upgrade $http_upgrade; \n        proxy_set_header Connection $connection_upgrade; \n    } \n}\n</code></pre>"},{"location":"infer/serve/%E7%94%A8python%E6%90%AD%E5%BB%BAgRPC%E6%9C%8D%E5%8A%A1/","title":"\u7528python\u642d\u5efagRPC\u670d\u52a1","text":"<p>\u53c2\u8003\u5730\u5740</p> <p>\u3010\u6458\u8981\u3011 gRPC\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u3001\u901a\u7528\u7684\u5f00\u6e90RPC\u6846\u67b6\uff0c\u5176\u7531Google\u4e3b\u8981\u9762\u5411\u79fb\u52a8\u5e94\u7528\u5f00\u53d1\u5e76\u57fa\u4e8eHTTP/2\u534f\u8bae\u6807\u51c6\u800c\u8bbe\u8ba1\uff0c\u57fa\u4e8eProtoBuf\u5e8f\u5217\u5316\u534f\u8bae\u5f00\u53d1\uff0c\u4e14\u652f\u6301\u4f17\u591a\u5f00\u53d1\u8bed\u8a00\u3002\u4e00\u4e2agRPC\u670d\u52a1\u7684\u5927\u4f53\u7ed3\u6784\u56fe\u4e3a\uff1a\u56fe\u4e00\u8868\u660e\uff0cgrpc\u7684\u670d\u52a1\u662f\u8de8\u8bed\u8a00\u7684\uff0c\u4f46\u9700\u8981\u9075\u5faa\u76f8\u540c\u7684\u534f\u8bae\uff08proto\uff09\u3002\u76f8\u6bd4\u4e8eREST\u670d\u52a1\uff0cgPRC \u7684\u4e00\u4e2a\u5f88\u660e\u663e\u7684\u4f18\u52bf\u662f\u5b83\u4f7f\u7528\u4e86\u4e8c\u8fdb\u5236\u7f16\u7801\uff0c\u6240\u4ee5\u5b83\u6bd4 JSON/HTTP \u66f4\u5feb\uff0c\u4e14\u6709\u6e05\u6670\u7684\u63a5\u53e3...</p> <p>gRPC\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u3001\u901a\u7528\u7684\u5f00\u6e90RPC\u6846\u67b6\uff0c\u5176\u7531Google\u4e3b\u8981\u9762\u5411\u79fb\u52a8\u5e94\u7528\u5f00\u53d1\u5e76\u57fa\u4e8eHTTP/2\u534f\u8bae\u6807\u51c6\u800c\u8bbe\u8ba1\uff0c\u57fa\u4e8eProtoBuf\u5e8f\u5217\u5316\u534f\u8bae\u5f00\u53d1\uff0c\u4e14\u652f\u6301\u4f17\u591a\u5f00\u53d1\u8bed\u8a00\u3002\u4e00\u4e2agRPC\u670d\u52a1\u7684\u5927\u4f53\u7ed3\u6784\u56fe\u4e3a\uff1a</p> <p></p> <p>\u56fe\u4e00\u8868\u660e\uff0cgrpc\u7684\u670d\u52a1\u662f\u8de8\u8bed\u8a00\u7684\uff0c\u4f46\u9700\u8981\u9075\u5faa\u76f8\u540c\u7684\u534f\u8bae\uff08proto\uff09\u3002\u76f8\u6bd4\u4e8eREST\u670d\u52a1\uff0cgPRC \u7684\u4e00\u4e2a\u5f88\u660e\u663e\u7684\u4f18\u52bf\u662f\u5b83\u4f7f\u7528\u4e86\u4e8c\u8fdb\u5236\u7f16\u7801\uff0c\u6240\u4ee5\u5b83\u6bd4 JSON/HTTP \u66f4\u5feb\uff0c\u4e14\u6709\u6e05\u6670\u7684\u63a5\u53e3\u89c4\u8303\u4ee5\u53ca\u652f\u6301\u6d41\u5f0f\u4f20\u8f93\uff0c\u4f46\u5b83\u7684\u5b9e\u73b0\u76f8\u6bd4rest\u670d\u52a1\u8981\u7a0d\u5fae\u8981\u590d\u6742\u4e00\u4e9b\uff0c\u4e0b\u9762\u7b80\u5355\u4ecb\u7ecd\u642d\u5efagRPC\u670d\u52a1\u7684\u6b65\u9aa4\u3002</p> <ol> <li>\u5b89\u88c5python\u9700\u8981\u7684\u5e93</li> </ol> Bash<pre><code>pip install grpcio\npip install grpcio-tools  \npip install protobuf\n</code></pre> <ol> <li>\u5b9a\u4e49gRPC\u7684\u63a5\u53e3</li> </ol> <p>\u521b\u5efa gRPC \u670d\u52a1\u7684\u7b2c\u4e00\u6b65\u662f\u5728.proto \u6587\u4ef6\u4e2d\u5b9a\u4e49\u597d\u63a5\u53e3\uff0cproto\u662f\u4e00\u4e2a\u534f\u8bae\u6587\u4ef6\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7684\u901a\u4fe1\u63a5\u53e3\u6b63\u662f\u901a\u8fc7proto\u6587\u4ef6\u534f\u5b9a\u7684\uff0c\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u8bed\u8a00\u751f\u6210\u5bf9\u5e94\u8bed\u8a00\u7684\u4ee3\u7801\u6587\u4ef6\u3002\u8fd9\u4e2a\u534f\u8bae\u6587\u4ef6\u4e3b\u8981\u5c31\u662f\u5b9a\u4e49\u597d\u670d\u52a1\uff08service\uff09\u63a5\u53e3\uff0c\u4ee5\u53ca\u8bf7\u6c42\u53c2\u6570\u548c\u76f8\u5e94\u7ed3\u679c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5177\u4f53\u7684proto\u8bed\u6cd5\u53c2\u89c1\u5982\u4e0b\u94fe\u63a5\uff08https://www.jianshu.com/p/da7ed5914088\uff09\uff0c\u5173\u4e8e\u4e8c\u7ef4\u6570\u7ec4\u3001\u5b57\u5178\u7b49python\u4e2d\u5e38\u7528\u7684\u6570\u636e\u7c7b\u578b\uff0cproto\u8bed\u6cd5\u7684\u8868\u8fbe\u89c1\u94fe\u63a5\uff08https://blog.csdn.net/xiaoxiaojie521/article/details/106938519\uff09\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u3002</p> JavaScript<pre><code>syntax = \"proto3\";\n\noption cc_generic_services = true;\n\n//\u5b9a\u4e49\u670d\u52a1\u63a5\u53e3\nservice GrpcService {\n    rpc hello (HelloRequest) returns (HelloResponse) {}  //\u4e00\u4e2a\u670d\u52a1\u4e2d\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u63a5\u53e3\uff0c\u4e5f\u5c31\u662f\u591a\u4e2a\u51fd\u6570\u529f\u80fd\n}\n\n//\u8bf7\u6c42\u7684\u53c2\u6570\nmessage HelloRequest {\n    string data = 1;   //\u6570\u5b571,2\u662f\u53c2\u6570\u7684\u4f4d\u7f6e\u987a\u5e8f\uff0c\u5e76\u4e0d\u662f\u5bf9\u53c2\u6570\u8d4b\u503c\n    Skill skill = 2;  //\u652f\u6301\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u683c\u5f0f\uff0c\u975e\u5e38\u7075\u6d3b\n};\n\n//\u8fd4\u56de\u7684\u5bf9\u8c61\nmessage HelloResponse {\n    string result = 1;\n    map&lt;string, int32&gt; map_result = 2; //\u652f\u6301map\u6570\u636e\u683c\u5f0f\uff0c\u7c7b\u4f3cdict\n};\n\nmessage Skill {\n    string name = 1;\n};\n</code></pre> <ol> <li>\u4f7f\u7528 protoc \u548c\u76f8\u5e94\u7684\u63d2\u4ef6\u7f16\u8bd1\u751f\u6210\u5bf9\u5e94\u8bed\u8a00\u7684\u4ee3\u7801</li> </ol> JavaScript<pre><code>python -m grpc_tools.protoc -I ./ --python_out=./ --grpc_python_out=. ./hello.proto\n</code></pre> <p>\u5229\u7528\u7f16\u8bd1\u5de5\u5177\u628aproto\u6587\u4ef6\u8f6c\u5316\u6210py\u6587\u4ef6\uff0c\u76f4\u63a5\u5728\u5f53\u524d\u6587\u4ef6\u76ee\u5f55\u4e0b\u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\u5373\u53ef\u3002</p> <ul> <li>-I \u6307\u5b9aproto\u6240\u5728\u76ee\u5f55</li> <li>-m \u6307\u5b9a\u901a\u8fc7protoc\u751f\u6210py\u6587\u4ef6</li> <li>--python_out\u6307\u5b9a\u751f\u6210py\u6587\u4ef6\u7684\u8f93\u51fa\u8def\u5f84</li> <li>hello.proto \u8f93\u5165\u7684proto\u6587\u4ef6</li> </ul> <p>\u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u540e\uff0c\u751f\u6210hello_pb2.py \u548chello_pb2_grpc.py\u8fd9\u4e24\u4e2a\u6587\u4ef6\u3002</p> <ol> <li>\u7f16\u5199grpc\u7684\u670d\u52a1\u7aef\u4ee3\u7801</li> </ol> JavaScript<pre><code>#! /usr/bin/env python\n# coding=utf8\n\nimport time\nfrom concurrent import futures\n\nimport grpc\n\nimport hello_pb2_grpc, hello_pb2\n\n_ONE_DAY_IN_SECONDS = 60 * 60 * 24\n\n\nclass TestService(hello_pb2_grpc.GrpcServiceServicer):\n    '''\n    \u7ee7\u627fGrpcServiceServicer,\u5b9e\u73b0hello\u65b9\u6cd5\n    '''\n    def __init__(self):\n        pass\n\n    def hello(self, request, context):\n        '''\n        \u5177\u4f53\u5b9e\u73b0hello\u7684\u65b9\u6cd5\uff0c\u5e76\u6309\u7167pb\u7684\u8fd4\u56de\u5bf9\u8c61\u6784\u9020HelloResponse\u8fd4\u56de\n        :param request:\n        :param context:\n        :return:\n        '''\n        result = request.data + request.skill.name + \" this is gprc test service\"\n        list_result = {\"12\": 1232}\n        return hello_pb2.HelloResponse(result=str(result),\n                                       map_result=list_result)\n\ndef run():\n    '''\n    \u6a21\u62df\u670d\u52a1\u542f\u52a8\n    :return:\n    '''\n    server = grpc.server(futures.ThreadPoolExecutor(max_workers=10))\n    hello_pb2_grpc.add_GrpcServiceServicer_to_server(TestService(),server)\n    server.add_insecure_port('[::]:50052')\n    server.start()\n    print(\"start service...\")\n    try:\n        while True:\n            time.sleep(_ONE_DAY_IN_SECONDS)\n    except KeyboardInterrupt:\n        server.stop(0)\n\n\nif __name__ == '__main__':\n    run()\n</code></pre> <p>\u5728\u670d\u52a1\u7aef\u4fa7\uff0c\u9700\u8981\u5b9e\u73b0hello\u7684\u65b9\u6cd5\u6765\u6ee1\u8db3proto\u6587\u4ef6\u4e2dGrpcService\u7684\u63a5\u53e3\u9700\u6c42\uff0chello\u65b9\u6cd5\u7684\u4f20\u5165\u53c2\u6570\uff0c\u662f\u5728proto\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684HelloRequest\uff0ccontext\u662f\u4fdd\u7559\u5b57\u6bb5\uff0c\u4e0d\u7528\u7ba1\uff0c\u8fd4\u56de\u53c2\u6570\u5219\u662f\u5728proto\u4e2d\u5b9a\u4e49\u7684HelloResponse\uff0c\u670d\u52a1\u542f\u52a8\u7684\u4ee3\u7801\u662f\u6807\u51c6\u7684\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u4fee\u6539\u63d0\u4f9b\u670d\u52a1\u7684ip\u5730\u5740\u4ee5\u53ca\u7aef\u53e3\u53f7\u3002</p> <ol> <li>\u7f16\u5199gRPC\u5ba2\u6237\u7aef\u7684\u4ee3\u7801</li> </ol> Python<pre><code>#! /usr/bin/env python\n# coding=utf8\nimport grpc\n\nimport hello_pb2_grpc, hello_pb2\n\n\ndef run():\n    '''\n    \u6a21\u62df\u8bf7\u6c42\u670d\u52a1\u65b9\u6cd5\u4fe1\u606f\n    :return:\n    '''\n    conn=grpc.insecure_channel('localhost:50052')\n    client = hello_pb2_grpc.GrpcServiceStub(channel=conn)\n    skill = hello_pb2.Skill(name=\"engineer\")\n    request = hello_pb2.HelloRequest(data=\"xiao gang\", skill=skill)\n    respnse = client.hello(request)\n    print(\"received:\",respnse.result)\n\n\nif __name__ == '__main__':\n    run()\n</code></pre> <p>\u5ba2\u6237\u7aef\u4fa7\u4ee3\u7801\u7684\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\uff0c\u9996\u5148\u5b9a\u4e49\u597d\u8bbf\u95eeip\u548c\u7aef\u53e3\u53f7\uff0c\u7136\u540e\u5b9a\u4e49\u597dHelloRequest\u6570\u636e\u7ed3\u6784\uff0c\u8fdc\u7a0b\u8c03\u7528hello\u5373\u53ef\u3002\u9700\u8981\u5f3a\u8c03\u7684\u662f\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u4e00\u5b9a\u8981import\u76f8\u540cproto\u6587\u4ef6\u7f16\u8bd1\u751f\u6210\u7684hello_pb2_grpc, hello_pb2\u6a21\u5757\uff0c\u5373\u4f7f\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u4f7f\u7528\u7684\u8bed\u8a00\u4e0d\u4e00\u6837\uff0c\u8fd9\u4e5f\u662fgrpc\u63a5\u53e3\u89c4\u8303\u4e00\u81f4\u7684\u4f53\u73b0\u3002</p> <ol> <li>\u8c03\u7528\u6d4b\u8bd5</li> </ol> <p>\u5148\u542f\u52a8\u8fd0\u884c\u670d\u52a1\u7aef\u7684\u4ee3\u7801\uff0c\u518d\u542f\u52a8\u8fd0\u884c\u5ba2\u6237\u7aef\u7684\u4ee3\u7801\u5373\u53ef\u3002</p> <ol> <li> <p>gRPC\u7684\u4f7f\u7528\u603b\u7ed3</p> </li> <li> <p>\u5b9a\u4e49\u597d\u63a5\u53e3\u6587\u6863</p> </li> <li>\u5de5\u5177\u751f\u6210\u670d\u52a1\u7aef/\u5ba2\u6237\u7aef\u4ee3\u7801</li> <li>\u670d\u52a1\u7aef\u8865\u5145\u4e1a\u52a1\u4ee3\u7801</li> <li>\u5ba2\u6237\u7aef\u5efa\u7acb gRPC \u8fde\u63a5\u540e\uff0c\u4f7f\u7528\u81ea\u52a8\u751f\u6210\u7684\u4ee3\u7801\u8c03\u7528\u51fd\u6570</li> <li>\u7f16\u8bd1\u3001\u8fd0\u884c</li> </ol>"},{"location":"linux/%E5%AE%8C%E7%BE%8E%E8%A7%A3%E5%86%B3ubuntu20%E4%B8%ADtracker%E5%8D%A0%E7%94%A8%E8%BF%87%E5%A4%9Acpu%EF%BC%8C%E7%A1%AC%E7%9B%98%E7%9A%84bug/","title":"\u5b8c\u7f8e\u89e3\u51b3ubuntu20\u4e2dtracker\u5360\u7528\u8fc7\u591acpu\uff0c\u786c\u76d8\u7684bug","text":"<p>\u6700\u8fd1\u8fd0\u884c\u7a0b\u5e8f\uff0c\u4e00\u6bb5\u65f6\u95f4\u540e\u88ab\u63d0\u793a\u786c\u76d8\u4e0a\u6ca1\u6709\u53ef\u7528\u7684\u7a7a\u95f4\u4e86\uff0c\u7528\u78c1\u76d8\u67e5\u770b\u5668\u4e00\u770b\u539f\u6765\u662f .cache\u4e0b\u7684tracker\u5360\u7528\u4e86\u621170GB\u7684\u786c\u76d8\uff01\uff01\u7b80\u76f4\u4e27\u5fc3\u75c5\u72c2\uff0c\u800c\u4e14\u548c\u4e00\u4e2a\u8d2a\u5a6a\u7684\u91ce\u517d\u4e00\u6837\uff0c\u8fd8\u5728\u75af\u72c2\u7684\u589e\u957f\uff01\uff01</p> <p>\u770b\u4e86\u5f88\u591a\u5e16\u5b50\u90fd\u4e0d\u80fd\u5f88\u597d\u7684\u89e3\u51b3\uff0c\u6700\u540e\u7ec8\u4e8e\u627e\u5230\u4e86\u65b9\u6cd5\uff0c\u7279\u5730\u642c\u8fd0\u8fc7\u6765\uff1a</p> <p>track\u662flinux\u4e2d\u7684\u6587\u4ef6\u7d22\u5f15\u5de5\u5177\uff0cubuntu18\u4e4b\u524d\u662f\u9ed8\u8ba4\u4e0d\u5b89\u88c5\u7684\uff0c\u6240\u4ee5\u5728\u5347\u7ea7\u523020\u540e\u4f1a\u9ed8\u8ba4\u5b89\u88c5\uff0c\u5b83\u662f\u548c\u684c\u9762\u7a0b\u5e8f\u7ed1\u5b9a\u7684\uff0c\u751a\u81f3\u8fd8\u6709\u5f88\u591a\u4f9d\u8d56\u9879\uff0c\u5bfc\u81f4\u65e0\u6cd5\u5220\u9664\uff0c\u4e00\u65e6\u5220\u9664\u5f88\u591a\u4f9d\u8d56\u9879\u90fd\u4e0d\u80fd\u8fd0\u884c\uff0c\u7981\u7528\u4e5f\u5f88\u96be\u7981\u7528\u7684\u6389\uff0c\u800c\u4e14\u7981\u7528\u4e86\u8fd8\u4f1a\u5bfc\u81f4\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u542f\u52a8\u5931\u8d25\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u66f4\u597d\u7684\u65b9\u6cd5\u3002</p> <p>1.\u9996\u5148\u6253\u5f00\u7ec8\u7aef\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u76ee\u7684\u662f\u5c4f\u853dtracker systemd\u670d\u52a1\uff0c\u5b8c\u5168\u7981\u7528\u5f53\u524d\u7684\u670d\u52a1</p> Bash<pre><code>systemctl --user mask tracker-store.service tracker-miner-fs.service tracker-miner-rss.service tracker-extract.service tracker-miner-apps.service tracker-writeback.service\n</code></pre> <p>2.\u7136\u540e\u91cd\u542f\u8ddf\u8e2a\u5668\uff1a</p> Bash<pre><code>tracker reset --hard\n</code></pre> <p>3.\u91cd\u542f\u7cfb\u7edfreboot</p> <p>\u91cd\u542f\u540e\u68c0\u6d4b\uff1a</p> Bash<pre><code>tracker status\n</code></pre> <p>\u663e\u793a\u201c\u65e0\u6cd5\u5efa\u7acb\u5230 Tracker \u7684\u8fde\u63a5: Failed to load SPARQL backend: GDBus.Error:org.freedesktop.systemd1.UnitMasked: Unit tracker-store.service is masked.\u201d\u8bf4\u660e\u5df2\u7ecf\u5c4f\u853d</p> <p>\u8fd8\u53ef\u4ee5\u68c0\u6d4btracker\u7684\u8f85\u52a9\u7a0b\u5e8f\u662f\u5426\u88ab\u7981\u7528\uff1a</p> Bash<pre><code>tracker daemon\n</code></pre> <p>\u663e\u793a\u4e0b\u9762\u7684\u8bf4\u660e\u88ab\u6210\u529f\u5c4f\u853d</p> <p></p> <p>\u6700\u540e\u8fdb\u5165\u5230.cache/tracker\u4e0b\u5220\u6389\u90a3\u4e2a\u6700\u5927\u7684\u6587\u4ef6\u5c31\u884c\u4e86</p> <p>\u5982\u679c\u60f3\u64a4\u9500\u64cd\u4f5c\uff0c\u6062\u590d\u8ddf\u8e2a\u5668\uff1a</p> Bash<pre><code>systemctl --user unmask tracker-store.service tracker-miner-fs.service tracker-miner-rss.service tracker-extract.service tracker-miner-apps.service tracker-writeback.service\n</code></pre> <p>\u5176\u4ed6\u7684\u65b9\u6cd5\uff1a</p> <p>\u65b9\u6cd51\uff1a</p> Bash<pre><code>gsettings set org.freedesktop.Tracker.Miner.Files crawling-interval -2\n</code></pre> <p>\u65b9\u6cd52\uff1a\u505c\u6b62\u540e\u53f0\u7684tracker</p> Bash<pre><code>tracker daemon -t\n</code></pre>"},{"location":"linux/%E6%89%93%E5%8D%B0%E6%9C%BA%E5%85%B1%E4%BA%AB/","title":"\u6253\u5370\u673a\u5171\u4eab","text":""},{"location":"linux/%E6%89%93%E5%8D%B0%E6%9C%BA%E5%85%B1%E4%BA%AB/#airprintsmb","title":"\u6253\u5370\u53ca\u626b\u63cf\u529f\u80fd\uff08\u5305\u542bAirprint\u53caSMB\u5171\u4eab\u6253\u5370\u673a\u7b49\uff09","text":""},{"location":"linux/%E6%89%93%E5%8D%B0%E6%9C%BA%E5%85%B1%E4%BA%AB/#samba","title":"Samba\u6a21\u5f0f\u5171\u4eab\u6253\u5370\u673a","text":"<p>\u8fd9\u91cc\u7684\u914d\u7f6e\u64cd\u4f5c\u4e5f\u90fd\u662f\u5728ssh\u7ec8\u7aef\u91cc\u6267\u884c\u7684\u3002</p> <ul> <li>\u9a71\u52a8</li> <li>\u7f51\u7edc\u5171\u4eab\u529f\u80fdSMB</li> </ul> <p>\u9a71\u52a8\u5b89\u88c5\u8fd9\u4e00\u5757\u6211\u53ea\u80fd\u7565\u8fc7\u4e86\uff0c\u6839\u636e\u6253\u5370\u673a\u7684\u578b\u53f7\u6765\u51b3\u5b9a\u3002\u6211\u89c1\u8fc7\u7684\u5927\u591a\u6570\u5bb6\u7528\u6253\u5370\u673a\u5728ubuntu\u4e0a\u90fd\u662f\u514d\u5b89\u88c5\u7684\uff0c\u8fd9\u4e00\u70b9\u6bd4windows\u4f3c\u4e4e\u8981\u66f4\u5f3a\u4e00\u4e9b\u3002\u6211\u5728\u8fd9\u53f0\u670d\u52a1\u5668\u4e0a\u8fde\u63a5\u7684\u662fHP M1005 MFP\uff0c\u5c5e\u4e8e\u5f88\u5e38\u89c1\u7684\u6253\u5370\u673a\u3002</p> <p>\u5982\u679c\u6709\u7279\u522b\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u67e5\u770bhttps://openprinting.org/drivers</p> <p>\u5982\u679c\u4f60\u662f\u60e0\u666e\uff08hp\uff09\u6253\u5370\u673a\uff0c\u90a3\u4e48\u4e00\u4e2a\u7b80\u5355\u547d\u4ee4\u884c\u4e5f\u53ef\u4ee5\u5e2e\u4f60\u5b89\u88c5\u6253\u5370\u673a\uff1a</p> Text Only<pre><code>sudo apt install hplip\n</code></pre> <p>\u9664\u6b64\u4ee5\u5916\u7684\u54c1\u724c\uff0c\u53ef\u4ee5\u8bd5\u8bd5cups\u670d\u52a1\u7684\u517c\u5bb9\u9a71\u52a8</p> Text Only<pre><code>sudo apt install printer-driver-gutenprint\n</code></pre> <p>SMB\u5171\u4eab\u670d\u52a1\u5f00\u542f\u4ee5\u540e\uff0c\u6253\u5370\u673a\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fde\u63a5\u4e86\u3002\uff08windows\u4e0b\u8fd8\u662f\u8981\u5b89\u88c5\u9a71\u52a8\uff09\u8fde\u63a5\u65b9\u5f0f\u5982\u4e0b\uff1b</p> <p>Win+R \u6253\u5f00\u8fd0\u884c\uff0c\u8f93\u5165 \\\u670d\u52a1\u5668\u7684\u540d\u5b57 \u6216\u8005 \\\u670d\u52a1\u5668\u7684ip\u5730\u5740</p> <p></p> <p></p> <p>\u6b64\u65f6\u6253\u5370\u673a\u5e94\u8be5\u5df2\u7ecf\u76f4\u63a5\u51fa\u73b0\u5728\u5217\u8868\u5185\u4e86\uff0c\u56e0\u6b64\u53f3\u952e\u70b9\u51fb\u8fde\u63a5\uff0c\u7b49\u5f85\u5b89\u88c5\u5373\u53ef\u3002\u5982\u679c\u63d0\u793a\u9a71\u52a8\u672a\u5b89\u88c5\u7b49\u95ee\u9898\uff0c\u53ef\u4ee5\u5b89\u88c5\u9a71\u52a8\u540e\u7ee7\u7eed\u8fde\u63a5\u3002\u8fde\u63a5\u5b8c\u6bd5\u4ee5\u540e\uff0c\u6587\u4ef6\u6253\u5370\u65f6\u5373\u53ef\u9009\u62e9\u8be5\u6253\u5370\u673a~</p>"},{"location":"linux/%E6%89%93%E5%8D%B0%E6%9C%BA%E5%85%B1%E4%BA%AB/#airprint","title":"Airprint\u6a21\u5f0f\u5171\u4eab\u6253\u5370\u673a","text":"<p>\u5982\u679c\u4f60\u6709Phone\u3001iPad\u3001Mac\u6253\u5370\u7684\u9700\u6c42\uff0c\u90a3\u4e48Airprint\u518d\u597d\u4e0d\u8fc7\u4e86~</p> <p>\u672c\u6559\u7a0b\u662f\u6839\u636e\u5982\u4e0b\u4e24\u4e2a\u7f51\u5740\u7684\u6559\u7a0b\u7efc\u5408\u6d4b\u8bd5\u5f97\u6765\uff0c\u5b89\u88c5\u5df2\u7ecf\u6210\u529f\uff0c\u5e76\u5df2\u6210\u529f\u670d\u52a1\uff1b</p> <p>Step-by-step - AirPrint Ubuntu 20.04 Installation Guide \u2022 tutorialforlinux.com</p> <p>Set Up CUPS Print Server on Ubuntu (Bonjour, IPP, Samba, AirPrint)</p> <p>\u5982\u679c\u6709\u7591\u95ee\u7684\u53ef\u4ee5\u5728\u539f\u7f51\u7ad9\u4e0a\u8fdb\u884c\u67e5\u770b\uff0c\u6216\u8bc4\u8bba\u533a\u95ee\u6211~</p> <p>\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u62a5\u9519\u7b49\u95ee\u9898\uff0c\u5efa\u8bae\u7528\u8c37\u6b4c\u5bfb\u627e\u65b9\u6848\u5662~\u6211\u8fd1\u671f\u53ef\u80fd\u6ca1\u6709\u592a\u591a\u65f6\u95f4\u56de\u7b54\u95ee\u9898</p> <p>\u542f\u7528Airprint\u9700\u8981\u4e24\u4e2a\u670d\u52a1\uff0c\u4e00\u4e2a\u662fcups,\u53e6\u4e00\u4e2a\u662favahi</p> <p>\u4e0b\u9762\u5f00\u59cb\u5b89\u88c5CUPS\u670d\u52a1\u3002\u547d\u4ee4\u884c\u8bf7\u4f9d\u6b21\u6267\u884c\uff0c\u5b89\u88c5\u5b8c\u6bd5\u540e\u518d\u6267\u884c\u4e0b\u4e00\u6761\uff1b</p> Text Only<pre><code>sudo apt install cups cups-client cups-filters cups-ipp-utils\n\nsudo service cups start\n\nsudo systemctl enable cups\n</code></pre> <p>\u68c0\u67e5\u6253\u5370\u673a\u662f\u5426\u6b63\u5e38\uff0c\u914d\u7f6e\u6587\u4ef6\u662f\u5426\u5b58\u5728\uff1b</p> Text Only<pre><code>sudo cat /etc/cups/printers.conf\n</code></pre> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u56fe\u4e2d\u7684\u6253\u5370\u673a\u4fe1\u606f\uff0c</p> <p>\u4e0b\u9762\u5f00\u59cb\u5b89\u88c5Avahi\u670d\u52a1\u3002</p> Text Only<pre><code>sudo apt install avahi-daemon\n\nsudo service avahi-daemon start\n\nsudo systemctl enable avahi-daemon\n\n# Ubuntu20.04\u7cfb\u7edf \u5982\u679c\u6709\u9632\u706b\u5899\uff0c\u5219\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002\u7cfb\u7edf\u9ed8\u8ba4\u672a\u5f00\u542f\u9632\u706b\u5899\nsudo ufw allow 5353/udp\n</code></pre> <p>\u4e0b\u8f7d Airprint\u7684\u914d\u7f6e\u751f\u6210python\u811a\u672cairprint-generate.py</p> <p>\u56fd\u5185\u53ef\u80fd\u6ca1\u6cd5\u76f4\u63a5\u8bbf\u95eegithub\u4e0b\u8f7d\uff0c\u6211\u5728\u8fd9\u91cc\u653e\u5230\u767e\u5ea6\u7f51\u76d8\u91cc</p> <p>\u7f51\u76d8\u94fe\u63a5 \u63d0\u53d6\u7801 kxzj</p> <p>\u89e3\u538b\u51fa\u6765\u7684airprint-generate.py\u6267\u884c\u6743\u9650\u6dfb\u52a0\u4e00\u4e0b,\u7136\u540e\u7528python\u6267\u884c\uff08\u5982\u679cpython\u73af\u5883\u7f3a\u4ec0\u4e48\u5305\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u5b89\u88c5\uff09</p> Text Only<pre><code>chmod +x ~/Downloads/airprint-generate.py \n\nsudo python ~/Downloads/airprint-generate.py\n</code></pre> <p>\u6267\u884c\u5b8c\u6bd5\u4ee5\u540e\uff0c\u4ed6\u4f1a\u5728\u811a\u672c\u6240\u5728\u76ee\u5f55\u4e0b\u751f\u6210\u6253\u5370\u673a\u5bf9\u5e94\u7684Airprintxxxxx.service\uff0c\u5982\u679c\u6709\u591a\u4e2a\u6253\u5370\u673a\uff0c\u5219\u4f1a\u751f\u6210\u591a\u4e2a\u3002\u6211\u8fd9\u91cc\u5c06\u751f\u6210\u7684\u5168\u90e8service\u90fd\u79fb\u52a8\u5230/etc/avahi/services/ \u3002\u4f60\u4e5f\u53ef\u4ee5\u4ec5\u79fb\u52a8\u4f60\u6240\u9700\u8981\u7684\u6253\u5370\u673a\uff1b</p> Text Only<pre><code>sudo mv ~/Downloads/AirPrint*.service /etc/avahi/services/\n</code></pre> <p>\u4e0b\u9762\u5f00\u59cb\u914d\u7f6ecups\uff0c\u914d\u7f6e\u7684\u9009\u9879\u6709\u70b9\u591a\uff0c\u4f46\u8fd9\u91cc\u8fd8\u6bd4\u8f83\u91cd\u8981\uff0c\u6211\u7b2c\u4e00\u6b21\u5c31\u662f\u8fd9\u91cc\u6ca1\u914d\u7f6e\u597d\u5bfc\u81f4\u624b\u673a\u4e0a\u663e\u793a\u51fa\u4e86airprint\u6253\u5370\u673a\u5374\u65e0\u6cd5\u6253\u5370\uff1b</p> Text Only<pre><code>sudo nano /etc/cups/cupsd.conf\n\n#\u5728\u7f16\u8f91\u5668\u6253\u5f00\u7684\u6587\u4ef6\u91cc\u627e Browsing off\uff0c\u6539\u4e3a\nBrowsing On\n\n# \u4fee\u6539 Listen localhost:631\nPort 631\n\n# \u4fee\u6539\u5982\u4e0b\u51e0\u884c\n#&lt;Location /&gt;\n#  Order allow,deny\n#&lt;/Location&gt;\n\n&lt;Location /&gt;\n  Order allow,deny\n  Allow @LOCAL\n&lt;/Location&gt;\n\n# \u8def\u5f84 /admin\u4e0b\u4e5f\u540c\u6837\u4fee\u6539\n#&lt;Location /admin&gt;\n#  Order allow,deny\n#  Allow @LOCAL\n#&lt;/Location&gt;\n\n&lt;Location /admin&gt;\n  Order allow,deny\n  Allow @LOCAL\n&lt;/Location&gt;\n\n#\u6700\u540e\u4e00\u884c\uff0c\u6dfb\u52a0\uff1a\nServerAlias * Port 631 Listen /var/run/cups/cups.sock\n</code></pre> <p>Ctrl+X\u9009\u62e9\u4fdd\u5b58\u5e76\u9000\u51fa\uff0c\u7136\u540e\u91cd\u542fCUPS\u548cAvahi</p> Text Only<pre><code>sudo /etc/init.d/cups restart\n\nsudo service avahi restart\n</code></pre> <p>\u5982\u679c\u4e00\u5207\u670d\u52a1\u90fd\u542f\u52a8\u6b63\u5e38\uff0c\u6b64\u65f6\u6253\u5370\u673a\u5df2\u7ecf\u53ef\u4ee5\u5728\u624b\u673a\u4e0a\u8bbf\u95ee\u4e86\u3002</p> <p></p>"},{"location":"linux/%E6%9E%84%E5%BB%BA%E6%9C%9F/","title":"\u6784\u5efa\u671f","text":"<p>TensorRT API \u6784\u5efa\u6a21\u578b\u63a8\u7406\u6d41\u7a0b\u3002</p> <p>TensorRT \u6784\u5efa\u6a21\u578b\u63a8\u7406\u4e00\u822c\u6709\u4e09\u79cd\u65b9\u5f0f\uff1a(1) \u4f7f\u7528\u6846\u67b6\u81ea\u5e26\u7684 TensorRT \u63a5\u53e3\uff0c\u5982 TF-TRT\u3001Torch-TRT\uff1b(2) \u4f7f\u7528 Parser \u524d\u7aef\u89e3\u91ca\u5668\uff0c\u5982 TF / Torch / \u2026 -&gt; ONNX -&gt; TensorRT\uff1b(3) \u4f7f\u7528 TensorRT \u539f\u751f API \u642d\u5efa\u7f51\u7edc\u3002\u5f53\u7136\u96be\u5ea6\u548c\u6613\u7528\u6027\u80af\u5b9a\u662f\u7531\u4f4e\u5230\u9ad8\u7684\uff0c\u4f34\u968f\u800c\u6765\u7684\u6027\u80fd\u548c\u517c\u5bb9\u6027\u4e5f\u662f\u7531\u4f4e\u5230\u9ad8\u7684\u3002\u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u4ecb\u7ecd\u7b2c\u4e09\u79cd\u65b9\u5f0f\u3002</p> <p>\u6587\u7ae0\u76ee\u5f55  1 TensorRT API \u6784\u5efa\u6d41\u7a0b  2 \u6784\u5efa\u9636\u6bb5  2.1 \u6784\u5efa Logger  2.2 \u6784\u5efa Builder  2.3 \u6784\u5efa BuilderConfig  2.4 \u6784\u5efa Network  2.5 \u6784\u5efa SerializedNetwork  3 \u8fd0\u884c\u9636\u6bb5  3.1 \u6784\u5efa Engine  3.2 \u6784\u5efa Context  3.3 \u6784\u5efa Buffer \u76f8\u5173  3.4 \u6784\u5efa Execute  4 \u6574\u6d41\u7a0b\u6784\u5efa\u793a\u4f8b\u4ee3\u7801 1 TensorRT API \u6784\u5efa\u6d41\u7a0b \u2003 TensorRT API \u7684\u6574\u4e2a\u6784\u5efa\u8fc7\u7a0b\u53ef\u4ee5\u5206\u4e3a \u6784\u5efa\u9636\u6bb5 \u548c \u8fd0\u884c\u9636\u6bb5 \uff0c\u5176\u4e2d\u6784\u5efa\u9636\u6bb5\u6307\u7684\u662f\u6dfb\u52a0\u7b97\u5b50&amp;\u6570\u636e\u3001\u7f51\u7edc\u53c2\u6570\u914d\u7f6e\u3001\u8fdb\u884c\u7b97\u5b50\u95f4\u903b\u8f91\u8fde\u63a5\u4ee5\u7ec4\u5efa\u6a21\u578b\u7f51\uff0c\u6765\u751f\u6210 TensorRT Engine\uff1b\u8fd0\u884c\u9636\u6bb5\u5219\u53ef\u4ee5\u629b\u5f00\u7b97\u5b50\u5b9e\u73b0\uff0c\u76f4\u63a5\u8c03\u7528\u6784\u5efa\u9636\u6bb5\u751f\u6210\u7684 TensorRT Engine \u8fdb\u884c\u524d\u5411\u63a8\u7406\u8ba1\u7b97\u3002\u4e24\u4e2a\u9636\u6bb5\u4e2d\u90fd\u6709\u4e00\u4e9b\u6bd4\u8f83\u5173\u952e\u7684\u6a21\u5757\uff0c\u5728\u4e0b\u9762\u7684\u56fe\u4e2d\u4e88\u4ee5\u5217\u51fa\uff1a</p> <p>\u4e0b\u9762\u5206\u522b\u8fdb\u884c\u7ec6\u81f4\u4ecb\u7ecd\u3002</p> <p>2 \u6784\u5efa\u9636\u6bb5 2.1 \u6784\u5efa Logger \u2003 \u9996\u5148\u662f\u6784\u5efa Logger \u65e5\u5fd7\u8bb0\u5f55\u5668\uff1a</p> <p>logger = trt.Logger(trt.Logger.VERBOSE) 1. \u2003 \u53ef\u9009\u53c2\u6570\uff1aVERBOSE\u3001INFO\u3001WARNING\u3001ERROR\u3001INTERNAL_ERROR\uff0c\u4ea7\u751f\u4e0d\u540c\u7b49\u7ea7\u7684\u65e5\u5fd7\uff0c\u7531\u8be6\u7ec6\u5230\u7b80\u7565\uff1a</p> <p>VERIOSE\uff1a[TensorRT] VERBOSE\uff1aGraph construction and optimization completed in 0.000261295 seconds. INFO\uff1a[TensorRT] INFO\uff1aDetected 1 inputs and 1 output network tensors. WARNING\uff1a[TensorRT] WARNING\uff1aTensor DataType is determined at build time for tensors not marked as input or output. ERROR\uff1a[TensorRT] ERROR\uff1aINVALID_CONFIG\uff1aDeserialize the cuda engine failed. INTERNAL_ERROR\uff1a[TensorRT] ERROR\uff1a\u2026/builder/tacticOptimizer.cpp (1820) - TRTInternal Error in computeCosts\uff1a0 (Could not find any implementation for node (Unnamed Layer* 0) [TopK].) 2.2 \u6784\u5efa Builder \u2003 \u7136\u540e\u662f\u6784\u5efa Builder \u7f51\u7edc\u5143\u6570\u636e\uff0c\u8fd9\u662f\u6a21\u578b\u642d\u5efa\u7684\u5165\u53e3\uff0c\u7f51\u7edc\u7684 TensorRT \u5185\u90e8\u8868\u793a\u4ee5\u53ca\u53ef\u6267\u884c\u7a0b\u5e8f\u5f15\u64ce\uff0c\u90fd\u662f\u7531\u8be5\u5bf9\u8c61\u7684\u6210\u5458\u65b9\u6cd5\u751f\u6210\u7684\uff0c\u6765\u770b Builder \u662f\u600e\u4e48\u6784\u5efa\u7684\uff1a</p> <p>builder = trt.Builder(logger) 1. \u2003 \u6765\u770b Builder \u7684\u5e38\u7528\u6210\u5458\uff1a</p> <p>builder.max_batch_size = 256\uff1a\u7528\u4e8e\u6307\u5b9a\u6700\u5927 batch size\uff0c\u5728 static shape \u6a21\u5f0f\u4e0b\u4f7f\u7528\uff1b builder.max_workspace_size = 1 &lt;&lt; 30\uff1a\u7528\u4e8e\u6307\u5b9a\u6700\u5927\u53ef\u7528\u663e\u5b58\uff0c\u5355\u4f4d\u4e3a byte ( \u6ce8\u610f\uff1a\u8be5\u9879\u5373\u5c06\u88ab\u5e9f\u5f03)\uff1b builder.fp16_mode = True / False\uff1a\u7528\u4e8e\u5f00\u542f / \u5173\u95ed fp16 \u6a21\u5f0f ( \u6ce8\u610f\uff1a\u8be5\u9879\u5373\u5c06\u88ab\u5e9f\u5f03)\uff1b builder.int8_mode = True / False\uff1a\u7528\u4e8e\u5f00\u542f / \u5173\u95ed int8 \u6a21\u5f0f ( \u6ce8\u610f\uff1a\u8be5\u9879\u5373\u5c06\u88ab\u5e9f\u5f03)\uff1b builder.int8_calibrator = \u2026 \uff1aint8 \u6a21\u5f0f\u7684\u6821\u51c6\u8868 ( \u6ce8\u610f\uff1a\u8be5\u9879\u5373\u5c06\u88ab\u5e9f\u5f03)\uff1b builder.strict_type_constraints = True / False\uff1a\u5f00\u542f / \u5173\u95ed\u5f3a\u5236\u7cbe\u5ea6\u6a21\u5f0f ( \u6ce8\u610f\uff1a\u8be5\u9879\u5373\u5c06\u88ab\u5e9f\u5f03)\uff1b builder.refittable = True / False\uff1a\u5f00\u542f / \u5173\u95ed refit \u6a21\u5f0f ( \u6ce8\u610f\uff1a\u8be5\u9879\u5373\u5c06\u88ab\u5e9f\u5f03)\uff1b \u2003 \u4f60\u53ef\u80fd\u4f1a\u6bd4\u8f83\u597d\u5947\uff0c\u53ef\u4ee5\u770b\u5230\u4e0a\u9762\u5f88\u591a\u7684\u914d\u7f6e\u9879\u5373\u5c06\u88ab\u5e9f\u5f03\uff0c\u8fd9\u4e0d\u662f\u8bf4\u8fd9\u4e9b\u914d\u7f6e\u9879\u4e0d\u80fd\u7528\u4e86\uff0c\u800c\u662f\u628a\u5b83\u4eec\u79fb\u5230\u4e86 BuilderConfig \u4e2d\u8fdb\u884c\u914d\u7f6e\u3002\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u73b0\u5728 NLP \u91cc\u7528\u7684\u6bd4\u8f83\u591a\u7684 Dynamic Shape \u6a21\u5f0f\u5fc5\u987b\u7528 BuilderConfig \u53ca\u5176\u76f8\u5173 API\uff0c\u90a3\u4e48\u7d27\u63a5\u7740\u6211\u4eec\u6765\u770b BuilderConfig\u3002</p> <p>2.3 \u6784\u5efa BuilderConfig \u2003 \u6784\u5efa BuilferConfig \u7f51\u7edc\u5143\u6570\u636e\u7684\u9009\u9879\uff0c\u8be5\u9879\u8d1f\u8d23\u8bbe\u7f6e\u6a21\u578b\u7684\u4e00\u4e9b\u53c2\u6570\uff0c\u5982\u662f\u5426\u5f00\u542f fp16 \u6a21\u5f0f\u3001int8 \u6a21\u5f0f\u7b49\u3002BuilderConfig \u662f\u5efa\u7acb\u5728 Builder \u57fa\u7840\u4e4b\u4e0a\u7684\uff1a</p> <p>config = builder.create_builder_config() 1. \u2003 \u6765\u770b BuilderConfig \u7684\u5e38\u7528\u6210\u5458\uff1a</p> <p>config.max_workspace_size = 1 &lt;&lt; 30\uff1a\u7528\u4e8e\u6307\u5b9a\u6700\u5927\u53ef\u7528\u663e\u5b58\uff1b config.max_batch_size = \u2026 \uff1a\u7528\u4e8e\u6307\u5b9a\u6700\u5927 batch\uff0c\u82e5\u6ca1\u6709\u914d\u7f6e\u8be5\u6210\u5458\uff0c\u5219\u9ed8\u8ba4 Explicit batch \u6a21\u5f0f\uff1b config.flag = \u2026 \uff1a\u7528\u4e8e\u8bbe\u7f6e\u6807\u5fd7\u4f4d\uff0c\u5982 1 &lt;&lt; int(trt.BuilderFlag.FP16) \u6216 1 &lt;&lt; int(trt.BuilderFlag.INT8) \uff1b config.int8_calibrator = \u2026 \uff1aint8 \u6a21\u5f0f\u7684\u6821\u51c6\u8868\uff1b \u7b49\u7b49\u66f4\u591a\u9ad8\u7ea7\u7528\u6cd5 \u2003 \u5728\u4ee5\u4e0a\u7684 \u7b49\u7b49\u66f4\u591a\u9ad8\u7ea7\u7528\u6cd5 \u4e2d\u8fd8\u6709\u5982 set_tactic_sources (\u9650\u5236\u7b97\u6cd5\u5b9e\u73b0)\u3001set_timing_cache (\u8282\u7ea6\u6784\u5efa\u65f6\u95f4)\u3001algorithm_selector (\u7cbe\u786e\u63a7\u5236\u8282\u70b9\u7b97\u6cd5) \u7b49\u3002</p> <p>2.4 \u6784\u5efa Network \u2003 \u6784\u5efa Network \u8ba1\u7b97\u56fe\uff0c\u662f \u6700\u4e3a\u6838\u5fc3\u7684\u4e00\u4e2a\u6a21\u5757\u3002Network \u662f\u7f51\u7edc\u7684\u4e3b\u4f53\uff0c\u4f7f\u7528 TensorRT API \u642d\u5efa\u6a21\u578b\uff0c\u5e76\u4e14\u6807\u8bb0\u7f51\u7edc\u7684\u8f93\u5165\u8f93\u51fa\u8282\u70b9\uff0c\u4ee5\u628a\u5404\u4e2a\u8ba1\u7b97\u8282\u70b9\u7ec7\u8fde\u6210\u7f51\u72b6\uff1a</p> <p>network = builder.create_network() 1. \u5e38\u7528\u53c2\u6570\uff1a1 &lt;&lt; int(tensorrt.NetworkDefinitionCreationFlag.EXPLICIT_BATCH)\uff0c\u4f7f\u7528 Explicit Batch \u6a21\u5f0f\uff1b \u5e38\u7528\u65b9\u6cd5\uff1a network.add_input(\u2018oneTensor\u2019, trt.float32, (3, 4, 5)) \u6807\u8bb0\u7f51\u7edc\u8f93\u5165\u5f20\u91cf; convLayer = network.add_convolution_nd(XXX) \u6dfb\u52a0\u5404\u79cd\u7f51\u7edc\u5c42; network.mark_output(convLayer.get_output(0)) \u6807\u8bb0\u7f51\u7edc\u8f93\u51fa\u5f20\u91cf;</p> <p>2.5 \u6784\u5efa SerializedNetwork \u2003 \u6784\u5efa SerializedNetwork\uff0c\u8fd9\u662f\u7f51\u7edc\u7684 TensorRT \u5185\u90e8\u8868\u793a\uff0c\u8fd9\u4e2a\u5730\u65b9\u7684\u540e\u7eed\u5904\u7406\u5c31\u6709\u4e24\u79cd\u9009\u62e9\uff1a(1) \u53ef\u4ee5\u7528\u5b83\u751f\u6210\u53ef\u6267\u884c\u7684\u63a8\u7406\u5f15\u64ce\u76f4\u63a5\u8fdb\u884c\u540e\u7eed\u63a8\u7406\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u53cd\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\uff1b(2) \u628a\u5b83\u5e8f\u5217\u5316\u4fdd\u5b58\u4e3a\u6587\u4ef6\uff0c\u65b9\u4fbf\u4ee5\u540e\u91cd\u65b0\u8bfb\u53d6\u548c\u4f7f\u7528\uff0c\u8fd9\u91cc\u5c31\u9700\u8981\u6d89\u53ca\u5230\u53cd\u5e8f\u5217\u5316\uff0c\u8fd9\u662f\u5de5\u7a0b\u90e8\u7f72\u5e38\u7528\u7684\u65b9\u5f0f\u3002\u6765\u770b\u770b\u600e\u4e48\u6784\u5efa SerializedNetwork\uff1a</p> <p>engineString = builder.build_serialized_network(network, config) 1. \u2003 \u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u6784\u5efa\u9636\u6bb5\uff0c\u4e0b\u9762\u6765\u770b\u8fd0\u884c\u9636\u6bb5\u3002</p> <p>3 \u8fd0\u884c\u9636\u6bb5 \u2003 \u8fd0\u884c\u9636\u6bb5\u76f8\u6bd4\u6784\u5efa\u9636\u6bb5\uff0c\u8fc7\u7a0b\u8f83\u4e3a\u7b80\u6d01\u660e\u4e86\u3002\u4e0b\u9762\u6765\u770b\u3002</p> <p>3.1 \u6784\u5efa Engine \u2003 \u6784\u5efa Engine\uff0cEngine \u662f\u63a8\u7406\u5f15\u64ce\uff0c\u662f\u6a21\u578b\u8ba1\u7b97\u7684\u6838\u5fc3\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u4ee3\u7801\u6bb5\u3002\u6765\u770b Engine \u662f\u600e\u4e48\u6784\u5efa\u7684\uff1a</p> <p>engine = trt.Runtime(logger).deserialize_cuda_engine(engineString) 1. 3.2 \u6784\u5efa Context \u2003 \u6784\u5efa Context\uff0c\u4e3b\u8981\u7528\u4e8e\u8ba1\u7b97\u7684 GPU \u4e0a\u4e0b\u6587\uff0c\u7c7b\u6bd4 cpu \u4e0a\u7684\u8fdb\u7a0b\u6982\u5ff5\uff0c\u662f\u6267\u884c\u63a8\u7406\u5f15\u64ce\u7684\u4e3b\u4f53\u3002\u6765\u770b Context \u662f\u600e\u4e48\u6784\u5efa\u7684\uff1a</p> <p>context = engine.create_execution_context() 1. 3.3 \u6784\u5efa Buffer \u76f8\u5173 \u2003 \u6784\u5efa Buffer \u76f8\u5173\uff0c\u4e3b\u8981\u6d89\u53ca\u6570\u636e\u7684\u51c6\u5907\uff0c\u5305\u62ec Host \u7aef\u548c Device \u7aef\uff0c\u4ee5\u53ca\u6570\u636e\u7684\u62f7\u8d1d\uff0c\u5982\u6267\u884c\u63a8\u7406\u524d\u9700\u8981\u5c06 CPU \u6570\u636e\u62f7\u8d1d\u5230 GPU \u4e0a\uff0c\u5373 Host -&gt; Device\uff1b\u5f53\u63a8\u7406\u5b8c\u6210\u540e\uff0c\u9700\u8981\u5c06\u7ed3\u679c\u6570\u636e\u4ece GPU \u62f7\u51fa\u5230 CPU\uff0c\u4e5f\u5373 Device -&gt; Host\u3002\u4e00\u4e9b\u76f8\u5173\u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a</p> <p>cudart.cudaMemcpy(bufferD, bufferH, bufferSize, cudart.cudaMemcpyKind.cudaMemcpyHostToDevice)   # Host -&gt; Device</p> <p>cudart.cudaMemcpy(bufferH, bufferD, bufferSize, cudart.cudaMemcpyKind.cudaMemcpyDeviceToHost)   # Device -&gt; Host 1. 2. 3. 3.4 \u6784\u5efa Execute \u2003 \u6784\u5efa Execute\uff0cExecute \u8c03\u7528\u8ba1\u7b97\u6838\u5fc3\u6267\u884c\u8ba1\u7b97\u7684\u8fc7\u7a0b\uff0c\u770b\u4ee3\u7801\uff0c\u5f88\u7b80\u5355\uff1a</p> <p>context.execute_v2(bufferD) 1. \u2003 \u4ee5\u4e0a\u5c31\u5b8c\u6210\u4e86\u6574\u4e2a\u7684 \u6784\u5efa \u4e0e \u8fd0\u884c\u8fc7\u7a0b\uff0c\u4e0b\u9762\u770b\u4e2a\u793a\u4f8b\u4ee3\u7801\u3002</p> <p>4 \u6574\u6d41\u7a0b\u6784\u5efa\u793a\u4f8b\u4ee3\u7801 \u2003 \u8fd9\u91cc\u4ee5\u6784\u5efa\u5355\u7b97\u5b50 ( Identity Layer ) \u7f51\u7edc\u4e3a\u4f8b\uff0c\u8fdb\u884c\u4ee3\u7801\u5c55\u793a\uff1a</p>"},{"location":"linux/%E6%9E%84%E5%BB%BA%E6%9C%9F/#_1","title":"\u6784\u5efa\u671f","text":"<p>logger = trt.logger(trt.Logger.ERROR) if os.path.isfile(trtFile):   with open(trtFile, 'rb') as f:     engineString = f.read() else:   builder = trt.Builder.create_network(1 &lt;&lt; int(trt.NetworkDefinitionCreationFlag.EXPLICIT_BATCH))   profile = builder.create_optimization_profile()   config = builder.create_builder_config()   config.max_workspace_size = 1 &lt;&lt; 30</p> <p>inputTensor = network.add_input('inputT0', trt.DataType.FLOAT, [-1, -1, -1])   profile.set_shape(inputTensor.name, [1, 1, 1], [3, 4, 5], [6, 7, 8])   config.add_optimization_profile(profile)</p> <p>identityLayer = network.add_identity(inputTensor)   network.mark_output(identityLayer.get_output(0))</p> <p>engineString = builder.build_serialized_network(network, config)   with open(trtFile, 'wb') as f:     f.write(engineString)</p>"},{"location":"linux/%E6%9E%84%E5%BB%BA%E6%9C%9F/#_2","title":"\u8fd0\u884c\u671f","text":"<p>engine = trt.Runtime(logger).deserialize_cuda_engine(engineString) context = engine.create_execution_context()</p> <p>dataShape = [3, 4, 5] context.set_binding_shape(0, dataShape) data = np.arange(np.prod(dataShape), dtype=np.float32).reshape(*dataShape) bufferH = [np.ascontiguousarray(data.reshape(-1))] bufferD = [cudart.cudaMalloc(bufferH[0].nbytes)[1]]</p> <p>cudart.cudaMemcpy(bufferD[0], bufferH[0].ctypes.data, bufferH[0].nbytes, cudart.cudaMemcpyKind.cudaMemcpyHostToDevice)   # Host -&gt; Device context.execute_v2(bufferD) cudart.cudaMemcpy(bufferH[i].ctypes.data, bufferD[i], bufferH[i].nbytes, cudart.cudaMemcpyKind.cudaMemcpyDeviceToHost)   # Device -&gt; Host</p> <p>cudart.cudaFree(bufferD[0])</p>"},{"location":"linux/environment/Ubuntu%E5%AE%89%E8%A3%85docker/","title":"Ubuntu18.04\u5b89\u88c5docker","text":"<p>\u53c2\u8003</p> <p>https://www.runoob.com/docker/ubuntu-docker-install.html</p> <p>1.\u5378\u8f7d</p> Bash<pre><code>sudo apt-get remove docker docker-engine docker.io containerd runc\n</code></pre> <p>2.\u5b89\u88c5Docker</p> Bash<pre><code>sudo apt-get update\n# \u5b89\u88c5\u4f9d\u8d56\u5305\nsudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common\n# \u6dfb\u52a0 Docker \u7684\u5b98\u65b9 GPG \u5bc6\u94a5\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n# \u9a8c\u8bc1\u60a8\u73b0\u5728\u662f\u5426\u62e5\u6709\u5e26\u6709\u6307\u7eb9\u7684\u5bc6\u94a5\nsudo apt-key fingerprint 0EBFCD88\n# \u8bbe\u7f6e\u7a33\u5b9a\u7248\u4ed3\u5e93\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n</code></pre> <p></p> <p>3.\u5b89\u88c5 Docker Engine-Community</p> Bash<pre><code># \u66f4\u65b0\n$ sudo apt-get update\n# \u5b89\u88c5\u6700\u65b0\u7684Docker-ce \nsudo apt-get install docker-ce\n# \u542f\u52a8\nsudo systemctl enable docker\nsudo systemctl start docker\n</code></pre> <p>4.\u6d4b\u8bd5</p> Bash<pre><code>sudo docker run hello-world\n</code></pre> <p></p> <p>\u5728\u7528\u6237\u6743\u9650\u4e0bdocker \u547d\u4ee4\u9700\u8981 sudo \u5426\u5219\u51fa\u73b0\u4ee5\u4e0b\u95ee\u9898</p> <p></p> <p>\u901a\u8fc7\u5c06\u7528\u6237\u6dfb\u52a0\u5230docker\u7528\u6237\u7ec4\u53ef\u4ee5\u5c06sudo\u53bb\u6389\uff0c\u547d\u4ee4\u5982\u4e0b Bash<pre><code>sudo groupadd docker #\u6dfb\u52a0docker\u7528\u6237\u7ec4\n\nsudo gpasswd -a $USER docker #\u5c06\u767b\u9646\u7528\u6237\u52a0\u5165\u5230docker\u7528\u6237\u7ec4\u4e2d\n\nnewgrp docker #\u66f4\u65b0\u7528\u6237\u7ec4\n</code></pre></p>"},{"location":"linux/environment/Ubuntu%E8%AE%BE%E7%BD%AE%E5%9B%BD%E5%86%85%E6%B8%85%E5%8D%8E%E6%BA%90/","title":"Ubuntu\u8bbe\u7f6e\u56fd\u5185\u6e05\u534e\u6e90","text":"<p>1\u3001\u5907\u4efd\u4e00\u4e0b\u4ee5\u524d\u7684\u6e90\uff1a</p> Bash<pre><code>cp /etc/apt/sources.list /etc/apt/sources.list.bak\n</code></pre> <p>2\u3001\u628a/etc/apt/sources.list\u6e05\u6389\uff0c\u91cd\u65b0\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1aUbuntu \u955c\u50cf \u6e05\u534e\u7684\u8f6f\u4ef6\u6e90\u955c\u50cf\u3002</p> <p>https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/  \u9009\u62e9\u5bf9\u5e94\u7248\u672c\u590d\u5236\u7c98\u8d34\u8fdbsources.list\u4e2d\u3002\u4f8b\u5982\u6211\u662fUbuntu18.04</p> Text Only<pre><code># \u9ed8\u8ba4\u6ce8\u91ca\u4e86\u6e90\u7801\u955c\u50cf\u4ee5\u63d0\u9ad8 apt update \u901f\u5ea6\uff0c\u5982\u6709\u9700\u8981\u53ef\u81ea\u884c\u53d6\u6d88\u6ce8\u91ca\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\n\n# \u9884\u53d1\u5e03\u8f6f\u4ef6\u6e90\uff0c\u4e0d\u5efa\u8bae\u542f\u7528\n# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\n</code></pre> <p>3\u3001\u6700\u540e\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u66f4\u65b0\u6e90</p> Bash<pre><code>sudo apt-get update\nsudo apt-get upgrade\n</code></pre>"},{"location":"linux/environment/linux%E6%96%B0%E5%BB%BA%E7%94%A8%E6%88%B7%E5%8F%8A%E7%94%A8%E6%88%B7%E7%BB%84%E7%9B%AE%E5%BD%95%E6%9D%83%E9%99%90/","title":"Linux\u65b0\u5efa\u7528\u6237\u53ca\u7528\u6237\u7ec4\u76ee\u5f55\u6743\u9650","text":""},{"location":"linux/environment/linux%E6%96%B0%E5%BB%BA%E7%94%A8%E6%88%B7%E5%8F%8A%E7%94%A8%E6%88%B7%E7%BB%84%E7%9B%AE%E5%BD%95%E6%9D%83%E9%99%90/#_1","title":"\u6dfb\u52a0\u7528\u6237","text":"Bash<pre><code>useradd -m username -p password -d /data/home/xxx\n</code></pre> <p>username\u3001password\u5904\u5206\u522b\u586b\u4e0a\u7528\u6237\u540d\u3001\u5bc6\u7801 -m \u8868\u793a\u6dfb\u52a0\u7528\u6237\u7684\u65f6\u5019\u987a\u4fbf\u5efa\u7acb\u8be5\u7528\u6237\u6743\u9650\u7684\u6587\u4ef6\u5939 -d \u8868\u793a\u8be5\u6587\u4ef6\u5939\u7684\u76ee\u5f55</p> <p>\u5220\u9664\u7528\u6237\u53ca\u5176\u6587\u4ef6\u5939</p> Bash<pre><code>userdel -r yyl\n</code></pre> <p>\u4fee\u6539\u7528\u6237\u5bc6\u7801</p> Bash<pre><code>passwd username\n</code></pre> <p>\u52a0\u76ee\u5f55\u6743\u9650</p> <p>linux\u67e5\u770b\u7528\u6237\u7ec4</p> <p>\u8981\u67e5\u770bLinux\u7cfb\u7edf\u4e2d\u7684\u7528\u6237\u7ec4\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4:</p> Text Only<pre><code>cat /etc/group\n</code></pre> <p>\u8be5\u547d\u4ee4\u5c06\u663e\u793a\u7cfb\u7edf\u4e2d\u6240\u6709\u7528\u6237\u7ec4\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u7528\u6237\u7ec4\u7684\u4fe1\u606f\u90fd\u4ee5\u4e00\u884c\u663e\u793a\u3002\u6bcf\u884c\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5:</p> Text Only<pre><code>group_name:password:GID:user_list\n</code></pre> <ul> <li><code>group_name</code> \u662f\u7528\u6237\u7ec4\u7684\u540d\u79f0\u3002</li> <li><code>password</code> \u662f\u7528\u6237\u7ec4\u7684\u5bc6\u7801\u5b57\u6bb5\u3002\u901a\u5e38\u5728Linux\u4e2d\uff0c\u7528\u6237\u7ec4\u7684\u5bc6\u7801\u5b57\u6bb5\u4e3a\u7a7a\u6216\u5305\u542b\u4e00\u4e2a\u5360\u4f4d\u7b26\u3002</li> <li><code>GID</code> \u662f\u7528\u6237\u7ec4\u7684\u552f\u4e00\u6807\u8bc6\u7b26\uff08Group ID\uff09\u3002</li> <li><code>user_list</code> \u662f\u5c5e\u4e8e\u8be5\u7528\u6237\u7ec4\u7684\u7528\u6237\u5217\u8868\uff0c\u591a\u4e2a\u7528\u6237\u540d\u4e4b\u95f4\u7528\u9017\u53f7\u5206\u9694\u3002</li> </ul> <p>\u8bf7\u6ce8\u610f\uff0c\u67e5\u770b <code>/etc/group</code> \u6587\u4ef6\u9700\u8981 root \u6216\u5177\u6709\u9002\u5f53\u6743\u9650\u7684\u7528\u6237\u624d\u80fd\u6267\u884c\u6b64\u64cd\u4f5c\u3002</p> <p>\u6dfb\u52a0\u7528\u6237\u7ec4</p> <p>\u5c06\u65b0\u7528\u6237\u6dfb\u52a0\u5230\u76ee\u6807\u76ee\u5f55\u6240\u5c5e\u7684\u7528\u6237\u7ec4\u4e2d</p> Bash<pre><code>sudo usermod -aG groupname user1\n</code></pre> <p>\u8981\u5c06\u4e00\u4e2a\u78c1\u76d8\u76ee\u5f55 <code>/hdd</code> \u6dfb\u52a0\u5230\u7528\u6237\u7ec4 <code>group1</code>\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>chgrp</code> \u547d\u4ee4\u6765\u66f4\u6539\u76ee\u5f55\u7684\u6240\u5c5e\u7528\u6237\u7ec4\u3002\u7136\u540e\uff0c\u4f7f\u7528 <code>chmod</code> \u547d\u4ee4\u6765\u8bbe\u7f6e\u7528\u6237\u7ec4\u7684\u6743\u9650\u3002</p> <p>\u4ee5\u4e0b\u662f\u6dfb\u52a0\u7528\u6237\u7ec4\u6743\u9650\u7684\u57fa\u672c\u8bed\u6cd5\uff1a</p> Text Only<pre><code>sudo chgrp group1 /hdd\nsudo chmod g+rwx /hdd\n</code></pre> <p>\u89e3\u91ca\u4e00\u4e0b\u4e0a\u8ff0\u547d\u4ee4\u4e2d\u7684\u53c2\u6570\uff1a</p> <ul> <li><code>sudo</code>\uff1a\u4ee5\u7ba1\u7406\u5458\u6743\u9650\u8fd0\u884c\u547d\u4ee4\u3002</li> <li><code>chgrp</code>\uff1a\u7528\u4e8e\u66f4\u6539\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u6240\u5c5e\u7528\u6237\u7ec4\u3002</li> <li><code>group1</code>\uff1a\u76ee\u6807\u7528\u6237\u7ec4\u7684\u540d\u79f0\u3002</li> <li><code>/hdd</code>\uff1a\u8981\u66f4\u6539\u6240\u5c5e\u7528\u6237\u7ec4\u7684\u76ee\u5f55\u8def\u5f84\u3002</li> </ul> <p>\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 <code>chmod</code> \u547d\u4ee4\u8bbe\u7f6e\u7528\u6237\u7ec4\u7684\u6743\u9650\uff1a</p> <ul> <li><code>g+rwx</code>\uff1a\u8868\u793a\u4e3a\u7528\u6237\u7ec4\u6dfb\u52a0\u8bfb\u53d6\u3001\u5199\u5165\u548c\u6267\u884c\u6743\u9650\u3002</li> </ul> <p>\u8fd0\u884c\u4ee5\u4e0a\u547d\u4ee4\u540e\uff0c\u76ee\u5f55 <code>/hdd</code> \u5c06\u88ab\u8bbe\u7f6e\u4e3a\u7528\u6237\u7ec4 <code>group1</code> \u6240\u62e5\u6709\uff0c\u5e76\u5177\u6709\u8bfb\u53d6\u3001\u5199\u5165\u548c\u6267\u884c\u6743\u9650\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c\u9700\u8981\u4ee5\u7ba1\u7406\u5458\u6743\u9650\u8fd0\u884c\u547d\u4ee4\uff08\u4f7f\u7528 <code>sudo</code>\uff09\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u56e0\u6743\u9650\u4e0d\u8db3\u800c\u65e0\u6cd5\u6267\u884c\u64cd\u4f5c\u3002</p>"},{"location":"linux/environment/ubuntu%E5%AE%89%E8%A3%85nvidia-docker/","title":"nvidia-docker\u5b89\u88c5","text":""},{"location":"linux/environment/ubuntu%E5%AE%89%E8%A3%85nvidia-docker/#nvidia-docker","title":"\u5b89\u88c5Nvidia-Docker","text":"<p>Docker\u4e5f\u662f\u865a\u62df\u5316\u73af\u5883\u7684\u795e\u5668\uff0c\u524d\u9762\u8bf4\u7684conda\u867d\u7136\u53ef\u4ee5\u63d0\u4f9bpython\u7684\u865a\u62df\u73af\u5883\u5e76\u65b9\u4fbf\u5730\u5207\u6362\uff0c\u4f46\u662f\u6709\u7684\u65f6\u5019\u6211\u4eec\u7684\u5f00\u53d1\u73af\u5883\u5e76\u4e0d\u53ea\u662f\u7528\u5230python\uff0c\u6bd4\u5982\u6709\u7684native\u5e93\u9700\u8981\u5bf9\u5e94gcc\u7248\u672c\u7684\u7f16\u8bd1\u73af\u5883\uff0c\u6216\u8005\u8fdb\u884c\u4ea4\u53c9\u7f16\u8bd1\u65f6\u54df\u554a\u5b89\u88c5\u5f88\u591a\u5de5\u5177\u94fe\u7b49\u7b49\u3002\u5982\u679c\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u5728\u670d\u52a1\u5668\u672c\u5730\u4e0a\u8fdb\u884c\uff0c\u90a3\u65f6\u95f4\u4e45\u4e86\u5c31\u4f1a\u8ba9\u670d\u52a1\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u975e\u5e38\u6742\u4e71\uff0c\u800c\u4e14\u8fd8\u4f1a\u9047\u5230\u5404\u79cd\u8f6f\u4ef6\u7248\u672c\u51b2\u7a81\u95ee\u9898\u3002</p> <p>Docker\u5c31\u53ef\u4ee5\u5f88\u597d\u5730\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u5b83\u5176\u5b9e\u53ef\u4ee5\u7406\u89e3\u4e3a\u5c31\u662f\u4e00\u4e2a\u975e\u5e38\u8f7b\u91cf\u5316\u7684\u865a\u62df\u673a\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5bbf\u4e3b\u670d\u52a1\u5668\u4e0a\u65b0\u5efa\u5f88\u591a\u4e2a\u8fd9\u79cd\u88ab\u79f0\u4e3a<code>\u5bb9\u5668</code>\u7684\u865a\u62df\u673a\uff0c\u7136\u540e\u5728\u91cc\u9762\u914d\u7f6e\u6211\u4eec\u7684\u5f00\u53d1\u73af\u5883\uff0c\u4e14\u8fd9\u4e9b\u914d\u7f6e\u597d\u7684\u73af\u5883\u662f\u53ef\u4ee5\u6253\u5305\u6210<code>\u955c\u50cf</code>\u7684\uff0c\u65b9\u4fbf\u968f\u65f6\u505a\u5206\u4eab\u548c\u91cd\u7528\uff1b\u4e0d\u9700\u8981\u7684\u65f6\u5019\uff0c\u6211\u4eec\u76f4\u63a5\u5220\u9664\u5bb9\u5668\u5c31\u597d\u4e86\uff0c\u5176\u8d44\u6e90\u662f\u548c\u6211\u4eec\u7684\u670d\u52a1\u5668\u5bbf\u4e3b\u673a\u5b8c\u5168\u9694\u79bb\u7684\u3002</p> <p>Docker\u7684\u5177\u4f53\u4f7f\u7528\u53ef\u4ee5\u81ea\u5df1\u641c\u7d22\u4e00\u4e0b\u5f88\u591a\u6559\u7a0b\uff0c\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u5982\u4f55\u628aGPU\u66b4\u9732\u7ed9Docker\u7684\u5bb9\u5668\uff08\u56e0\u4e3a\u5927\u5bb6\u90fd\u77e5\u9053\u50cf\u662fVMware\u8fd9\u79cd\u865a\u62df\u673a\u91cc\u9762\u90fd\u662f\u65e0\u6cd5\u5171\u4eab\u5bbf\u4e3b\u673a\u7684GPU\u7684\uff09\uff0c\u662f\u901a\u8fc7<code>nvidia-docker</code>\u5b9e\u73b0\u7684\u3002</p> <p>\u4ee5\u524d\u4e3a\u4e86\u914d\u7f6envidia-docker\uff0c\u9700\u8981\u5b89\u88c5\u5b8cdocker\u4e4b\u540e\u518d\u5b89\u88c5\u5355\u72ec\u7684nvidia docker2\uff0c\u800c\u73b0\u5728\u53ea\u9700\u8981\u5b89\u88c5nvidia container toolkit\u5373\u53ef\uff0c\u66f4\u52a0\u65b9\u4fbf\u4e86\u3002</p> <ol> <li>docker\u5b89\u88c5 \u5b98\u7f51\u4e0a\u6709\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff1aInstall Docker Engine on Ubuntudocs.docker.com \u6216\u8005\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u5b89\u88c5\uff1a</li> </ol> Bash<pre><code>sudo apt-get update\nsudo apt-get install docker.io\nsystemctl start docker\nsystemctl enable docker\n</code></pre> <p>\u53ef\u4ee5\u8fd0\u884c\u8fd9\u6761\u547d\u4ee4\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u6210\u529f\uff1a</p> Bash<pre><code>docker version\n</code></pre> <ol> <li>\u5b89\u88c5NVIDIA Container Toolkit</li> </ol> <p>\u5b98\u7f51\u5b89\u88c5\u6b65\u9aa4\uff1aNVIDIA/nvidia-docker: Build and run Docker containers leveraging NVIDIA GPUs (github.com) \u6216\u8005\u76f4\u63a5\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff1a</p> Bash<pre><code> ##\u9996\u5148\u8981\u786e\u4fdd\u5df2\u7ecf\u5b89\u88c5\u4e86nvidia driver\n # 2. \u6dfb\u52a0\u6e90\n distribution=$(. /etc/os-release;echo $ID$VERSION_ID)\n curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -\n curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list\n\n # 2. \u5b89\u88c5\u5e76\u91cd\u542f\n sudo apt-get update &amp;&amp; sudo apt-get install -y nvidia-container-toolkit\n sudo systemctl restart docker\n</code></pre> <p>\u5b89\u88c5\u5b8c\u6210\u540e\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\u6d4b\u8bd5\u4e00\u4e0b\uff1a</p> Bash<pre><code>sudo docker run -it --rm --name test_nvidia_docker --gpus all nvidia/cuda:11.0.3-base-ubuntu20.04 nvidia-smi\n</code></pre> <p>\u5176\u4e2d\u6700\u540e\u7684\u53c2\u6570<code>nvidia/cuda:11.1-base</code> \u662fNvidia\u5b98\u65b9\u7684\u955c\u50cf\uff0c\u9700\u8981\u6839\u636e\u5de5\u4f5c\u7ad9\u4e3b\u673a\u4e2d\u5b9e\u9645\u5b89\u88c5\u7684cuda\u7248\u672c\u8fdb\u884c\u4fee\u6539\uff0c\u7248\u672c\u53ef\u4ee5\u7528<code>nvcc -V</code>\u67e5\u770b\u3002</p> <p>\u8fdb\u5165\u5bb9\u5668\u4e4b\u540e\u53ef\u4ee5\u8dd1\u4e00\u4e0b<code>nvidia-smi</code>\u547d\u4ee4</p> <p></p>"},{"location":"linux/environment/%E5%AE%89%E8%A3%85CUDA/","title":"CUDA\u5b89\u88c5","text":""},{"location":"linux/environment/%E5%AE%89%E8%A3%85CUDA/#cuda","title":"\u5b89\u88c5CUDA","text":"<p>CUDA\u4e0b\u8f7d</p> Bash<pre><code>wget https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda_11.8.0_520.61.05_linux.run\nsudo sh cuda_11.8.0_520.61.05_linux.run\n</code></pre> <p>cuda\u5b89\u88c5\u540e\u65e5\u5fd7\u8f93\u51fa</p> Text Only<pre><code>===========\n= Summary =\n===========\n\nDriver:   Not Selected\nToolkit:  Installed in /usr/local/cuda-11.8/\n\nPlease make sure that\n -   PATH includes /usr/local/cuda-11.8/bin\n -   LD_LIBRARY_PATH includes /usr/local/cuda-11.8/lib64, or, add /usr/local/cuda-11.8/lib64 to /etc/ld.so.conf and run ldconfig as root\n\nTo uninstall the CUDA Toolkit, run cuda-uninstaller in /usr/local/cuda-11.8/bin\n***WARNING: Incomplete installation! This installation did not install the CUDA Driver. A driver of version at least 520.00 is required for CUDA 11.8 functionality to work.\nTo install the driver using this installer, run the following command, replacing &lt;CudaInstaller&gt; with the name of this run file:\n    sudo &lt;CudaInstaller&gt;.run --silent --driver\n\nLogfile is /var/log/cuda-installer.log\n</code></pre>"},{"location":"linux/environment/%E5%AE%89%E8%A3%85CUDA/#cudnn","title":"\u5b89\u88c5CuDNN","text":"<p>\u8fdb\u5165\u5230CUDNN\u7684\u4e0b\u8f7d\u5b98\u7f51\uff1acuDNN Download | NVIDIA Developer\uff0c\u7136\u70b9\u51fbDownload\u5f00\u59cb\u9009\u62e9\u4e0b\u8f7d\u7248\u672c\uff0c\u5f53\u7136\u5728\u4e0b\u8f7d\u4e4b\u524d\u8fd8\u6709\u767b\u5f55\uff0c\u9009\u62e9\u7248\u672c\u754c\u9762\u5982\u4e0b\uff1a</p> <p></p> <p>\u6211\u4eec\u9009\u62e9\u548c\u4e4b\u524dcuda\u7248\u672c\u5bf9\u5e94\u7684cudnn\u7248\u672c\uff1a</p> <p></p> <p>\u4e0b\u8f7d\u4e4b\u540e\u662f\u4e00\u4e2a\u538b\u7f29\u5305\uff0c\u5bf9\u5b83\u8fdb\u884c\u89e3\u538b\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a</p> Text Only<pre><code> tar -xzvf cudnn-11.0-linux-x64-v8.0.5.39.tgz\n</code></pre> <p>\u4f7f\u7528\u4ee5\u4e0b\u4e24\u6761\u547d\u4ee4\u590d\u5236\u8fd9\u4e9b\u6587\u4ef6\u5230CUDA\u76ee\u5f55\u4e0b\uff1a</p> Text Only<pre><code>sudo cp lib/* /usr/local/cuda-11.8/lib64/\nsudo cp include/* /usr/local/cuda-11.8/include/\n</code></pre> <p>\u62f7\u8d1d\u5b8c\u6210\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770bCUDNN\u7684\u7248\u672c\u4fe1\u606f\uff1a</p> Text Only<pre><code>cat /usr/local/cuda/include/cudnn_version.h | grep CUDNN_MAJOR -A 2\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u7248\u672c\u4fe1\u606f\u5982\u4e0b\uff0c\u4e3a<code>8.0.5</code>\uff1a</p> <p></p>"},{"location":"linux/network/frp%E6%90%AD%E5%BB%BA/","title":"FRP\u642d\u5efa","text":"<p>frp \u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684\u53cd\u5411\u4ee3\u7406\u5e94\u7528\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u8f7b\u677e\u5730\u8fdb\u884c\u5185\u7f51\u7a7f\u900f</p> <p>frp \u91c7\u7528 C/S \u6a21\u5f0f\uff0c\u5c06\u670d\u52a1\u7aef\u90e8\u7f72\u5728\u5177\u6709\u516c\u7f51 IP \u673a\u5668\u4e0a\uff0c\u5ba2\u6237\u7aef\u90e8\u7f72\u5728\u5185\u7f51\u6216\u9632\u706b\u5899\u5185\u7684\u673a\u5668\u4e0a\uff0c\u901a\u8fc7\u8bbf\u95ee\u66b4\u9732\u5728\u670d\u52a1\u5668\u4e0a\u7684\u7aef\u53e3\uff0c\u53cd\u5411\u4ee3\u7406\u5230\u5904\u4e8e\u5185\u7f51\u7684\u670d\u52a1\u3002 </p>"},{"location":"linux/network/frp%E6%90%AD%E5%BB%BA/#frp_1","title":"\u4e00\u3001\u4e0b\u8f7dfrp","text":"<p>frp\u4e0b\u8f7d\u5730\u5740</p> Bash<pre><code>wget https://github.com/fatedier/frp/releases/download/v0.57.0/frp_0.57.0_linux_amd64.tar.gz\n</code></pre>"},{"location":"linux/network/frp%E6%90%AD%E5%BB%BA/#frp_2","title":"\u4e8c\u3001\u89e3\u538bfrp\u81f3\u670d\u52a1\u7aef","text":"Bash<pre><code>tar -zxvf frp_0.57.0_linux_amd64.tar.gz &amp;&amp; mv frp_0.57.0_linux_amd64 frp &amp;&amp; cd frp\n</code></pre>"},{"location":"linux/network/frp%E6%90%AD%E5%BB%BA/#frp_3","title":"\u4e09\u3001\u914d\u7f6efrp\u670d\u52a1\u7aef","text":"<p>\u4fee\u6539frps.ini\u914d\u7f6e\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a</p> Bash<pre><code>[common]\nbind_port = 7000 # frp\u670d\u52a1\u7684\u7aef\u53e3\u53f7\uff0c\u53ef\u4ee5\u81ea\u5df1\u5b9a\ndashboard_port = 7500 # frp\u7684web\u754c\u9762\u7684\u7aef\u53e3\u53f7\ndashboard_user = user # web\u754c\u9762\u7684\u767b\u9646\u8d26\u6237\uff0c\u81ea\u5df1\u4fee\u6539\ndashboard_pwd = pass # web\u754c\u9762\u7684\u767b\u9646\u5bc6\u7801\uff0c\u81ea\u5df1\u4fee\u6539\nauthentication_method = token\ntoken = xxxxx # frp\u5ba2\u6237\u7aef\u8fde\u63a5\u65f6\u7684\u5bc6\u7801\uff0c\u81ea\u5df1\u4fee\u6539\n# console or real logFile path like ./frps.log\nlog_file=/usr/local/bin/frp/logs/frps.log\n# trace, debug, info, warn, error\nlog_level = info\nlog_max_days = 3\n# disable log colors when log_file is console, default is false\ndisable_log_color = false\n</code></pre> <p>\u5728\u6d4f\u89c8\u5668\u8f93\u5165 <code>[\u4e91\u670d\u52a1\u5668\u7684\u516c\u7f51ip]:7500</code> \u5373\u53ef\u8bbf\u95ee\u5230 frp\u7684web\u7ba1\u7406\u754c\u9762\u3002</p> <p>\u6ce8\u610f\uff0c\u53ef\u80fd\u9700\u8981\u53bb\u4e91\u670d\u52a1\u5668\u63a7\u5236\u53f0\u914d\u7f6e\u5b89\u5168\u7ec4\u89c4\u5219 \u5f00\u653e\u4ee5\u4e0a\u6d89\u53ca\u5230\u7684\u7aef\u53e3\uff0c\u5426\u5219\u65e0\u6cd5\u8bbf\u95ee\u3002</p>"},{"location":"linux/network/frp%E6%90%AD%E5%BB%BA/#frp_4","title":"\u56db\u3001\u6dfb\u52a0frp\u670d\u52a1\u7aef\u4e3a\u7cfb\u7edf\u670d\u52a1\u5f00\u673a\u81ea\u542f","text":"<p>\u6dfb\u52a0\u5f00\u673a\u81ea\u52a8\u542f\u52a8\u7684\u811a\u672c\uff0c\u5728/etc/systemd/system/\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2afrps.service\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a</p> <p>\u5b8c\u6574\u8def\u5f84<code>/etc/systemd/system/frps.service</code></p> Bash<pre><code>[Fusion]\nDescription=Frp Server Daemon\nAfter=syslog.target network.target\nWants=network.target\n\n[Service]\nType=simple\nExecStart=/root/frp/frps -c /root/frp/frps.ini # \u4fee\u6539\u4e3a\u4f60\u7684frp\u5b9e\u9645\u5b89\u88c5\u76ee\u5f55\nExecStop=/usr/bin/killall frps\n#\u542f\u52a8\u5931\u8d251\u5206\u949f\u540e\u518d\u6b21\u542f\u52a8\nRestartSec=1min\nKillMode=control-group\n#\u91cd\u542f\u63a7\u5236\uff1a\u603b\u662f\u91cd\u542f\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>\u7136\u540e\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u542f\u7528\u811a\u672c\uff1a</p> Bash<pre><code>sudo systemctl enable frps.service\nsudo systemctl start frps.service\n</code></pre> <p>\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b\u670d\u52a1\u72b6\u6001\uff0c\u5982\u679c\u662frunning\u7684\u8bdd\u5c31\u8bf4\u660e\u53ef\u4ee5\u4e86\uff1a</p> Bash<pre><code>sudo systemctl status frps.service\n</code></pre> <p></p>"},{"location":"linux/network/frp%E6%90%AD%E5%BB%BA/#frp_5","title":"\u4e94\u3001\u89e3\u538bfrp\u81f3\u5ba2\u6237\u7aef","text":"Bash<pre><code>tar -zxvf frp_0.57.0_linux_amd64.tar.gz &amp;&amp; mv frp_0.57.0_linux_amd64 frp &amp;&amp; cd frp\n</code></pre>"},{"location":"linux/network/frp%E6%90%AD%E5%BB%BA/#frp_6","title":"\u516d\u3001\u914d\u7f6efrp\u5ba2\u6237\u7aef","text":"<p>\u4fee\u6539frpc.ini\u914d\u7f6e\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a</p> Bash<pre><code>[common]\nserver_addr=xx.xx.xx.xx # \u4f60\u7684\u4e91\u670d\u52a1\u5668\u7684\u516c\u7f51ip\nserver_port=7000\ntoken=xxx\nlog_file=/data/nfsroot/frp/frpc.log\n# ssh\n[home_server_ssh]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 22\nremote_port = 20022\n# rdp\n[home_server_rdp]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 3389\nremote_port = 23389\n\n#\u8fd9\u6b65\u53ef\u9009\u5f00\u901aweb\u7aef\n[home_server_web]\ntype=http\nlocal_ip=127.0.0.1\nlocal_port=80\nsubdomain=xx\n</code></pre> <p>\u901a\u8fc7\u4e0a\u9762\u7684\u811a\u672c\u5c31\u53ef\u4ee5\u628a\u5bf9\u4e8e\u4e91\u670d\u52a1\u5668\u7279\u5b9a\u7aef\u53e3\u7684\u8bbf\u95ee\u7ed9\u91cd\u5b9a\u5411\u5230\u672c\u5730\u670d\u52a1\u5668\u7684\u67d0\u4e2a\u7aef\u53e3\u4e86\uff0c\u7b80\u5355\u5730\u8bb2\u5c31\u662f\uff1a\u5047\u5982\u6211\u7528SSH\u5ba2\u6237\u7aef\u8bbf\u95ee <code>[\u4e91\u670d\u52a1\u5668ip]:20022</code>\uff0c\u5c31\u53ef\u4ee5\u7ecf\u8fc7\u53cd\u5411\u4ee3\u7406\u76f4\u63a5\u8bbf\u95ee\u5230<code>[\u672c\u5730\u7684\u8bad\u7ec3\u670d\u52a1\u5668ip]:22</code>\uff1b\u540c\u7406\u9700\u8981\u8fde\u63a5\u8fdc\u7a0b\u684c\u9762\u7684\u8bdd\uff0c\u53ea\u9700\u8981\u8bbf\u95ee<code>[\u4e91\u670d\u52a1\u5668ip]:23389</code>\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"linux/network/frp%E6%90%AD%E5%BB%BA/#frp_7","title":"\u4e03\u3001\u6dfb\u52a0frp\u5ba2\u6237\u7aef\u4e3a\u7cfb\u7edf\u670d\u52a1\u5f00\u673a\u81ea\u542f","text":"<p>\u6309\u7167\u4e0a\u56db\u63cf\u8ff0\u6dfb\u52a0\u5f00\u673a\u81ea\u52a8\u542f\u52a8\u7684\u811a\u672c\uff0c\u5728/etc/systemd/system/\u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2afrpc.service\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a</p> <p>\u5b8c\u6574\u8def\u5f84<code>/etc/systemd/system/frpc.service</code></p> Bash<pre><code>[Fusion]\nDescription=Frpc Server Daemon\nAfter=syslog.target network.target\nWants=network.target\n\n[Service]\nType=simple\nExecStart=/usr/local/bin/frp/frpc -c /usr/local/bin/frp/frpc.ini # \u4fee\u6539\u4e3a\u4f60\u7684frp\u5b9e\u9645\u5b89\u88c5\u76ee\u5f55\nExecStop=/usr/bin/killall frpc\n#\u542f\u52a8\u5931\u8d251\u5206\u949f\u540e\u518d\u6b21\u542f\u52a8\nRestartSec=1min\nKillMode=control-group\n#\u91cd\u542f\u63a7\u5236\uff1a\u603b\u662f\u91cd\u542f\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>\u7136\u540e\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u542f\u7528\u811a\u672c\uff1a</p> Bash<pre><code>sudo systemctl enable frpc.service\nsudo systemctl start frpc.service\n</code></pre> <p>\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b\u670d\u52a1\u72b6\u6001\uff0c\u5982\u679c\u662frunning\u7684\u8bdd\u5c31\u8bf4\u660e\u53ef\u4ee5\u4e86\uff1a</p> Bash<pre><code>sudo systemctl status frpc.service\n</code></pre> <p>\u8fd9\u91cc\u987a\u4fbf\u63d0\u4e00\u4e0b\uff0c\u6309\u7167\u4e60\u60ef\u4e00\u822c\u628a\u4e0a\u9762\u7684frp\u8f6f\u4ef6\u89e3\u538b\u9632\u6b62\u5728<code>/usr/local/bin</code>\u76ee\u5f55\u4e0b\u3002Linux \u7684\u8f6f\u4ef6\u5b89\u88c5\u76ee\u5f55\u662f\u4e5f\u662f\u6709\u8bb2\u7a76\u7684\uff0c\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u5728\u5bf9\u7cfb\u7edf\u7ba1\u7406\u662f\u6709\u76ca\u7684</p> <ul> <li><code>/usr</code>\uff1a\u7cfb\u7edf\u7ea7\u7684\u76ee\u5f55\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a<code>C:/Windows/</code></li> <li><code>/usr/lib</code>\uff1a\u53ef\u4ee5\u7406\u89e3\u4e3a<code>C:/Windows/System32</code></li> <li><code>/usr/local</code>\uff1a\u7528\u6237\u7ea7\u7684\u7a0b\u5e8f\u76ee\u5f55\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a<code>C:/Progrem Files/</code>\uff0c\u7528\u6237\u81ea\u5df1\u7f16\u8bd1\u7684\u8f6f\u4ef6\u9ed8\u8ba4\u4f1a\u5b89\u88c5\u5230\u8fd9\u4e2a\u76ee\u5f55\u4e0b</li> <li><code>/opt</code>\uff1a\u7528\u6237\u7ea7\u7684\u7a0b\u5e8f\u76ee\u5f55\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a<code>D:/Software</code>\uff0copt\u6709\u53ef\u9009\u7684\u610f\u601d\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7528\u4e8e\u653e\u7f6e\u7b2c\u4e09\u65b9\u5927\u578b\u8f6f\u4ef6\uff08\u6216\u6e38\u620f\uff09\uff0c\u5f53\u4f60\u4e0d\u9700\u8981\u65f6\uff0c\u76f4\u63a5<code>rm -rf</code>\u6389\u5373\u53ef\u3002\u5728\u786c\u76d8\u5bb9\u91cf\u4e0d\u591f\u65f6\uff0c\u4e5f\u53ef\u5c06<code>/opt</code>\u5355\u72ec\u6302\u8f7d\u5230\u5176\u4ed6\u78c1\u76d8\u4e0a\u4f7f\u7528</li> </ul> <p>\u6e90\u7801\u653e\u54ea\u91cc\uff1f</p> <ul> <li><code>/usr/src</code>\uff1a\u7cfb\u7edf\u7ea7\u7684\u6e90\u7801\u76ee\u5f55</li> <li><code>/usr/local/src</code>\uff1a\u7528\u6237\u7ea7\u7684\u6e90\u7801\u76ee\u5f55\u3002</li> </ul>"},{"location":"linux/%E9%85%8D%E7%BD%AEftp%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%B0%86ubuntu%E8%AE%BE%E7%BD%AE%E4%B8%BANAS%E2%80%94%E2%80%9416.qBittorrent%20server%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD/","title":"\u5c06ubuntu\u8bbe\u7f6e\u4e3aNAS\u2014\u201416.qBittorrent server\u5b89\u88c5\u4e0e\u5378\u8f7d","text":"<p>2021-11-07 11:18:11 8\u70b9\u8d5e 47\u6536\u85cf 11\u8bc4\u8bba</p> <p>\u521b\u4f5c\u7acb\u573a\u58f0\u660e\uff1a\u672c\u4eba\u5c0f\u767d\uff0c\u53ea\u662f\u60f3\u901a\u8fc7\u672c\u5e73\u53f0\u8bb0\u5f55\u4e00\u4e9b\u6298\u817e\u4ee5Ubuntu\u7cfb\u7edf\u4e3a\u4e3b\u7684NAS\u8fc7\u7a0b\uff0c\u540c\u65f6\u65b9\u4fbf\u81ea\u5df1\u67e5\u9605\uff0c\u8fd8\u80fd\u8d5a\u70b9\u91d1\u5e01\uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u8fd9\u4e2a\u5c0f\u7cfb\u5217\u3002</p>"},{"location":"linux/%E9%85%8D%E7%BD%AEftp%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%B0%86ubuntu%E8%AE%BE%E7%BD%AE%E4%B8%BANAS%E2%80%94%E2%80%9416.qBittorrent%20server%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD/#_1","title":"\u524d\u8a00","text":"<p>\u524d\u9762\u5b89\u88c5\u4e86Transmission-daemon\uff0c\u8be6\u89c1\u5c06\u300aubuntu\u8bbe\u7f6e\u4e3aNAS\u2014\u20141. Transmission-daemon\u5b89\u88c5\u300b\uff0c\u5728\u7528\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u4e2a\u4eba\u611f\u89c9Transmission\u4e0b\u8f7d\u901f\u5ea6\u5e76\u4e0d\u7b97\u7a33\u5b9a\uff0c\u6700\u9ebb\u70e6\u7684\u662f\u4e0d\u6b63\u5e38\u91cd\u542f\u7535\u8111\u540e\uff0c\u6709\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u6821\u9a8c\u79cd\u5b50\uff0c\u6821\u9a8c\u65f6\u95f4\u6bd4\u8f83\u4e45\uff0c\u800c\u4e14\u6709\u65f6\u5019\u4f1a\u83ab\u540d\u5176\u5999\u51fa\u73b0\u8b66\u544a\u6216\u7ea2\u79cd\uff0c\u600e\u4e48\u6392\u67e5\u4e5f\u89e3\u51b3\u4e0d\u4e86\uff0c\u4e8e\u662f\u5c31\u60f3\u627e\u627e\u662f\u5426\u8fd8\u6709\u66f4\u5408\u9002\u7684\u670d\u52a1\u5668\u4e0b\u8f7dBT\u8f6f\u4ef6\u3002\u7136\u540e\u5c31\u53d1\u73b0\u4e86qBittorrent server\uff0c\u4e8e\u662f\u5c31\u53c8\u5f00\u59cb\u6298\u817e\u4e86\uff08\u53c8\u53ef\u4ee5\u6c34\u4e86\uff09\u3002\u4f46\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u4f7f\u7528\uff0c\u6211\u8fd8\u662f\u9047\u5230\u4e86\u5751\uff0c\u7531\u4e8e\u79cd\u5b50\u6570\u91cf\u589e\u52a0\uff0cqBittorrent\u5185\u5b58\u5360\u7528\u95ee\u9898\u8d8a\u6765\u8d8a\u4e25\u91cd\uff0c\u5bfc\u81f4\u6211\u670d\u52a1\u5668\u8fd0\u884c\u4e0d\u7a33\u5b9a\uff0c\u6700\u540e\u8fd8\u662f\u88ab\u6211\u5378\u8f7d\u3002</p>"},{"location":"linux/%E9%85%8D%E7%BD%AEftp%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%B0%86ubuntu%E8%AE%BE%E7%BD%AE%E4%B8%BANAS%E2%80%94%E2%80%9416.qBittorrent%20server%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD/#1","title":"1\u3001\u6b63\u5e38\u5b89\u88c5","text":"<p>1.1\u3001\u547d\u4ee4\u884c\u5b89\u88c5</p> <p>\u5728Ubuntu\u4e0b\u5b89\u88c5\u53ef\u4ee5\u76f4\u63a5\u9009\u62e9\u547d\u4ee4\u884c\u65b9\u5f0f\u5b89\u88c5</p> <p>sudo apt install qbittorrent-nox</p> <p>\u5b89\u88c5qbittorrent-nox</p> <p>\u9ed8\u8ba4\u7aef\u53e3\u662f8080\uff0c\u6211\u4fee\u6539\u4e3a8181\u540e\uff0c\u6309\u7167\u4e0b\u9762\u547d\u4ee4\u76f4\u63a5\u542f\u52a8webui\u754c\u9762</p> <p>qbittorrent-nox --webui-port=8181</p> <p>\u6cd5\u5f8b\u58f0\u660e\uff0c\u786e\u5b9a\u6309y</p> <p>\u6cd5\u5f8b\u58f0\u660e\uff0c\u786e\u5b9a\u6309y</p> <p>web-ui\u9ed8\u8ba4\u8d26\u53f7\u5bc6\u7801</p> <p>\u8bb0\u4f4f\u9ed8\u8ba4\u8d26\u53f7\uff1aadmin\uff0c\u9ed8\u8ba4\u5bc6\u7801\uff1aadminadmin\uff0c\u548c\u7aef\u53e3\u53f7\uff0c\u5728PC\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u670d\u52a1\u5668\u5730\u5740+\u7aef\u53e3\u53f7\u767b\u5f55</p> <p>web\u767b\u5f55\u754c\u9762</p> <p>\u6b63\u5e38\u4f7f\u7528web\u754c\u9762</p> <p>1.2\u3001\u7248\u672c\u66f4\u65b0</p> <p>\u7a81\u7136\u53d1\u73b0\u4e0d\u662f\u6700\u65b0\u7248\uff08\u540e\u6765\u53d1\u73b0\u8fd9\u4e00\u7248\u662f\u5404\u5927PT\u7ad9\u70b9\u63a8\u8350\u7684\u7248\u672c\uff0c\u4e5f\u7b97\u662f\u6700\u7a33\u5b9a\u7684\u7248\u672c\uff09</p> <p>4.1.7\u7248\u672c</p> <p>\u5e94\u8be5\u662fUbuntu\u4e2d\u9ed8\u8ba4apt\u91cc\u7684\u6e90\u4e0d\u662f\u6700\u65b0</p> <p>\u6309\u7167\u5b98\u65b9\u6559\u7a0b\uff0c\u6dfb\u52a0\u66f4\u65b0\u6e90\uff0c\u518d\u8fdb\u884c\u8f6f\u4ef6\u5347\u7ea7\u5c31\u53ef\u4ee5\u4e86\uff0c\u622a\u56fe\u662f4.3.0.1\u7248\uff0c\u4f46\u6700\u65b0\u5df2\u7ecf\u662f4.3.9</p> <p>sudo add-apt-repository ppa:qbittorrent-team/qbittorrent-stable sudo apt update sudo apt upgrade</p> <p>\u66f4\u65b0\u540e4.3.0.1</p>"},{"location":"linux/%E9%85%8D%E7%BD%AEftp%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%B0%86ubuntu%E8%AE%BE%E7%BD%AE%E4%B8%BANAS%E2%80%94%E2%80%9416.qBittorrent%20server%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD/#2","title":"2\u3001\u8bbe\u7f6e\u5f00\u673a\u542f\u52a8","text":"<p>2.1 \u8fd9\u91cc\u901a\u8fc7\u521b\u5efa\u81ea\u5b9a\u4e49\u5f00\u673a\u670d\u52a1\u5b9e\u73b0\uff0c\u5148\u521b\u5efa\u7cfb\u7edf\u670d\u52a1</p> <p>sudo nano /etc/systemd/system/qbittorrent-nox.service</p> <p>\u7c98\u8d34\u4ee5\u4e0b\u5185\u5bb9\uff0c\u4fdd\u5b58ctr+o\uff0cctr+x\u9000\u51fa</p> <p>[Unit] Description=qBittorrent-nox After=network.target</p> <p>[Service] User=root Type=simple RemainAfterExit=yes ExecStart=/usr/bin/qbittorrent-nox --webui-port=8181 -d</p> <p>[Install] WantedBy=multi-user.target</p> <p>\u7f51\u4e0a\u5f88\u591a\u6559\u7a0b\u7684qbittorrent-nox.service \u7684\u914d\u7f6e\u6709\u95ee\u9898\uff0c\u8bbe\u7f6eType=forking \u53ef\u80fd\u5bfc\u81f4\u7528\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e shell \u4f1a\u5361\u4f4f\uff0c\u65e0\u6cd5\u6b63\u5e38\u5f00\u673a\u542f\u52a8\uff0c\u5efa\u8bae\u5728ubuntu server 20 \u4e0a\u9762\uff0c\u5c06Type=forking \u7684\u914d\u7f6e\uff0c\u6539\u6210 Type=simple \u3002</p> <p>\u6ce8\u610f\u5185\u5bb9\u6211\u6dfb\u52a0\u4e86\u81ea\u5b9a\u4e49\u7aef\u53e3\u53f78181\uff0c\u5982\u679c\u4e0d\u9700\u8981\u6307\u5b9a\u7aef\u53e3\u53f7\uff0c\u5c06\u914d\u7f6e\u4e2d\u7684ExecStart=/usr/bin/qbittorrent-nox --webui-port=8181 -d\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3aExecStart=/usr/bin/qbittorrent-nox -d\uff0c\u9ed8\u8ba4\u7aef\u53e3\u53f7\u4e3a8080.</p> <p>2.2 \u542f\u52a8qbittorrent-nox\u5e76\u521b\u5efa\u670d\u52a1\u914d\u7f6e</p> <p>sudo systemctl daemon-reload # \u91cd\u65b0\u52a0\u8f7dsystemd\u5b88\u62a4\u7a0b\u5e8f systemctl enable qbittorrent-nox # \u4f7fqbittorrent-nox.service\u751f\u6548 systemctl start qbittorrent-nox # \u542f\u52a8qbittorrent-nox</p> <p>2.3 qbittorrent-nox\u63a7\u5236\u547d\u4ee4</p> <p>systemctl start qbittorrent-nox # \u542f\u52a8qbittorrent-nox systemctl restart qbittorrent-nox # \u91cd\u542fqbittorrent-nox systemctl stop qbittorrent-nox # \u505c\u6b62qbittorrent-nox systemctl status qbittorrent-nox # \u67e5\u770bqbittorrent-nox\u72b6\u6001</p>"},{"location":"linux/%E9%85%8D%E7%BD%AEftp%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%B0%86ubuntu%E8%AE%BE%E7%BD%AE%E4%B8%BANAS%E2%80%94%E2%80%9416.qBittorrent%20server%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD/#3qbittorrent-nox","title":"3\u3001\u5378\u8f7dqbittorrent-nox","text":"<p>\u5982\u679c\u4f60\u89c9\u5f97qbittorrent\u4e0d\u80fd\u6ee1\u8db3\u81ea\u5df1\u7684\u9700\u6c42\uff0c\u6216\u8005\u6ca1\u6709\u8fbe\u5230\u9884\u671f\uff0c\u60f3\u8981\u5220\u9664bittorrent\u5ba2\u6237\u7aef\uff0c\u53ef\u4ee5\u4f7f\u7528\u7cfb\u7edf\u5305\u7ba1\u7406\u5668\u6216\u8fd0\u884c\u547d\u4ee4\uff1a</p> <p>sudo apt remove qbittorrent-nox</p> <p>\u5982\u679c\u9700\u8981\u5378\u8f7dqbittorrent\u548c\u5b83\u7684\u5404\u79cd\u4f9d\u8d56\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4</p> <p>sudo apt -y autoremove qbittorrent-nox</p> <p>\u5982\u679c\u9700\u8981\u5378\u8f7dqbittorrent\u548c\u5b83\u8bbe\u7f6e\u548c\u6570\u636e\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4</p> <p>sudo apt-get -y purge qbittorrent-nox</p> <p>\u5982\u679c\u9700\u8981\u5378\u8f7dqbittorrent\u3001\u5b83\u8bbe\u7f6e\u548c\u6570\u636e\u6587\u4ef6\u4ee5\u53ca\u5404\u79cd\u4f9d\u8d56\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4</p> <p>sudo apt-get -y autoremove --purge qbittorrent-nox</p>"},{"location":"linux/%E9%85%8D%E7%BD%AEftp%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/%E5%B0%86ubuntu%E8%AE%BE%E7%BD%AE%E4%B8%BANAS%E2%80%94%E2%80%9416.qBittorrent%20server%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD/#_2","title":"\u603b\u7ed3","text":"<p>qbittorrent-nox\u7684\u5b89\u88c5\u5176\u5b9e\u5f88\u7b80\u5355\uff0cweb-ui\u4f7f\u7528\u4e5f\u5f88\u987a\u624b\uff0c\u53ef\u80fd\u521a\u5f00\u59cb\u4f7f\u7528\u4e0d\u4e00\u5b9a\u901f\u5ea6\u5f88\u5feb\uff0c\u9700\u8981\u6dfb\u52a0 Tracker \u5217\u8868\uff0c\u901f\u5ea6\u5c31\u80fd\u8d77\u6765\u4e86\uff0c\u5f53\u7136\u5982\u679c\u53ea\u662f\u7528\u6765PT\u4e0b\u8f7d\u548c\u62a2\u4e0a\u4f20\u4e00\u822c\u4e5f\u662f\u8db3\u591f\u4e86\u3002</p> <p>\u5728\u4f7f\u7528\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u6211\u53d1\u73b0\u4e86qbittorrent\u5f88\u4e25\u91cd\u7684\u95ee\u9898\uff0c\u968f\u7740\u6211\u4e0b\u5f97\u79cd\u5b50\u8d8a\u6765\u8d8a\u591a\uff0c\u6211\u7684\u670d\u52a1\u5668\u53d8\u5f97\u5f88\u4e0d\u7a33\u5b9a\uff0c\u7ecf\u5e38\u6b7b\u673a\uff0c\u901a\u8fc7\u6392\u67e5\u53d1\u73b0\u662fqbittorrent\u5f97\u95ee\u9898\uff0c\u5b83\u5360\u7528\u4e86\u592a\u591a\u5f97\u5185\u5b58\uff0c\u76f4\u5230Ubuntu\u7cfb\u7edf\u6b7b\u673a\u3002\u4e00\u5f00\u59cb\u6211\u4f7f\u75288G\u5185\u5b58\uff0c\u5fc3\u60f3\u53ef\u80fd\u6211\u670d\u52a1\u5668\u4e0a\u670d\u52a1\u592a\u591a\uff0c\u5185\u5b58\u4e0d\u8db3\uff0c\u5c31\u52a0\u4e86\u4e00\u67618G\u5185\u5b58\uff0c\u7ed3\u679c\u8fd8\u662f\u5168\u88abqbittorrent\u5360\u6389\u4e86\u3002\u65e0\u5948\u6700\u540e\u8fd8\u662f\u653e\u5f03\u4e86qbittorrent\uff0c\u5728\u627e\u5230\u89e3\u51b3\u65b9\u6848\u524d\uff0c\u6682\u65f6\u662f\u4e0d\u6253\u7b97\u7528\u4e86\u3002\u5982\u679c\u5404\u4f4d\u7f51\u53cb\u6709\u597d\u5f97\u89e3\u51b3\u65b9\u6848\uff0c\u4e5f\u8bf7\u4e0d\u541d\u8d50\u6559\u3002</p> <p>version: \"3\" services:  nas-tools:  image: nastool/nas-tools:latest      ports:     - 3000:3000 # \u9ed8\u8ba4\u7684webui\u63a7\u5236\u7aef\u53e3       volumes:         - /home/media/nas-tools/config:/config # \u5192\u53f7\u5de6\u8fb9\u8bf7\u4fee\u6539\u4e3a\u4f60\u60f3\u4fdd\u5b58\u914d\u7f6e\u7684\u8def\u5f84         #- /\u4f60\u7684\u5a92\u4f53\u76ee\u5f55:/\u4f60\u60f3\u8bbe\u7f6e\u7684\u5bb9\u5668\u5185\u80fd\u89c1\u5230\u7684\u76ee\u5f55 # \u5a92\u4f53\u76ee\u5f55\uff0c\u591a\u4e2a\u76ee\u5f55\u9700\u8981\u5206\u522b\u6620\u5c04\u8fdb\u6765\uff0c\u9700\u8981\u6ee1\u8db3\u914d\u7f6e\u6587\u4ef6\u8bf4\u660e\u4e2d\u7684\u8981\u6c42         - /home/media/movies:/data/movies         - /home/media/disk:/data/disk          environment:         - PUID=0 # \u60f3\u5207\u6362\u4e3a\u54ea\u4e2a\u7528\u6237\u6765\u8fd0\u884c\u7a0b\u5e8f\uff0c\u8be5\u7528\u6237\u7684uid         - PGID=0 # \u60f3\u5207\u6362\u4e3a\u54ea\u4e2a\u7528\u6237\u6765\u8fd0\u884c\u7a0b\u5e8f\uff0c\u8be5\u7528\u6237\u7684gid         - UMASK=000 # \u63a9\u7801\u6743\u9650\uff0c\u9ed8\u8ba4000\uff0c\u53ef\u4ee5\u8003\u8651\u8bbe\u7f6e\u4e3a022         - NASTOOL_AUTO_UPDATE=true # \u5982\u9700\u5728\u542f\u52a8\u5bb9\u5668\u65f6\u81ea\u52a8\u5347\u7ea7\u7a0b\u7a0b\u5e8f\u8bf7\u8bbe\u7f6e\u4e3atrue         - REPO_URL=https://ghproxy.com/https://github.com/NAStool/nas-tools.git # \u5f53\u4f60\u8bbf\u95eegithub\u7f51\u7edc\u5f88\u5dee\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u89e3\u91ca\u672c\u884c\u6ce8\u91ca          restart: always           network_mode: bridge           hostname: nas-tools           container_name: nas-tools</p>"},{"location":"linux/%E9%85%8D%E7%BD%AEftp%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/%E9%85%8D%E7%BD%AEftp%E6%9C%8D%E5%8A%A1%E5%99%A8/","title":"\u914d\u7f6eftp\u670d\u52a1\u5668","text":"<p>\u5b9e\u9a8c\u5ba4\u670d\u52a1\u5668\u88c5\u4e86\u53cc\u7cfb\u7edf\uff0c\u4e00\u4e2a\u662fUbuntu\uff0c\u4e00\u4e2a\u662fWindows10\u3002Win10\u662f\u4f5c\u4e3a\u65e5\u5e38\u4f7f\u7528\u7684\u7cfb\u7edf\uff0c\u7528\u6765\u642d\u5efaFTP\u670d\u52a1\u5668\u3002\u4f46\u6700\u8fd1\u591a\u7528\u6765\u8dd1\u8bad\u7ec3\uff0c\u6240\u4ee5FTP\u670d\u52a1\u5668\u5c31\u65e0\u6cd5\u4f7f\u7528\uff0c\u9020\u6210\u5f88\u591a\u4e0d\u4fbf\u3002\u56e0\u6b64\u5e0c\u671b\u5207\u6362\u5230Ubuntu\u4e0b\u4e5f\u8981\u80fd\u4f5c\u4e3aFTP\u670d\u52a1\u5668\u3002\u4e0b\u9762\u5f00\u59cb\u6298\u817e\u3002</p> <p>\u9996\u5148\u5047\u8bbe\u6211\u5728\u7528\u6237A\u4e0b\u9762\uff0c\u5148\u5b89\u88c5\u4e0avsftpd\uff0c</p> <p>sudo apt install vsftpd \u914d\u7f6evsftpd.conf,</p> <p>/etc/vsftpd/vsftpd.conf\uff1a\u914d\u7f6e\u6587\u4ef6 /usr/sbin/vsftpd\uff1aVsftpd\u7684\u4e3b\u7a0b\u5e8f /etc/rc.d/init.d/vsftpd \uff1a\u542f\u52a8\u811a\u672c</p> <p>anonymous_enable=NO # \u7981\u6b62\u533f\u540d\u767b\u9646 local_enable=YES # \u5141\u8bb8\u672c\u5730\u767b\u5f55 write_enable=YES utf8_filesystem=YES allow_writable_chroot=YES local_root=/home/A # A\u767b\u9646\u4e0a\u7684\u76ee\u5f55\uff0c\u6ce8\u610f\u8981\u5728home\u76ee\u5f55\u4e0b \u8fd9\u6837\u914d\u7f6e\u4e4b\u540e\u91cd\u542fvsftpd\u670d\u52a1\uff0c</p> <p>sudo systemctl restart vsftpd.service \u5c31\u53ef\u4ee5\u4f7f\u7528A\u548cA\u7684\u5bc6\u7801\u767b\u9646\u4e0aFTP\u670d\u52a1\u5668\u4e86\uff0c\u8def\u5f84\u5c31\u662f\u521a\u521a\u8bbe\u5b9a\u7684local_path\u3002\u4f46\u662f\u8fd9\u6837\u8bbe\u5b9a\u7684\u6bdb\u75c5\u662f\u767b\u9646\u4e0a\u4e4b\u540e\u767b\u5f55\u7528\u6237\u53d6\u5f97\u4e86\u6574\u4e2a/\u76ee\u5f55\u4e0b\u7684\u6743\u9650\uff0c\u975e\u5e38\u4e0d\u5b89\u5168\u3002\u6240\u4ee5\u6211\u4eec\u63a5\u4e0b\u6765\u518d\u5f80vsftpd.conf\u91cc\u9762\u6dfb\u52a0</p> <p>chroot_local_user=NO chroot_list_enable=YES chroot_list_file=/etc/vsftpd.chroot_list # \u5c06\u767b\u9646\u7528\u6237\u540d\u6dfb\u52a0\u5230\u8fd9\u91cc\u9650\u5b9a\u8bbf\u95ee\u76ee\u5f55</p>"},{"location":"linux/%E9%85%8D%E7%BD%AEftp%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/%E9%85%8D%E7%BD%AEftp%E6%9C%8D%E5%8A%A1%E5%99%A8/#local_roothomea","title":"local_root=/home/A # \u6ce8\u91ca\u6389\u8be5\u53e5","text":"<p>user_config_dir=/etc/vsftpd_user_conf # \u6dfb\u52a0\u8be5\u53e5\u4ee5\u8bbe\u7f6e\u4e0d\u540c\u7528\u6237\u7684\u76ee\u5f55 \u5e76\u521b\u5efavsftpd.chroot_list\u6587\u4ef6\uff0c\u5728\u5176\u4e2d\u6dfb\u52a0\u767b\u9646\u7528\u6237\u540dA\uff0c</p>"},{"location":"linux/%E9%85%8D%E7%BD%AEftp%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/%E9%85%8D%E7%BD%AEftp%E6%9C%8D%E5%8A%A1%E5%99%A8/#etcvsftpdchroot_list","title":"/etc/vsftpd.chroot_list","text":"<p>A \u521b\u5efavsftpd_user_conf\u6587\u4ef6\u5939\uff0c\u91cc\u9762\u521b\u5efaA\u6587\u4ef6\uff0c\u6dfb\u52a0</p>"},{"location":"linux/%E9%85%8D%E7%BD%AEftp%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/%E9%85%8D%E7%BD%AEftp%E6%9C%8D%E5%8A%A1%E5%99%A8/#etcvsftpd_user_confa","title":"/etc/vsftpd_user_conf/A","text":"<p>local_root=/home/A \u8fd9\u6837\u53ef\u4ee5\u5c06A\u7684\u8bbf\u95ee\u76ee\u5f55\u9650\u5236\u5728local_path\u5f53\u4e2d\u3002\u5982\u679c\u9700\u8981\u591a\u4e2a\u8d26\u53f7\u767b\u9646\u53ca\u6307\u5b9a\uff0c\u4f8b\u5982\u53e6\u4e00\u4e2aB\u8d26\u53f7\uff0c\u6307\u5b9a\u5728\u76ee\u5f55/home/B\uff08\u5df2\u521b\u5efa\u597d\u7684home\u4e0b\u7684\u4efb\u610f\u5b50\u6587\u4ef6\u5939\uff09\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528</p> <p>sudo useradd -d /home/B -M -s /usr/sbin/nologin B sudo passwd B \u521b\u5efa\u4e00\u4e2a\u53ea\u5141\u8bb8\u767b\u9646FTP\u7684\u6839\u76ee\u5f55\u5728/home/B\u4e2d\u7684\u8d26\u53f7B\uff0c\u6ce8\u610f\u6b64\u65f6\u8981\u5c06B\u4e5f\u6dfb\u52a0\u5230vsftpd.chroot_list\u6587\u4ef6\u5f53\u4e2d\uff0c\u540c\u65f6\u521b\u5efa/vsftpd_user_conf/B\uff0c\u6dfb\u52a0</p>"},{"location":"linux/%E9%85%8D%E7%BD%AEftp%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/%E9%85%8D%E7%BD%AEftp%E6%9C%8D%E5%8A%A1%E5%99%A8/#etcvsftpd_user_confb","title":"/etc/vsftpd_user_conf/B","text":"<p>local_root=/home/B Windows\u521b\u5efa\u7684NTFS\u5206\u533a\u4e0b\u7684\u76ee\u5f55\u5728\u6302\u8f7d\u5230/media\u6216\u8005/mnt\u4e0b\u65f6\uff0c\u4f5c\u4e3aFTP\u76ee\u5f55\u603b\u4f1a\u62a5</p> <p>\u9519\u8bef\u3002\u7f51\u4e0a\u5f88\u591a\u6559\u7a0b\u662f\u8bf4selinux\u7684\u9519\u8bef\uff0c\u4f46\u662f\u73af\u5883\u4e2dselinux\u5df2\u7ecf\u5173\u95ed\u3002\u56e0\u6b64\u53ea\u80fd\u9009\u62e9\u5c06\u5176\u6302\u8f7d\u5230/home\u76ee\u5f55\u4e0b\uff0c\u56e0\u6b64\u5728/home\u4e0b\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2aftp\u6587\u4ef6\u5939\uff0c\u5176\u4e0b\u6302\u8f7dWindows\u4e0b\u7528\u6765\u5b58\u50a8FTP\u670d\u52a1\u5668\u6570\u636e\u7684\u786c\u76d8\u3002\u5177\u4f53\u64cd\u4f5c\u7c7b\u4f3c\u4e8e</p>"},{"location":"linux/%E9%85%8D%E7%BD%AEftp%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/%E9%85%8D%E7%BD%AEftp%E6%9C%8D%E5%8A%A1%E5%99%A8/#etcfstab","title":"/etc/fstab","text":"<p>/dev/sda2 /home/ftp/ ntfs defaults 0 0 \u5373\u53ef\u3002\u968f\u540e\u518d\u6307\u5b9a\u7528\u6237\u7684\u76ee\u5f55</p> <p>sudo usermod -d /home/ftp/B B</p>"},{"location":"linux/%E9%85%8D%E7%BD%AEftp%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/%E9%85%8D%E7%BD%AEftp%E6%9C%8D%E5%8A%A1%E5%99%A8/#etcvsftpdconf","title":"/etc/vsftpd.conf","text":"<p>local_root = /home/ftp/A \u8fd9\u6837\u5373\u53ef\u8fbe\u5230Windows\u4e0eUbuntu\u516c\u7528\u4e00\u5757\u786c\u76d8\u4f5c\u4e3aFTP\u670d\u52a1\u5668\u7684\u6548\u679c\u3002</p>"},{"location":"llm/LLaMA%E5%AE%9E%E9%AA%8C/","title":"\u4e2d\u6587LLaMA&amp;Alpaca\u5927\u8bed\u8a00\u6a21\u578b\u5b9e\u9a8c","text":"<p>\u6b65\u9aa4</p> <p>llama\u539f\u59cb\u6a21\u578b\u8f6c\u6362\u4e3aTransformers  huggingface\u683c\u5f0f</p> <p>1.lora pt</p> <p>2.lora\u6307\u4ee4\u7cbe\u8c03</p> <p>3.\u6a21\u578b\u5408\u5e76</p> <p>\u5728\u5927\u6a21\u578b\u8bcd\u8868\u6269\u5145\u5fc5\u5907\u5de5\u5177SentencePiece\u4e00\u6587\u4e2d\uff0c\u6211\u4eec\u63d0\u5230\u4e86\u5728\u76ee\u524d\u5f00\u6e90\u5927\u6a21\u578b\u4e2d\uff0cLLaMA\u65e0\u7591\u662f\u6700\u95ea\u4eae\u7684\u661f\u3002\u4f46\u662f\uff0c\u4e0e ChatGLM-6B \u548c Bloom \u539f\u751f\u652f\u6301\u4e2d\u6587\u4e0d\u540c\u3002 LLaMA \u539f\u751f\u4ec5\u652f\u6301 Latin \u6216 Cyrillic \u8bed\u7cfb\uff0c\u5bf9\u4e8e\u4e2d\u6587\u652f\u6301\u4e0d\u662f\u7279\u522b\u7406\u60f3\u3002\u539f\u7248LLaMA\u6a21\u578b\u7684\u8bcd\u8868\u5927\u5c0f\u662f32K\uff0c\u800c\u591a\u8bed\u8a00\u6a21\u578b\uff08\u5982\uff1aXLM-R\u3001Bloom\uff09\u7684\u8bcd\u8868\u5927\u5c0f\u7ea6\u4e3a250K\u3002\u4ee5\u4e2d\u6587\u4e3a\u4f8b\uff0cLLaMA\u8bcd\u8868\u4e2d\u7684\u4e2d\u6587token\u6bd4\u8f83\u5c11\uff08\u53ea\u6709\u51e0\u767e\u4e2a\uff09\u3002\u8fd9\u5c06\u5bfc\u81f4\u4e86\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ul> <li>LLaMA \u539f\u751ftokenizer\u8bcd\u8868\u4e2d\u4ec5\u5305\u542b\u5c11\u91cf\u4e2d\u6587\u5b57\u7b26\uff0c\u5728\u5bf9\u4e2d\u6587\u5b57\u8fdb\u884ctokenzation\u65f6\uff0c\u4e00\u4e2a\u4e2d\u6587\u6c49\u5b57\u5f80\u5f80\u88ab\u5207\u5206\u6210\u591a\u4e2atoken\uff082-3\u4e2aToken\u624d\u80fd\u7ec4\u5408\u6210\u4e00\u4e2a\u6c49\u5b57\uff09\uff0c\u663e\u8457\u964d\u4f4e\u7f16\u89e3\u7801\u7684\u6548\u7387\u3002</li> <li>\u9884\u8bad\u7ec3\u4e2d\u6ca1\u6709\u51fa\u73b0\u8fc7\u6216\u8005\u51fa\u73b0\u5f97\u5f88\u5c11\u7684\u8bed\u8a00\u5b66\u4e60\u5f97\u4e0d\u5145\u5206\u3002</li> </ul> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u80fd\u5c31\u9700\u8981\u8fdb\u884c\u4e2d\u6587\u8bcd\u8868\u6269\u5c55\u3002\u6bd4\u5982\uff1a\u5728\u4e2d\u6587\u8bed\u6599\u5e93\u4e0a\u8bad\u7ec3\u4e00\u4e2a\u4e2d\u6587tokenizer\u6a21\u578b\uff0c\u7136\u540e\u5c06\u4e2d\u6587 tokenizer \u4e0e LLaMA \u539f\u751f\u7684 tokenizer \u8fdb\u884c\u5408\u5e76\uff0c\u901a\u8fc7\u7ec4\u5408\u5b83\u4eec\u7684\u8bcd\u6c47\u8868\uff0c\u6700\u7ec8\u83b7\u5f97\u4e00\u4e2a\u5408\u5e76\u540e\u7684 tokenizer \u6a21\u578b\u3002</p> <p>\u800c\u56fd\u5185Chinese-LLaMA-Alpaca\u5f00\u6e90\u9879\u76ee\u8be6\u7ec6\u8bf4\u660e\u4e86\u8bcd\u8868\u6269\u5c55\u3001\u6a21\u578b\u9884\u8bad\u7ec3\u548c\u6a21\u578b\u6307\u4ee4\u7cbe\u8c03\u7684\u6574\u4e2a\u8fc7\u7a0b\u3002\u672c\u6587\u5c06\u5206\u4eabChinese-LLaMA-Alpaca\u662f\u5982\u4f55\u4ece0\u52301\u8fdb\u884c\u4e2d\u6587\u8bcd\u8868\u6269\u5145\u3001\u6a21\u578b\u9884\u8bad\u7ec3\u548c\u5fae\u8c03\u7684\u6574\u4e2a\u8fc7\u7a0b\u3002</p>"},{"location":"llm/LLaMA%E5%AE%9E%E9%AA%8C/#_1","title":"\u73af\u5883\u642d\u5efa","text":"<p>\u57fa\u7840\u73af\u5883\u914d\u7f6e\u5982\u4e0b\uff1a</p> <ul> <li>\u64cd\u4f5c\u7cfb\u7edf: Ubuntu 18.04</li> <li>CPUs: \u5355\u4e2a\u8282\u70b9\u5177\u6709 384GB \u5185\u5b58\u7684 Intel CPU\uff0c\u7269\u7406CPU\u4e2a\u6570\u4e3a2\uff0c\u6bcf\u9897CPU\u6838\u6570\u4e3a20</li> <li>GPUs: 4 \u5361 A800 80GB GPUs</li> <li>Python: 3.10 (\u9700\u8981\u5148\u5347\u7ea7OpenSSL\u52301.1.1t\u7248\u672c\uff08\u70b9\u51fb\u4e0b\u8f7dOpenSSL\uff09\uff0c\u7136\u540e\u518d\u7f16\u8bd1\u5b89\u88c5Python)\uff0c\u70b9\u51fb\u4e0b\u8f7dPython</li> <li>NVIDIA\u9a71\u52a8\u7a0b\u5e8f\u7248\u672c: 525.105.17\uff0c\u6839\u636e\u4e0d\u540c\u578b\u53f7\u9009\u62e9\u4e0d\u540c\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u70b9\u51fb\u4e0b\u8f7d\u3002</li> <li>CUDA\u5de5\u5177\u5305: 11.6\uff0c\u70b9\u51fb\u4e0b\u8f7d</li> <li>cuDNN: 8.8.1.3_cuda11\uff0c\u70b9\u51fb\u4e0b\u8f7d</li> </ul> <p>\u4e3a\u4e86\u4fbf\u4e8e\u590d\u73b0\uff0c\u672c\u6587\u9009\u62e9\u4f7f\u7528Doker\u955c\u50cf\u8fdb\u884c\u73af\u5883\u642d\u5efa\u3002</p> <p>\u9996\u5148\uff0c\u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\u7684Pytorch\u955c\u50cf\u3002</p> Text Only<pre><code>docker pull pytorch/pytorch:1.13.1-cuda11.6-cudnn8-devel\n</code></pre> <p>\u955c\u50cf\u4e0b\u8f7d\u5b8c\u6210\u4e4b\u540e\uff0c\u521b\u5efa\u5bb9\u5668\u3002</p> Text Only<pre><code>docker run -dt --name pytorch1131_cu116 --restart=always --gpus all \\\n-v /home/wuhw/projects/AIGC:/workspace \\\n-p 12002:22 \\\n-p 12003:8000 \\\n-w /workspace \\\n--shm-size 64g \\\npytorch/pytorch:1.13.1-cuda11.6-cudnn8-devel \\\n/bin/bash\n</code></pre> <p>\u8fdb\u5165\u5bb9\u5668\u3002</p> Text Only<pre><code>docker exec -it pytorch1131_cu116_v1 bash\n</code></pre>"},{"location":"llm/LLaMA%E5%AE%9E%E9%AA%8C/#_2","title":"\u73af\u5883\u51c6\u5907","text":"<p>\u5b89\u88c5vim\u3001git\u3001git-lfs\\sshd</p> Bash<pre><code>apt-get update\n#apt-get upgrade\napt-get install vim\napt-get install git\napt-get install git-lfs\napt-get install openssh-server\n</code></pre> <p>\u914d\u7f6esshd</p> Bash<pre><code># \u542f\u52a8sshd\n/etc/init.d/ssh start\n# \u9a8c\u8bc1\u670d\u52a1\u662f\u5426\u5f00\u542f\nps -e | grep sshd\n# \u5f00\u542fssh\u5141\u8bb8root\u7528\u6237\u8bbf\u95ee\u767b\u5f55\n# \u7f16\u8f91ssh\u914d\u7f6e\u6587\u4ef6/etc/ssh/sshd_config\nvim /etc/ssh/sshd_config\n# \u627e\u5230\u4ee5\u4e0b\u884c\uff1aPermitRootLogin no\u5c06\u5176\u6539\u4e3a\uff1a\nPermitRootLogin yes\n# \u91cd\u542fssh\u670d\u52a1\u4ee5\u4f7f\u66f4\u6539\u751f\u6548\uff1a\nservice ssh restart\n</code></pre> <p>\u5b89\u88c5\u4f9d\u8d56\u5e93\u3002</p> Bash<pre><code>pip install transformers==4.28.1 sentencepiece==0.1.97 google protobuf deepspeed -i https://pypi.tuna.tsinghua.edu.cn/simple  --trusted-host pypi.tuna.tsinghua.edu.cn\n</code></pre> <p>\u4ece\u6e90\u7801\u5b89\u88c5 Peft\uff0c\u7531\u4e8e Peft \u5e93\u53d8\u52a8\u9891\u7e41\uff0c\u4ece <code>commit id</code> \u4e3a <code>13e53fc</code> \u8fdb\u884c\u5b89\u88c5\u3002</p> Bash<pre><code>git clone https://github.com/huggingface/peft.git\ngit checkout 13e53fc\npip install . -i https://pypi.tuna.tsinghua.edu.cn/simple  --trusted-host pypi.tuna.tsinghua.edu.cn\n</code></pre>"},{"location":"llm/LLaMA%E5%AE%9E%E9%AA%8C/#_3","title":"\u8fdc\u7a0b\u5f00\u53d1\u51c6\u5907","text":""},{"location":"llm/LLaMA%E5%AE%9E%E9%AA%8C/#pycharmdocker","title":"pycharm\u8fde\u63a5docker\u5bb9\u5668\u5f00\u53d1","text":""},{"location":"llm/LLaMA%E5%AE%9E%E9%AA%8C/#_4","title":"\u4ee3\u7801\u3001\u6a21\u578b\u3001\u6570\u636e\u96c6\u51c6\u5907","text":""},{"location":"llm/LLaMA%E5%AE%9E%E9%AA%8C/#_5","title":"\u4ee3\u7801\u51c6\u5907","text":"<p>\u4e0b\u8f7dChinese-LLaMA-Alpaca\u5b98\u7f51\u4ee3\u7801\u3002</p> Bash<pre><code># 3e2f2529\ngit clone https://github.com/ymcui/Chinese-LLaMA-Alpaca.git\n</code></pre>"},{"location":"llm/LLaMA%E5%AE%9E%E9%AA%8C/#tokenizer","title":"\u6a21\u578b\u6743\u91cd \u53ca Tokenizer \u51c6\u5907","text":"<p>\u5c06LLaMA\u539f\u59cb\u6743\u91cd\u6587\u4ef6\u8f6c\u6362\u4e3aTransformers\u5e93\u5bf9\u5e94\u7684\u6a21\u578b\u6587\u4ef6\u683c\u5f0f\u3002\u5177\u4f53\u53ef\u53c2\u8003\u4e4b\u524d\u7684\u6587\u7ae0\uff1a\u4ece0\u52301\u590d\u73b0\u65af\u5766\u798f\u7f8a\u9a7c\uff08Stanford Alpaca 7B\uff09 \u3002</p> Bash<pre><code>TypeError: Descriptors cannot not be created directly.\nIf this call came from a _pb2.py file, your generated code is out of date and must be regenerated with protoc &gt;= 3.19.0.\nIf you cannot immediately regenerate your protos, some other possible workarounds are:\n 1. Downgrade the protobuf package to 3.20.x or lower.\n 2. Set PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python (but this will use pure-Python parsing and will be much slower).\n</code></pre> <p>torchrun\u547d\u4ee4\u627e\u4e0d\u5230</p> Bash<pre><code># pytorch1131_cu116\u955c\u50cf\u5185\u9ed8\u8ba4\u73af\u5883\u4f4d\u4e8econda base\u5185 /opt/conda/bin\nexport PATH=${PATH}:/opt/conda/bin\n</code></pre> <p>pip install datasets -i https://pypi.douban.com/simple --trusted-host pypi.douban.com</p> <p>pip install scikit-learn -i https://pypi.douban.com/simple --trusted-host pypi.douban.com</p> <p>pip install scikit-learn -i https://pypi.tuna.tsinghua.edu.cn/simple --trusted-host pypi.tuna.tsinghua.edu.cn</p> <p>\u7cbe\u8c03\u6a21\u578b</p> Bash<pre><code>run_sft.sh\n</code></pre> Bash<pre><code>python merge_llama_with_chinese_lora.py \\\n    --base_model /workspace/model/llama-7b-hf \\\n    --tokenizer_path /workspace/Chinese-LLaMA-Alpaca/scripts/merged_tokenizer_hf \\\n    --lora_model /workspace/outputs/lora \\\n    --output_type huggingface \\\n    --output_dir /workspace/outputs/book-merge-hf\n</code></pre> <p>\u5408\u5e76\u6a21\u578b\u65f6\u5982\u679c\u62a5\u9519config.json\u95ee\u9898\uff0c\u9700\u8981\u4fdd\u8bc1base_model\u5305\u542b</p> <p>adapter_config.json\u3001adapter_model.bin\u3001config.json</p> <p>\u5408\u5e76\u7cbe\u8c03\u6a21\u578b</p> Bash<pre><code>python merge_llama_with_chinese_lora.py \\\n     --base_model /workspace/model/llama-7b-hf \\\n     --tokenizer_path /workspace/outputs/pt_lora_model,/workspace/outputs/instruction/sft_lora_model \\\n     --lora_model /workspace/outputs/pt_lora_model,/workspace/outputs/instruction/sft_lora_model \\\n     --output_type huggingface \\\n     --output_dir /workspace/output/book-alpaca-merge-hf\n</code></pre> <p>\u5408\u5e76plus</p> Bash<pre><code>python merge_llama_with_chinese_lora_copy.py \\\n    --base_model /workspace/model/llama-7b-hf \\\n    --lora_model /workspace/model/chinese-llama-plus-lora-7b,/workspace/model/chinese-alpaca-plus-lora-7b \\\n    --output_type huggingface \\\n    --output_dir /workspace/outputs/merge_lora_hf\n</code></pre> <p>\u63a8\u7406</p> Bash<pre><code>python inference_hf.py \\\n     --base_model /workspace/outputs/merge_lora_hf \\\n     --with_prompt \\\n     --interactive\n</code></pre> <p>inference\u76f8\u5173\u53c2\u6570</p> JSON<pre><code>max_length\uff1a\n    \u5373\u9650\u5b9a\u751f\u6210\u7684\u6700\u5927\u957f\u5ea6\uff0c\u8fd9\u91cc\u7684\u957f\u5ea6\u6307\u7684token\u7684\u957f\u5ea6\u3002\u5e76\u4e14\u662f\u6700\u5927\u7684\u957f\u5ea6\uff0c\u5728\u8fd9\u4e2a\u957f\u5ea6\u4e4b\u5185\u7684\u5176\u4ed6\u957f\u5ea6\u7684\u53e5\u5b50\u4e5f\u662f\u53ef\u4ee5\u88ab\u751f\u6210\u7684\u3002\nmin_length\uff1a\n    \u4e0emax_length\u76f8\u53cd\uff0c\u9650\u5b9a\u751f\u6210\u7684\u6700\u5c0f\u957f\u5ea6\u3002\u5728\u6b64\u4e0d\u505a\u8d58\u8ff0\u3002\n\nearly_stopping\uff1a\n    early_stopping \u53c2\u6570\u7528\u4e8e\u63a7\u5236\u662f\u5426\u542f\u7528 early stopping \u7b56\u7565\u6765\u63d0\u524d\u7ec8\u6b62\u751f\u6210\u5e8f\u5217\u7684\u8fc7\u7a0b\u3002\u5728\u542f\u7528 early stopping \u7b56\u7565\u540e\uff0c\u4f1a\u5728\u751f\u6210\u7684\u5e8f\u5217\u4e2d\u68c0\u67e5\u505c\u6b62\u6807\u8bb0\uff08\u4f8b\u5982\uff0c\u53e5\u53f7\u3001\u95ee\u53f7\u3001\u611f\u53f9\u53f7\u7b49\uff09\uff0c\u4e00\u65e6\u53d1\u73b0\u8be5\u6807\u8bb0\uff0c\u5c31\u4f1a\u5c06\u751f\u6210\u7684\u5e8f\u5217\u526a\u88c1\u5230\u8be5\u6807\u8bb0\u4f4d\u7f6e\uff0c\u505c\u6b62\u751f\u6210\u3002\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u786e\u4fdd\u751f\u6210\u7684\u5e8f\u5217\u662f\u81ea\u7136\u7684\u3001\u5b8c\u6574\u7684\u3001\u6709\u610f\u4e49\u7684\uff0c\u5e76\u4e14\u7b26\u5408\u9884\u671f\u7684\u683c\u5f0f\u548c\u957f\u5ea6\u3002\n\nmax_time\uff1a\n    \u8fd0\u884c\u7684\u6700\u957f\u65f6\u95f4\u3002\n\ndo_sample\uff1a\n    do_sample\u662f\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u662f\u6307\u662f\u5426\u4f7f\u7528\u91c7\u6837\uff08sampling\uff09\u65b9\u6cd5\u6765\u751f\u6210\u6587\u672c\u3002\u91c7\u6837\u662f\u4e00\u79cd\u751f\u6210\u6587\u672c\u7684\u65b9\u6cd5\uff0c\u5b83\u4ece\u6a21\u578b\u8f93\u51fa\u7684\u6982\u7387\u5206\u5e03\u4e2d\u968f\u673a\u91c7\u6837\u4e00\u4e2a token \u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u751f\u6210\u7684 token\uff0c\u5177\u6709\u4e00\u5b9a\u7684\u968f\u673a\u6027\u548c\u591a\u6837\u6027\uff0c\u56e0\u6b64\u751f\u6210\u7684\u6587\u672c\u53ef\u80fd\u66f4\u52a0\u591a\u6837\u5316\uff0c\u800c\u4e0d\u662f\u5b8c\u5168\u6309\u7167\u6982\u7387\u5206\u5e03\u4e2d\u7684\u6982\u7387\u6765\u9009\u62e9\u4e0b\u4e00\u4e2a token\u3002\n    \u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c\u8bbe\u7f6e do_sample=True\uff0c\u90a3\u4e48\u5728\u751f\u6210\u6587\u672c\u65f6\u5c31\u4f1a\u4f7f\u7528\u91c7\u6837\u65b9\u6cd5\u3002\u5728\u91c7\u6837\u65f6\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e9b\u53c2\u6570\uff0c\u4f8b\u5982 temperature\u3001top_p \u7b49\uff0c\u8fd9\u4e9b\u53c2\u6570\u4f1a\u5f71\u54cd\u91c7\u6837\u65b9\u6cd5\u7684\u7ed3\u679c\uff0c\u4ece\u800c\u5f71\u54cd\u751f\u6210\u6587\u672c\u7684\u591a\u6837\u6027\u548c\u8d28\u91cf\u3002&lt;br&gt; \u5982\u679c\u8bbe\u7f6e do_sample=False\uff0c\u90a3\u4e48\u5c31\u4f1a\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff08greedy decoding\uff09\u6765\u751f\u6210\u6587\u672c\uff0c\u5373\u6bcf\u6b21\u9009\u62e9\u6a21\u578b\u8f93\u51fa\u6982\u7387\u6700\u5927\u7684 token \u4f5c\u4e3a\u4e0b\u4e00\u4e2a token\uff0c\u8fd9\u79cd\u65b9\u6cd5\u751f\u6210\u7684\u6587\u672c\u53ef\u80fd\u4f1a\u6bd4\u8f83\u5355\u4e00\u548c\u5446\u677f\u3002\n    do_sample\u7684\u8bbe\u7f6e\u5f71\u54cd\u540e\u7eed\u4e00\u4e9b\u53c2\u6570\u7684\u8bbe\u7f6e\uff0c\u6709\u4e9b\u5e76\u4e0d\u80fd\u517c\u5bb9\u4f7f\u7528\u3002\n\nnum_beams \uff1a\n    \u201cnum_beams\"\u662f\u5728\u8fdb\u884c\u6587\u672c\u751f\u6210\u65f6\u7684\u4e00\u4e2a\u53c2\u6570\u3002\u5b83\u662f\u6307\u5728\u751f\u6210\u4e00\u4e2a\u5e8f\u5217\u7684\u65f6\u5019\uff0c\u9884\u6d4b\u6a21\u578b\u540c\u65f6\u751f\u6210\u7684\u5019\u9009\u89e3\u7684\u6570\u91cf\u3002\u5728Beam Search\u751f\u6210\u6587\u672c\u7684\u65b9\u6cd5\u4e2d\uff0c\u9884\u6d4b\u6a21\u578b\u4f1a\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65f6\u95f4\u6b65\uff0c\u751f\u6210\u4e00\u5b9a\u6570\u91cf\u7684\u5019\u9009\u89e3\uff0c\u9009\u53d6\u5176\u4e2d\u6700\u4f18\u89e3\u8fdb\u884c\u4e0b\u4e00\u6b65\u9884\u6d4b\uff0c\u76f4\u5230\u5b8c\u6210\u6574\u4e2a\u5e8f\u5217\u7684\u751f\u6210\u3002\u8fd9\u4e2a\u6570\u91cf\u5373\u4e3a\"num_beams\u201d\u3002&lt;br&gt; \"num_beams\"\u8bbe\u7f6e\u8f83\u9ad8\uff0c\u53ef\u4ee5\u589e\u52a0\u751f\u6210\u7684\u5019\u9009\u89e3\u7684\u6570\u91cf\uff0c\u4ece\u800c\u5f97\u5230\u66f4\u591a\u53ef\u80fd\u6027\uff0c\u4f46\u662f\u4f1a\u540c\u65f6\u589e\u52a0\u8ba1\u7b97\u4ee3\u4ef7\u3002\u56e0\u6b64\uff0c\u901a\u5e38\u9700\u8981\u6839\u636e\u4efb\u52a1\u7684\u9700\u6c42\uff0c\u5408\u7406\u9009\u62e9\"num_beams\"\u7684\u503c\u3002\n\nnum_beam_groups\uff1a\n    num_beam_groups\u662f\u5728\u6587\u672c\u751f\u6210\u4e2d\u4f7f\u7528\u7684\u53c2\u6570\uff0c\u5b83\u4ee3\u8868\u5728\u751f\u6210\u7ed9\u5b9a\u5e8f\u5217\u7684\u4e0b\u4e00\u4e2a\u5355\u8bcd\u65f6\u8981\u4f7f\u7528\u7684\u675f\u6570\u7ec4\u6570\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u675f\u641c\u7d22\u662f\u4e00\u79cd\u751f\u6210\u6587\u672c\u7684\u6280\u672f\uff0c\u5b83\u901a\u8fc7\u5bf9\u751f\u6210\u7684\u6587\u672c\u7684\u5206\u6570\u8fdb\u884c\u6392\u5e8f\u6765\u9009\u62e9\u6700\u4f73\u7684\u6587\u672c\u751f\u6210\u7ed3\u679c\u3002&lt;br&gt; \u5728num_beam_groups\u53c2\u6570\u4e2d\uff0c\u5982\u679c\u6307\u5b9a\u7684\u6570\u5b57\u4e3a1\uff0c\u90a3\u4e48\u5c06\u4f7f\u7528\u5355\u4e00\u7684\u675f\u641c\u7d22\u7ec4\uff0c\u5982\u679c\u6307\u5b9a\u7684\u6570\u5b57\u4e3a2\u6216\u66f4\u591a\uff0c\u5219\u5c06\u4f7f\u7528\u591a\u4e2a\u675f\u641c\u7d22\u7ec4\u3002\u6bcf\u4e2a\u675f\u641c\u7d22\u7ec4\u5c06\u72ec\u7acb\u8fdb\u884c\u641c\u7d22\uff0c\u5e76\u901a\u8fc7\u5728\u591a\u4e2a\u675f\u641c\u7d22\u7ec4\u4e2d\u5e76\u884c\u8fdb\u884c\u641c\u7d22\u6765\u751f\u6210\u66f4\u591a\u7684\u6587\u672c\u751f\u6210\u7ed3\u679c\u3002\u8fd9\u6837\u53ef\u4ee5\u663e\u8457\u63d0\u9ad8\u751f\u6210\u6548\u7387\u3002&lt;br&gt; \u603b\u7684\u6765\u8bf4\uff0cnum_beam_groups\u53c2\u6570\u53ef\u4ee5\u5e2e\u52a9\u63a7\u5236\u751f\u6210\u7684\u6587\u672c\u6570\u91cf\u548c\u8d28\u91cf\uff0c\u5177\u4f53\u7684\u503c\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u8fdb\u884c\u8c03\u6574\u3002\n\npenalty_alpha \uff1a\n    penalty_alpha\u662f\u5728Transformer\u6a21\u578b\u4e2d\u751f\u6210\u6587\u672c\u65f6\u7528\u4e8e\u63a7\u5236\u751f\u6210\u7684\u6587\u672c\u591a\u6837\u6027\u7684\u53c2\u6570\u3002\u5b83\u63a7\u5236\u751f\u6210\u7684\u6587\u672c\u7684\u591a\u6837\u6027\u548c\u7ffb\u8bd1\u7684\u76ee\u6807\u5e8f\u5217\u7684\u8fd1\u4f3c\u7a0b\u5ea6\u4e4b\u95f4\u7684\u6743\u8861\u3002\u5f53penalty_alpha\u503c\u8d8a\u5927\u65f6\uff0c\u6a21\u578b\u751f\u6210\u7684\u6587\u672c\u53d8\u5f97\u66f4\u52a0\u591a\u6837\u6027\uff0c\u751f\u6210\u7684\u6587\u672c\u4e0e\u76ee\u6807\u5e8f\u5217\u7684\u8fd1\u4f3c\u7a0b\u5ea6\u53ef\u80fd\u4f1a\u53d8\u5f97\u66f4\u52a0\u5dee\u3002\u53cd\u4e4b\uff0c\u5f53penalty_alpha\u503c\u8d8a\u5c0f\u65f6\uff0c\u6a21\u578b\u751f\u6210\u7684\u6587\u672c\u53d8\u5f97\u66f4\u52a0\u76f8\u4f3c\u4e8e\u76ee\u6807\u5e8f\u5217\uff0c\u591a\u6837\u6027\u53ef\u80fd\u4f1a\u53d8\u5f97\u66f4\u52a0\u5dee\u3002\u56e0\u6b64\uff0c\u6839\u636e\u751f\u6210\u6587\u672c\u7684\u76ee\u7684\u548c\u8981\u6c42\uff0c\u7528\u6237\u53ef\u4ee5\u8c03\u6574penalty_alpha\u7684\u503c\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002\n\ntemperature \uff1a\n    temperature \u662f\u751f\u6210\u6587\u672c\u6a21\u578b\uff08\u5982Transformer\u6a21\u578b\uff09\u5728\u751f\u6210\u6587\u672c\u65f6\u6240\u4f7f\u7528\u7684\u53c2\u6570\u3002&lt;br&gt; \u6a21\u578b\u901a\u8fc7\u5bf9\u6bcf\u4e00\u4e2a\u5355\u8bcd\u7684\u6982\u7387\u8fdb\u884c\u8ba1\u7b97\uff0c\u5e76\u9009\u62e9\u5177\u6709\u6700\u9ad8\u6982\u7387\u7684\u5355\u8bcd\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u5355\u8bcd\uff0c\u4ee5\u751f\u6210\u6587\u672c\u5e8f\u5217\u3002\u4e3a\u4e86\u751f\u6210\u591a\u6837\u6027\u66f4\u9ad8\u7684\u6587\u672c\uff0c\u901a\u5e38\u4f7f\u7528\u9ad8\u65af\u5206\u5e03\u91cd\u65b0\u8c03\u6574\u5355\u8bcd\u7684\u6982\u7387\u503c\u3002temperature \u53c2\u6570\u5b9a\u4e49\u4e86\u91cd\u65b0\u8c03\u6574\u7684\u5ea6\u91cf\u3002\n    \u5982\u679c temperature \u7684\u503c\u4e3a1\uff0c\u5219\u6ca1\u6709\u4efb\u4f55\u8c03\u6574\uff1b\u5982\u679c\u5176\u503c\u6bd41\u5927\uff0c\u5219\u4f1a\u751f\u6210\u66f4\u52a0\u968f\u673a\u7684\u6587\u672c\uff1b\u5982\u679c\u5176\u503c\u6bd41\u5c0f\uff0c\u5219\u751f\u6210\u7684\u6587\u672c\u66f4\u52a0\u4fdd\u5b88\u3002\u901a\u5e38\u9700\u8981\u591a\u6b21\u8bd5\u9a8c\u6765\u627e\u5230\u6700\u9002\u5408\u7279\u5b9a\u6570\u636e\u96c6\u7684 temperature \u503c\n\ntop_k \uff1a\u7528\u4e8etop-k\u7b5b\u9009\u7684\u6700\u9ad8\u6982\u7387\u8bcd\u6c47\u8868\u6807\u8bb0\u7684\u6570\u91cf\u3002\n\ntop_p\uff1a\n    \u201ctop_p\u201d \u662f\u4e00\u4e2a\u7528\u4e8e\u9650\u5236\u751f\u6210\u6587\u672c\u4e2d\u8bcd\u8bed\u9009\u62e9\u7684\u6982\u7387\u5206\u5e03\u7684\u53c2\u6570\u3002\u5b83\u4ee3\u8868\u4e86\u4ec5\u9009\u62e9\u6982\u7387\u5206\u5e03\u4e2d\u524dp%\u5927\u7684\u8bcd\u8bed\uff0c\u800c\u820d\u5f03\u5269\u4f59\u7684\u8bcd\u8bed\u3002\u901a\u4fd7\u5730\u8bf4\uff0c\u5b83\u7528\u4e8e\u7ea6\u675f\u751f\u6210\u6587\u672c\u4e2d\u8bcd\u8bed\u7684\u6570\u91cf\uff0c\u9632\u6b62\u751f\u6210\u8fc7\u591a\u7684\u8bcd\u8bed\uff0c\u5e76\u4e14\u53ea\u9009\u62e9\u6700\u53ef\u80fd\u7684\u8bcd\u8bed\u3002\n    \u5177\u4f53\u5730\uff0c\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u6a21\u578b\uff0c\u5b83\u9884\u6d4b\u4e86\u4e0b\u4e00\u4e2a\u5355\u8bcd\u7684\u6982\u7387\u5206\u5e03\uff0c\u5982\u679c\u6211\u4eec\u5c06 top_p \u8bbe\u7f6e\u4e3a0.9\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u53ea\u9009\u62e9\u6982\u7387\u5206\u5e03\u4e2d\u524d 90% \u7684\u8bcd\u8bed\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u751f\u6210\u7684\u8bcd\u8bed\u4e0d\u5728\u524d90%\uff0c\u90a3\u4e48\u5c06\u4e0d\u4f1a\u8003\u8651\u8fd9\u4e2a\u8bcd\u8bed\u3002\u8fd9\u6837\u505a\u53ef\u4ee5\u964d\u4f4e\u751f\u6210\u7684\u8bcd\u8bed\u6570\u91cf\uff0c\u540c\u65f6\u53ef\u4ee5\u4fdd\u8bc1\u751f\u6210\u7684\u8bcd\u8bed\u66f4\u53ef\u80fd\u662f\u6b63\u786e\u7684\u3002\n\ntypical_p\uff1a\u201ctop_p\u201d \u548c \u201ctop_k\u201d \u662f\u4e00\u7ec4\u9650\u5236\u751f\u6210\u6587\u672c\u4e2d\u6bcf\u4e2a\u8bcd\u9009\u62e9\u7684\u6982\u7387\u7684\u53c2\u6570\u3002\u201ctop_p\u201d \u63a7\u5236\u751f\u6210\u7684\u6587\u672c\u4e2d\uff0c\u6bcf\u4e2a\u8bcd\u9009\u62e9\u7684\u6982\u7387\u5fc5\u987b\u5728\u6700\u9ad8\u6982\u7387\u7684\u524d p \u7684\u8bcd\u4e2d\uff0c\u800c\u4e0d\u662f\u9009\u62e9\u6765\u81ea\u6574\u4e2a\u8bcd\u6c47\u8868\u4e2d\u7684\u4efb\u4f55\u8bcd\u3002&lt;br&gt; \u201ctypical_p\u201d \u662f\u4e00\u4e2a\u65b0\u52a0\u5165\u7684\u53c2\u6570\uff0c\u4e0e \u201ctop_p\u201d \u7c7b\u4f3c\uff0c\u4f46\u662f\u5b83\u9650\u5236\u7684\u662f\u751f\u6210\u7684\u6587\u672c\u4e2d\u6bcf\u4e2a\u8bcd\u6982\u7387\u7684\u5206\u5e03\uff0c\u800c\u4e0d\u662f\u6982\u7387\u7684\u786e\u5207\u503c\u3002\u4e0e \u201ctop_p\u201d \u4e0d\u540c\u7684\u662f\uff0c\u201ctypical_p\u201d \u53ef\u4ee5\u4ea7\u751f\u66f4\u957f\u7684\u6587\u672c\u5e8f\u5217\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u66f4\u591a\u7684\u8bcd\u6c47\u9009\u62e9\u3002&lt;br&gt; \u4f7f\u7528\u8fd9\u4e9b\u53c2\u6570\u53ef\u4ee5\u9650\u5236\u751f\u6210\u7684\u6587\u672c\uff0c\u4ece\u800c\u4ea7\u751f\u66f4\u6709\u610f\u4e49\u7684\uff0c\u66f4\u7b26\u5408\u76ee\u6807\u7684\u751f\u6210\u6587\u672c\u3002\n\nepsilon_cutoff\uff1a\n    epsilon_cutoff \u662f\u4e00\u4e2a\u8d85\u53c2\u6570\uff0c\u5b83\u5728\u6587\u672c\u751f\u6210\u4e2d\u7528\u4e8e\u63a7\u5236\u5982\u4f55\u9009\u62e9\u8bcd\u8bed\u3002\u5b83\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u4ee3\u8868\u4e86\u4ece\u9884\u6d4b\u5206\u5e03\u4e2d\u5220\u9664\u8bcd\u8bed\u7684\u9608\u503c\u3002&lt;br&gt; \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u6211\u4eec\u8bbe\u7f6e epsilon_cutoff = 0.01 \uff0c\u90a3\u4e48\u9884\u6d4b\u5206\u5e03\u4e2d\u4f4e\u4e8e0.01\u7684\u6240\u6709\u8bcd\u8bed\u5c06\u4e0d\u4f1a\u88ab\u9009\u62e9\uff0c\u53ea\u6709\u5269\u4e0b\u7684\u66f4\u9ad8\u7684\u5206\u6570\u7684\u8bcd\u8bed\u5c06\u88ab\u9009\u4e2d\u3002\u901a\u8fc7\u8c03\u6574\u8fd9\u4e2a\u53c2\u6570\uff0c\u53ef\u4ee5\u63a7\u5236\u9884\u6d4b\u7684\u8bcd\u8bed\u6570\u91cf\uff0c\u4ece\u800c\u63a7\u5236\u751f\u6210\u7684\u6587\u672c\u7684\u7cbe\u7ec6\u7a0b\u5ea6\u3002\n\neta_cutoff\uff1a\n    \u201ceta_cutoff\u201d \u662f GPT-2 \u6587\u672c\u751f\u6210\u4e2d\u7684\u4e00\u4e2a\u53c2\u6570\uff0c\u5b83\u63a7\u5236\u751f\u6210\u7684\u5e8f\u5217\u7684\u591a\u6837\u6027\u3002\u5b83\u7684\u4f5c\u7528\u662f\u51b3\u5b9a\u662f\u5426\u8981\u5728\u7b26\u5408\u9884\u5b9a\u8981\u6c42\u7684\u524d\u63d0\u4e0b\u751f\u6210\u66f4\u52a0\u51fa\u5947\u4e0d\u610f\u7684\u5e8f\u5217\u3002&lt;br&gt; eta_cutoff \u8868\u793a\u5f53\u524d\u751f\u6210\u7684\u5e8f\u5217\u4e0e\u6700\u9ad8\u6982\u7387\u7684\u7b2c\u4e8c\u9ad8\u6982\u7387\u7684\u6bd4\u503c\uff0c\u5982\u679c\u6bd4\u503c\u5927\u4e8e eta_cutoff\uff0c\u5219\u7ee7\u7eed\u751f\u6210\u4e0b\u4e00\u4e2a\u5b57\u7b26\uff1b\u5982\u679c\u6bd4\u503c\u5c0f\u4e8e eta_cutoff\uff0c\u5219\u505c\u6b62\u751f\u6210\u3002&lt;br&gt; \u901a\u8fc7\u8c03\u6574 eta_cutoff \u7684\u503c\uff0c\u53ef\u4ee5\u63a7\u5236\u751f\u6210\u7684\u5e8f\u5217\u7684\u591a\u6837\u6027\uff1a\u5982\u679c eta_cutoff \u8f83\u4f4e\uff0c\u5219\u751f\u6210\u7684\u5e8f\u5217\u4f1a\u66f4\u52a0\u591a\u6837\u5316\uff1b\u5982\u679c eta_cutoff \u8f83\u9ad8\uff0c\u5219\u751f\u6210\u7684\u5e8f\u5217\u4f1a\u66f4\u52a0\u4fdd\u5b88\uff0c\u66f4\u63a5\u8fd1\u8bad\u7ec3\u6570\u636e\u3002\n\ndiversity_penalty\uff1a\n    diversity_penalty \u53c2\u6570\u662f\u6307\u5bf9\u751f\u6210\u7684\u6587\u672c\u591a\u6837\u6027\u7684\u60e9\u7f5a\u56e0\u5b50\u3002\u5f53 diversity_penalty \u8bbe\u7f6e\u4e3a\u6b63\u6570\u65f6\uff0c\u5b83\u4f1a\u60e9\u7f5a\u751f\u6210\u7684\u6587\u672c\u91cc\u6392\u5728\u524d\u9762\u7684\u5355\u8bcd\u51fa\u73b0\u7684\u9891\u7387\u8fc7\u9ad8\u7684\u60c5\u51b5\uff0c\u8fdb\u800c\u63d0\u9ad8\u6587\u672c\u7684\u591a\u6837\u6027\u3002\u8f83\u5c0f\u7684 diversity_penalty \u503c\u53ef\u4ee5\u4f7f\u751f\u6210\u7684\u6587\u672c\u66f4\u52a0\u4fdd\u5b88\uff0c\u800c\u8f83\u5927\u7684\u503c\u5219\u53ef\u4ee5\u63d0\u9ad8\u6587\u672c\u7684\u521b\u9020\u6027\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u6587\u672c\u591a\u6837\u6027\u7684\u60e9\u7f5a\u56e0\u5b50\u8fc7\u5927\u4e5f\u53ef\u80fd\u5bfc\u81f4\u751f\u6210\u7684\u6587\u672c\u8d28\u91cf\u4e0b\u964d\uff0c\u56e0\u6b64\u9009\u62e9\u6b63\u786e\u7684 diversity_penalty \u503c\u9700\u8981\u6839\u636e\u5177\u4f53\u5e94\u7528\u573a\u666f\u548c\u9700\u6c42\u8fdb\u884c\u8c03\u6574\u3002\n\nrepetition_penalty \uff1a\n    \u201crepetition_penalty\u201d \u662f\u7528\u4e8e\u6587\u672c\u751f\u6210\u4e2d\u7684\u53c2\u6570\uff0c\u7528\u4e8e\u60e9\u7f5a\u91cd\u590d\u7684\u5355\u8bcd\u548c\u53e5\u5b50\u3002\u9ed8\u8ba4\u503c\u4e3a1.0\uff0c\u5176\u4e2d\u8f83\u9ad8\u7684\u503c\u610f\u5473\u7740\u66f4\u5f3a\u7684\u60e9\u7f5a\uff0c\u751f\u6210\u7684\u6587\u672c\u4e2d\u5c06\u51fa\u73b0\u66f4\u5c11\u7684\u91cd\u590d\u3002\u5982\u679c\u53d6\u503c\u4e3a0\uff0c\u5219\u6ca1\u6709\u60e9\u7f5a\uff0c\u751f\u6210\u7684\u6587\u672c\u53ef\u80fd\u5305\u542b\u5927\u91cf\u91cd\u590d\u7684\u5185\u5bb9\u3002&lt;br&gt; \u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u901a\u5e38\u9700\u8981\u5bf9\u8be5\u53c2\u6570\u8fdb\u884c\u8c03\u6574\uff0c\u4ee5\u6839\u636e\u5177\u4f53\u9700\u6c42\u5728\u751f\u6210\u7684\u6587\u672c\u4e2d\u8fbe\u5230\u9002\u5f53\u7684\u5e73\u8861\uff0c\u4f8b\u5982\u5728\u4e00\u4e9b\u4efb\u52a1\u4e2d\uff0c\u8fc7\u591a\u7684\u91cd\u590d\u53ef\u80fd\u4e0d\u662f\u7406\u60f3\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5c06repetition_penalty\u8bbe\u7f6e\u4e3a\u8f83\u9ad8\u7684\u503c\uff1b\u800c\u5728\u5176\u4ed6\u4efb\u52a1\u4e2d\uff0c\u66f4\u591a\u7684\u91cd\u590d\u53ef\u80fd\u662f\u6709\u610f\u4e49\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5c06repetition_penalty\u8bbe\u7f6e\u4e3a\u8f83\u4f4e\u7684\u503c\u3002\n\nencoder_repetition_penalty \uff1a\n    encoder_repetition_penalty\u662fTransformers\u5e93\u4e2d\u7528\u4e8e\u6587\u672c\u751f\u6210\u4efb\u52a1\u7684\u4e00\u4e2a\u53c2\u6570\u3002\u5b83\u51b3\u5b9a\u4e86\u5bf9\u6a21\u578b\u5bf9\u6e90\u6587\u672c\u8fdb\u884c\u91cd\u590d\u751f\u6210\u6587\u672c\u7684\u60e9\u7f5a\u7a0b\u5ea6\u3002\u5f53\u8bbe\u7f6e\u4e86\u8f83\u9ad8\u7684\u503c\u65f6\uff0c\u6a21\u578b\u4f1a\u5bf9\u751f\u6210\u51fa\u6765\u7684\u6587\u672c\u4e0e\u6e90\u6587\u672c\u91cd\u590d\u7684\u90e8\u5206\u8fdb\u884c\u60e9\u7f5a\uff0c\u4ece\u800c\u6709\u53ef\u80fd\u751f\u6210\u51fa\u4e0d\u540c\u4e8e\u6e90\u6587\u672c\u7684\u65b0\u6587\u672c\u3002\u8bbe\u7f6e\u7684\u503c\u8d8a\u5927\uff0c\u6a21\u578b\u5bf9\u91cd\u590d\u7684\u6587\u672c\u7684\u60e9\u7f5a\u7a0b\u5ea6\u5c31\u8d8a\u9ad8\u3002\u5982\u679c\u4e0d\u8bbe\u7f6e\u6b64\u53c2\u6570\uff0c\u5219\u9ed8\u8ba4\u4e3a1.0\u3002\n\nlength_penalty\uff1a\n    length_penalty\u662f\u4e00\u4e2a\u56e0\u5b50\uff0c\u7528\u4e8e\u8c03\u6574\u751f\u6210\u7684\u5e8f\u5217\u957f\u5ea6\u7684\u5f71\u54cd\u3002\u5728\u751f\u6210\u7684\u6587\u672c\u4e2d\uff0c\u957f\u5ea6\u662f\u76f8\u5bf9\u7684\u3002\u4f8b\u5982\uff0c\u4e00\u7bc7\u957f\u6587\u7ae0\u4e0e\u53e6\u4e00\u7bc7\u77ed\u6587\u7ae0\u76f8\u6bd4\u53ef\u80fd\u66f4\u6709\u4ef7\u503c\u3002\u4e3a\u4e86\u8003\u8651\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u5728\u751f\u6210\u6587\u672c\u65f6\u8003\u8651\u957f\u5ea6\uff0c\u901a\u8fc7\u8bbe\u7f6e\u957f\u5ea6\u60e9\u7f5a\u56e0\u5b50\u3002&lt;br&gt; \u5177\u4f53\u6765\u8bf4\uff0clength_penalty\u662f\u4e00\u4e2a\u6839\u636e\u751f\u6210\u7684\u5e8f\u5217\u957f\u5ea6\u52a8\u6001\u8c03\u6574\u751f\u6210\u5e8f\u5217\u7684\u5206\u6570\u7684\u56e0\u5b50\u3002\u5982\u679clength_penalty\u7684\u503c\u8f83\u5c0f\uff0c\u5219\u957f\u5e8f\u5217\u7684\u5206\u6570\u4f1a\u6bd4\u8f83\u4f4e\uff0c\u56e0\u6b64\u751f\u6210\u7684\u5e8f\u5217\u53ef\u80fd\u8f83\u77ed\u3002\u5982\u679clength_penalty\u7684\u503c\u8f83\u5927\uff0c\u5219\u957f\u5e8f\u5217\u7684\u5206\u6570\u53ef\u80fd\u66f4\u9ad8\uff0c\u56e0\u6b64\u751f\u6210\u7684\u5e8f\u5217\u53ef\u80fd\u66f4\u957f\u3002\u5728\u9002\u5f53\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574length_penalty\u7684\u503c\u6765\u5f71\u54cd\u751f\u6210\u6587\u672c\u7684\u957f\u5ea6\u3002\n\nno_repeat_ngram_size\uff1a\n    no_repeat_ngram_size \u53c2\u6570\u6307\u5b9a\u4e86\u751f\u6210\u6587\u672c\u65f6\u9700\u8981\u907f\u514d\u7684\u91cd\u590d\u6587\u672c\u7684\u5927\u5c0f\u3002\u8be5\u53c2\u6570\u6307\u793a\u5728\u751f\u6210\u7684\u6587\u672c\u4e2d\uff0c\u6700\u591a\u5141\u8bb8\u591a\u5c11\u4e2a\u8bcd\u4e0e\u539f\u59cb\u6587\u672c\u4e2d\u7684\u8bcd\u8fdb\u884c\u91cd\u590d\u3002\u5982\u679c\u8be5\u503c\u8bbe\u7f6e\u4e3a 3\uff0c\u5219\u751f\u6210\u7684\u6587\u672c\u4e2d\u7684\u4efb\u4f55\u4e00\u6bb5\u957f\u5ea6\u4e3a\u4e09\u4e2a\u8bcd\u7684\u5b50\u5e8f\u5217\u90fd\u4e0d\u80fd\u4e0e\u539f\u59cb\u6587\u672c\u7684\u4efb\u4f55\u5b50\u5e8f\u5217\u91cd\u590d\u3002\u8bbe\u7f6e\u8be5\u503c\u53ef\u4ee5\u9632\u6b62\u751f\u6210\u7684\u6587\u672c\u4e2d\u51fa\u73b0\u91cd\u590d\u8bcd\u6c47\uff0c\u56e0\u6b64\u53ef\u4ee5\u63d0\u9ad8\u751f\u6210\u6587\u672c\u7684\u591a\u6837\u6027\u3002\n\nbad_words_ids\uff1a\n    bad_words_ids \u662f Text Generation \u4e2d\u7684\u4e00\u4e2a\u53c2\u6570\uff0c\u7528\u6765\u8868\u793a\u9700\u8981\u88ab\u7981\u6b62\u51fa\u73b0\u5728\u751f\u6210\u7684\u6587\u672c\u4e2d\u7684\u5355\u8bcd\uff08\u901a\u5e38\u662f\u4e00\u4e9b\u4e0d\u5f53\u8bed\u8a00\u3001\u79cd\u65cf\u6b67\u89c6\u7b49\uff09\u7684 ID\u3002\u8fd9\u4e9b\u5355\u8bcd\u5728\u751f\u6210\u6587\u672c\u65f6\u5c06\u4f1a\u88ab\u5ffd\u7565\uff0c\u4ee5\u786e\u4fdd\u751f\u6210\u7684\u6587\u672c\u5728\u5185\u5bb9\u548c\u8bed\u8a00\u65b9\u9762\u7b26\u5408\u67d0\u4e9b\u9053\u5fb7\u548c\u793e\u4f1a\u89c4\u8303\u3002&lt;br&gt; \u4f8b\u5982\uff0c\u5047\u8bbe\u4f60\u4f7f\u7528\u7684\u662f BERT \u6a21\u578b\uff0c\u5e76\u4e14\u5728\u4f60\u7684\u8bcd\u6c47\u8868\u4e2d\u6709\u4e00\u4e9b\u4e0d\u6070\u5f53\u7684\u8bcd\u3002\u5982\u679c\u4f60\u4e0d\u5e0c\u671b\u8fd9\u4e9b\u8bcd\u5728\u751f\u6210\u7684\u6587\u672c\u4e2d\u51fa\u73b0\uff0c\u4f60\u53ef\u4ee5\u5c06\u5b83\u4eec\u7684 ID \u6dfb\u52a0\u5230 bad_words_ids \u5217\u8868\u4e2d\u3002\u751f\u6210\u7684\u6587\u672c\u4e2d\u5c06\u4e0d\u4f1a\u518d\u51fa\u73b0\u8fd9\u4e9b\u8bcd\u7684 ID\u3002\n\nforce_words_ids\uff1a\n    force_words_ids\u53c2\u6570\u53ef\u4ee5\u7528\u4e8e\u5f3a\u5236\u6a21\u578b\u5728\u751f\u6210\u7684\u6587\u672c\u4e2d\u5305\u542b\u7279\u5b9a\u7684\u5355\u8bcd\u6216\u5b50\u5e8f\u5217\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5b83\u662f\u4e00\u4e2a\u5305\u542b\u5355\u8bcd\u6216\u5b50\u5e8f\u5217id\u7684\u5217\u8868\uff0c\u8868\u793a\u6a21\u578b\u5fc5\u987b\u751f\u6210\u5305\u542b\u8fd9\u4e9b\u5355\u8bcd\u6216\u5b50\u5e8f\u5217\u7684\u6587\u672c\u3002&lt;br&gt; \u5982\u679c\u7ed9\u5b9a\u7684\u5355\u8bcd\u6216\u5b50\u5e8f\u5217\u5728\u751f\u6210\u7684\u8fc7\u7a0b\u4e2d\u65e0\u6cd5\u6ee1\u8db3\u7ea6\u675f\u6761\u4ef6\uff0c\u5219\u4f1a\u5c1d\u8bd5\u8fdb\u884c\u591a\u6b21\u91cd\u65b0\u91c7\u6837\uff0c\u76f4\u5230\u6ee1\u8db3\u6761\u4ef6\u6216\u8fbe\u5230\u6700\u5927\u91cd\u8bd5\u6b21\u6570\u3002\u5982\u679c\u6700\u7ec8\u65e0\u6cd5\u751f\u6210\u6ee1\u8db3\u6761\u4ef6\u7684\u6587\u672c\uff0c\u5219\u4f1a\u5f15\u53d1\u4e00\u4e2a\u5f02\u5e38\u3002\n    \u5728\u4e00\u4e9b\u5e94\u7528\u573a\u666f\u4e2d\uff0cforce_words_ids\u53ef\u4ee5\u7528\u4e8e\u7ea6\u675f\u751f\u6210\u7684\u6587\u672c\u5fc5\u987b\u6ee1\u8db3\u67d0\u4e9b\u5173\u952e\u8bcd\u6216\u8981\u6c42\uff0c\u4f8b\u5982\u5728\u751f\u6210\u5e7f\u544a\u6587\u6848\u65f6\u5f3a\u5236\u5305\u542b\u67d0\u4e9b\u9500\u552e\u4eae\u70b9\u8bcd\u6c47\u3002\n\nrenormalize_logits\uff1a\n    \u5728 Text Generation \u4e2d\uff0crenormalize_logits \u662f\u4e00\u4e2a\u63a7\u5236\u6807\u51c6\u5316\u903b\u8f91\u6982\u7387\u7684\u5e03\u5c14\u503c\u3002\u5f53\u8bbe\u7f6e\u4e3a True \u65f6\uff0c\u5b83\u4f1a\u5c06\u6a21\u578b\u4e2d\u7684 logits \u89c4\u8303\u5316\u4e3a\u6982\u7387\u5206\u5e03\uff0c\u4ee5\u4fbf\u4e8e\u8ba1\u7b97\u635f\u5931\u548c\u751f\u6210\u6837\u672c\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5982\u679c logits \u4e0d\u89c4\u8303\u5316\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u8bad\u7ec3\u56f0\u96be\u6216\u751f\u6210\u4e0d\u7a33\u5b9a\u7684\u95ee\u9898\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06 renormalize_logits \u8bbe\u7f6e\u4e3a True \u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002&lt;br&gt; \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5c06 renormalize_logits \u8bbe\u7f6e\u4e3a True \u4f1a\u5bf9\u751f\u6210\u7684\u6837\u672c\u4ea7\u751f\u4e00\u5b9a\u7684\u5f71\u54cd\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5b83\u4f1a\u4f7f\u751f\u6210\u7684\u6837\u672c\u66f4\u52a0\u5e73\u6ed1\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u53ef\u80fd\u4f1a\u5931\u53bb\u4e00\u4e9b\u539f\u59cb\u6a21\u578b\u7684\u7ec6\u8282\u3002\u56e0\u6b64\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5c06 renormalize_logits \u8bbe\u7f6e\u4e3a False\uff0c\u4ee5\u4fbf\u751f\u6210\u66f4\u52a0\u51c6\u786e\u548c\u8be6\u7ec6\u7684\u6837\u672c\u3002\u4f46\u662f\uff0c\u8fd9\u4e5f\u53ef\u80fd\u5bfc\u81f4\u8bad\u7ec3\u95ee\u9898\u548c\u4e0d\u7a33\u5b9a\u7684\u751f\u6210\u7ed3\u679c\uff0c\u9700\u8981\u5728\u4f7f\u7528\u65f6\u8c28\u614e\u6743\u8861\u3002\n\nconstraints \uff1a\n    constraints\u53c2\u6570\u7528\u4e8e\u5bf9\u751f\u6210\u6587\u672c\u7684\u5185\u5bb9\u8fdb\u884c\u9650\u5236\uff0c\u4ee5\u6ee1\u8db3\u7279\u5b9a\u7684\u6761\u4ef6\u6216\u8981\u6c42\u3002\u8be5\u53c2\u6570\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u7ea6\u675f\u51fd\u6570\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u51fd\u6570\u90fd\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u8868\u793a\u8f93\u5165\u5e8f\u5217\u662f\u5426\u7b26\u5408\u7279\u5b9a\u7684\u9650\u5236\u6761\u4ef6\u3002&lt;br&gt; \u5177\u4f53\u6765\u8bf4\uff0c\u7ea6\u675f\u51fd\u6570\u53ef\u4ee5\u68c0\u67e5\u751f\u6210\u7684\u5e8f\u5217\u662f\u5426\u5305\u542b\u7279\u5b9a\u7684\u5355\u8bcd\u6216\u77ed\u8bed\uff0c\u6216\u8005\u662f\u5426\u6ee1\u8db3\u7279\u5b9a\u7684\u8bed\u6cd5\u89c4\u5219\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u7ea6\u675f\u51fd\u6570\u6765\u68c0\u67e5\u751f\u6210\u7684\u5e8f\u5217\u662f\u5426\u7b26\u5408\u7279\u5b9a\u7684\u4e3b\u9898\uff0c\u6216\u8005\u662f\u5426\u5305\u542b\u4e0d\u5141\u8bb8\u51fa\u73b0\u7684\u5355\u8bcd\u3002\nforced_bos_token_id\uff1a\u65f6\uff0cforced_bos_token_id\u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u7528\u4e8e\u6307\u5b9a\u8981\u5f3a\u5236\u7528\u4f5c\u5f00\u59cb\u6807\u8bb0\u7684token ID\uff0c\u5373\u5728\u751f\u6210\u6587\u672c\u65f6\u5c06\u5176\u6dfb\u52a0\u5230\u751f\u6210\u5e8f\u5217\u7684\u5f00\u5934\u3002\n    \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cTransformers\u4f7f\u7528\u6a21\u578b\u7684\u5f00\u59cb\u6807\u8bb0\u4f5c\u4e3a\u751f\u6210\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2atoken\uff0c\u4f46\u662f\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u9700\u8981\u5f3a\u5236\u4f7f\u7528\u5176\u4ed6token\u4f5c\u4e3a\u5f00\u59cb\u6807\u8bb0\u3002\u4f8b\u5982\uff0c\u5728\u5bf9\u8bdd\u751f\u6210\u4efb\u52a1\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u751f\u6210\u5e8f\u5217\u7684\u5f00\u5934\u59cb\u7ec8\u662f\u67d0\u4e2a\u56fa\u5b9a\u7684\u95ee\u53e5\u3002\n\nremove_invalid_values \uff1a\u5728\u6587\u672c\u751f\u6210\u4efb\u52a1\u4e2d\uff0c\u6a21\u578b\u53ef\u80fd\u4f1a\u751f\u6210\u4e00\u4e9b\u65e0\u6548\u7684\u503c\uff0c\u5982NaN\u6216Inf\u3002\u5982\u679c\u8fd9\u4e9b\u65e0\u6548\u503c\u88ab\u5141\u8bb8\u51fa\u73b0\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6a21\u578b\u51fa\u73b0\u9519\u8bef\u6216\u4e0d\u53ef\u9884\u6d4b\u7684\u7ed3\u679c\u3002\u56e0\u6b64\uff0c\u5982\u679c\u5728\u6a21\u578b\u8f93\u51fa\u4e2d\u68c0\u6d4b\u5230\u6b64\u7c7b\u65e0\u6548\u503c\uff0c\u53ef\u4ee5\u9009\u62e9\u5c06\u5176\u79fb\u9664\u3002\u5728Transformers\u5e93\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528remove_invalid_values\u53c2\u6570\u6765\u63a7\u5236\u662f\u5426\u79fb\u9664\u65e0\u6548\u503c\u3002\u5f53remove_invalid_values\u8bbe\u7f6e\u4e3aTrue\u65f6\uff0c\u4efb\u4f55\u65e0\u6548\u503c\u90fd\u4f1a\u88ab\u79fb\u9664\u3002\u5f53\u8bbe\u7f6e\u4e3aFalse\u65f6\uff0c\u8fd9\u4e9b\u65e0\u6548\u503c\u5c06\u4fdd\u7559\u5728\u8f93\u51fa\u4e2d\u3002\n\nexponential_decay_length_penalty\uff1a\n    exponential_decay_length_penalty\u53c2\u6570\u6307\u5b9a\u5728\u751f\u6210\u6587\u672c\u65f6\u5982\u4f55\u60e9\u7f5a\u957f\u5ea6\u3002\u8be5\u53c2\u6570\u7684\u9ed8\u8ba4\u503c\u4e3a0.0\uff0c\u8868\u793a\u4e0d\u5e94\u7528\u957f\u5ea6\u60e9\u7f5a\u3002\u5f53exponential_decay_length_penalty\u53c2\u6570\u4e3a\u975e\u96f6\u503c\u65f6\uff0c\u5c06\u6309\u6307\u6570\u8870\u51cf\u7684\u65b9\u5f0f\u5bf9\u751f\u6210\u6587\u672c\u7684\u957f\u5ea6\u8fdb\u884c\u60e9\u7f5a\u3002&lt;br&gt; \u8870\u51cf\u7684\u901f\u5ea6\u7531decay_rate\u53c2\u6570\u51b3\u5b9a\u3002\u4f8b\u5982\uff0c\u5982\u679cdecay_rate\u8bbe\u7f6e\u4e3a0.5\uff0c\u5bf9\u4e8e\u957f\u5ea6\u4e3aN\u7684\u6587\u672c\uff0c\u751f\u6210\u5668\u4f1a\u7ed9\u8be5\u6587\u672c\u7684\u5f97\u5206\u4e58\u4ee50.5^N\u3002\u8fd9\u6837\u505a\u53ef\u4ee5\u6709\u6548\u9632\u6b62\u751f\u6210\u5668\u751f\u6210\u8fc7\u957f\u7684\u6587\u672c\u3002&lt;br&gt; exponential_decay_length_penalty\u53c2\u6570\u9002\u7528\u4e8e\u9700\u8981\u751f\u6210\u7279\u5b9a\u957f\u5ea6\u6587\u672c\u7684\u4efb\u52a1\uff0c\u6bd4\u5982\u5bf9\u8bdd\u7cfb\u7edf\u4e2d\u5bf9\u8bdd\u957f\u5ea6\u7684\u63a7\u5236\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u751f\u6210\u8f83\u77ed\u7684\u6587\u672c\u53ef\u4ee5\u66f4\u52a0\u6d41\u7545\u81ea\u7136\uff0c\u800c\u8fc7\u957f\u7684\u6587\u672c\u53ef\u80fd\u4f1a\u51fa\u73b0\u8bed\u6cd5\u9519\u8bef\u6216\u8005\u903b\u8f91\u6df7\u4e71\u7b49\u95ee\u9898\u3002\nsuppress_tokens\uff1asuppress_tokens\u53c2\u6570\u53ef\u4ee5\u7528\u6765\u6291\u5236\u6a21\u578b\u751f\u6210\u6307\u5b9a\u7684\u6807\u8bb0(token)\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5f53\u6a21\u578b\u751f\u6210\u4e00\u4e2a\u6807\u8bb0\u65f6\uff0c\u5982\u679c\u8be5\u6807\u8bb0\u5728suppress_tokens\u4e2d\u6307\u5b9a\u4e86\uff0c\u90a3\u4e48\u6a21\u578b\u5c06\u4f1a\u8df3\u8fc7\u8be5\u6807\u8bb0\uff0c\u7ee7\u7eed\u751f\u6210\u4e0b\u4e00\u4e2a\u6807\u8bb0\u3002\u8fd9\u4e2a\u53c2\u6570\u901a\u5e38\u7528\u4e8e\u7279\u6b8a\u60c5\u51b5\u4e0b\u7684\u6587\u672c\u751f\u6210\u4efb\u52a1\uff0c\u6bd4\u5982\u8fc7\u6ee4\u6389\u4e00\u4e9b\u4e0d\u5408\u9002\u7684\u8bcd\u6c47\u6216\u8005\u6307\u5b9a\u4e00\u4e9b\u5f3a\u5236\u8981\u6c42\u7684\u5355\u8bcd\u3002\n\nnum_return_sequences\uff1a\n    num_return_sequences \u53c2\u6570\u7528\u4e8e\u63a7\u5236\u6a21\u578b\u751f\u6210\u7684\u6587\u672c\u5e8f\u5217\u7684\u6570\u91cf\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6a21\u578b\u5c06\u751f\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u6587\u672c\u5e8f\u5217\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u8bbe\u7f6e num_return_sequences \u53c2\u6570\u4e3a\u4e00\u4e2a\u5927\u4e8e 1 \u7684\u6574\u6570\uff0c\u4ee5\u751f\u6210\u591a\u4e2a\u6587\u672c\u5e8f\u5217\u3002\u8fd9\u5bf9\u4e8e\u751f\u6210\u591a\u4e2a\u76f8\u5173\u4f46\u4e0d\u5b8c\u5168\u76f8\u540c\u7684\u6587\u672c\u5e8f\u5217\u5f88\u6709\u7528\uff0c\u4f8b\u5982\u4e3a\u4e00\u7ec4\u7ed9\u5b9a\u7684\u63d0\u793a\u6216\u95ee\u9898\u751f\u6210\u591a\u4e2a\u53ef\u80fd\u7684\u7b54\u6848\u3002\n\noutput_attentions\uff1a\n    output_attentions \u662f\u4e00\u4e2a\u53c2\u6570\uff0c\u7528\u4e8e\u6307\u5b9a\u662f\u5426\u8fd4\u56de\u6ce8\u610f\u529b\u77e9\u9635\u3002\u6ce8\u610f\u529b\u673a\u5236\u662f\u6df1\u5ea6\u5b66\u4e60\u4e2d\u5e38\u7528\u7684\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u5728\u7ed9\u5b9a\u8f93\u5165\u65f6\uff0c\u81ea\u52a8\u5206\u914d\u4e0d\u540c\u7684\u6743\u91cd\u7ed9\u4e0d\u540c\u7684\u8f93\u5165\u9879\uff0c\u5e76\u8ba1\u7b97\u5176\u4e0e\u8f93\u51fa\u7684\u5173\u8054\u5ea6\u3002&lt;br&gt; \u5728\u6587\u672c\u751f\u6210\u4efb\u52a1\u4e2d\uff0c\u6ce8\u610f\u529b\u673a\u5236\u53ef\u4ee5\u7528\u6765\u8ba9\u6a21\u578b\u4e86\u89e3\u8f93\u5165\u6587\u672c\u7684\u5404\u90e8\u5206\u4e4b\u95f4\u7684\u5173\u8054\uff0c\u4ece\u800c\u66f4\u597d\u5730\u751f\u6210\u4e0a\u4e0b\u6587\u76f8\u5173\u7684\u8f93\u51fa\u3002\u5982\u679c output_attentions \u88ab\u8bbe\u7f6e\u4e3a True\uff0c\u90a3\u4e48\u5728\u8c03\u7528 generate() \u65b9\u6cd5\u65f6\uff0c\u6a21\u578b\u5c06\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4 (output, attentions)\u3002\u5176\u4e2d\uff0coutput \u662f\u751f\u6210\u7684\u6587\u672c\u5e8f\u5217\uff0cattentions \u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u5305\u542b\u6bcf\u4e2a\u5c42\u6b21\u7684\u6ce8\u610f\u529b\u77e9\u9635\u3002\u6ce8\u610f\u529b\u77e9\u9635\u662f\u4e00\u4e2a\u4e09\u7ef4\u5f20\u91cf\uff0c\u5176\u7ef4\u5ea6\u4e3a [batch_size, num_heads, sequence_length, sequence_length]\uff0c\u5176\u4e2d\uff0cbatch_size \u8868\u793a\u8f93\u5165\u7684\u6837\u672c\u6570\uff0cnum_heads \u8868\u793a\u6ce8\u610f\u529b\u5934\u6570\uff0csequence_length \u8868\u793a\u8f93\u5165\u5e8f\u5217\u7684\u957f\u5ea6\u3002\n</code></pre> <p>inference</p> Bash<pre><code>docker run --rm -it -p 8010:8000 -v /path/to/models:/models -e MODEL=/models/ggml-model-name.bin ghcr.io/abetlen/llama-cpp-python:latest\n</code></pre>"},{"location":"llm/Sora%E8%B7%AF%E7%BA%BF/","title":"Sora\u7684\u524d\u4e16\u4eca\u751f\uff1a\u4ece\u6587\u751f\u56fe\u5230\u6587\u751f\u89c6\u9891","text":"<p>\u4f18tech\u5206\u4eab\uff5c</p> <p>\u57282\u670816\u65e5\u51cc\u6668\uff0cOpenAI\u9996\u6b3e\u6587\u672c\u751f\u6210\u89c6\u9891\u6a21\u578bSora\u6b63\u5f0f\u4eae\u76f8\uff0c\u8fc5\u901f\u5728\u7f51\u7edc\u4e0a\u5f15\u53d1\u5e7f\u6cdb\u5173\u6ce8\u3002\u5bf9\u4e8eSora\u80cc\u540e\u7684\u6280\u672f\u539f\u7406\uff0c\u7f51\u7edc\u4e0a\u5df2\u7ecf\u5145\u65a5\u7740\u5404\u79cd\u5206\u6790\u548c\u731c\u6d4b\uff0c\u5176\u4e2d\u5927\u591a\u6570\u5206\u6790\u90fd\u662f\u4ece\u6280\u672f\u62a5\u544a\u5165\u624b\uff0c\u5bf9\u4e8e\u666e\u901a\u8bfb\u8005\u6765\u8bf4\u96be\u5ea6\u76f8\u5bf9\u8f83\u9ad8\u3002\u4e3a\u4e86\u4f7f\u6280\u672f\u539f\u7406\u66f4\u52a0\u901a\u4fd7\u6613\u61c2\uff0c\u672c\u6587\u5c06\u4ece\u6587\u672c\u751f\u6210\u56fe\u50cf\u5230\u6587\u672c\u751f\u6210\u89c6\u9891\u7684\u6280\u672f\u6f14\u8fdb\u89d2\u5ea6\u8fdb\u884c\u5256\u6790\uff0c\u89e3\u8bfb\u4eceAE\u3001VAE\u3001DDPM\u3001LDM\u5230DiT\u548cSora\u7684\u6280\u672f\u53d1\u5c55\u8def\u7ebf\uff0c\u65e8\u5728\u4e3a\u8bfb\u8005\u63d0\u4f9b\u4e00\u6761\u6e05\u6670\u7b80\u660e\u7684\u6280\u672f\u8fdb\u5316\u8def\u5f84\u3002</p>"},{"location":"llm/Sora%E8%B7%AF%E7%BA%BF/#1","title":"1. \u80cc\u666f","text":"<p>\u6700\u8fd1AI\u5708\u5185\u4e43\u81f3\u6574\u4e2a\u79d1\u6280\u5708\u6700\u7206\u7684\u65b0\u95fb\u83ab\u8fc7\u4e8eOpenAI\u7684Sora\u4e86\uff0c\u611f\u89c9\u70ed\u5ea6\u751a\u81f3\u8fdc\u8d85\u4e4b\u524dChatGPT\u53d1\u5e03\u65f6\u7684\u70ed\u5ea6\u3002OpenAI\u4e5f\u662f\u653e\u51fa\u4e86Sora\u7684\u6280\u672f\u62a5\u544a\uff08\u6709\u4e00\u5b9a\u7684\u4fe1\u606f\u91cf\uff0c\u4e5f\u7559\u4e0b\u4e86\u5927\u91cf\u7684\u60f3\u8c61\u7a7a\u95f4\uff09\u3002</p> <p>\u6280\u672f\u62a5\u544a\u4f20\u9001\u95e8\uff1a https://openai.com/research/video-generation-models-as-world-simulators</p> <p>\u4eca\u5929\u5c31\u6765\u5c1d\u8bd5\u804a\u4e00\u4e0bSora\u7684\u524d\u4e16\u4eca\u751f\uff0c\u6b22\u8fce\u4ea4\u6d41\u8ba8\u8bba\u6279\u8bc4\u6307\u6b63\uff01</p> <p>\u65e0\u8bba\u662f\u6587\u751f\u56fe\u8fd8\u662f\u6587\u751f\u89c6\u9891\uff0c\u5f88\u591a\u8fd9\u65b9\u9762\u7684\u5de5\u4f5c\u5176\u5b9e\u90fd\u53ef\u4ee5\u770b\u6210\u662f\u81ea\u7f16\u7801\u5668\u7684\u8fdb\u9636\u7248\u672c\uff0c\u8ba9\u6211\u4eec\u4ece\u81ea\u7f16\u7801\u5668\u5f00\u59cb\u5165\u624b\u3002</p> <p>\u81ea\u7f16\u7801\u5668\uff08Autoencoder\uff09\uff1a\u538b\u7f29\u5927\u4e8e\u751f\u6210</p> <p>\u81ea\u7f16\u7801\u5668\u7531\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\u4e24\u4e2a\u90e8\u5206\u6784\u6210</p> <p>\u7f16\u7801\u5668\u8d1f\u8d23\u5b66\u4e60\u8f93\u5165\u5230\u7f16\u7801\u7684\u6620\u5c04 \uff0c\u5c06\u9ad8\u7ef4\u8f93\u5165\uff08\u4f8b\u5982\u56fe\u7247\uff09\u8f6c\u5316\u4e3a\u4f4e\u7ef4\u7f16\u7801</p> <p>\u89e3\u7801\u5668\u5219\u5b66\u4e60\u7f16\u7801\u5230\u8f93\u51fa\u7684\u6620\u5c04 \uff0c\u5c06\u8fd9\u4e9b\u4f4e\u7ef4\u7f16\u7801\u8fd8\u539f\u4e3a\u9ad8\u7ef4\u8f93\u51fa\uff08\u4f8b\u5982\u91cd\u6784\u7684\u56fe\u7247\uff09</p> <p></p> <p>\u6211\u4eec\u5e0c\u671b\u538b\u7f29\u524d\u548c\u8fd8\u539f\u540e\u7684\u5411\u91cf\u5c3d\u53ef\u80fd\u76f8\u4f3c\uff08\u6bd4\u5982\u8ba9\u5b83\u4eec\u7684\u5e73\u5747\u5e73\u65b9\u8bef\u5deeMSE\u5c3d\u53ef\u80fd\u5c0f\uff09</p> <p>\u8fd9\u6837\u5c31\u80fd\u8ba9\u795e\u7ecf\u7f51\u7edc\u5b66\u4f1a\u4f7f\u7528\u4f4e\u7ef4\u7f16\u7801\u8868\u5f81\u539f\u59cb\u7684\u9ad8\u7ef4\u5411\u91cf\uff08\u4f8b\u5982\u56fe\u7247\uff09\u3002</p> <p>\u90a3\u6709\u4e86\u81ea\u7f16\u7801\u5668\u80fd\u591f\u505a\u751f\u6210\u5417\uff0c\u7b54\u6848\u662f\u53ef\u4ee5\u7684\uff0c\u53ea\u8981\u7559\u4e0b\u89e3\u7801\u5668\uff0c\u6211\u968f\u4fbf\u5582\u5165\u4e00\u4e2a\u4f4e\u7ef4\u7f16\u7801\uff0c\u4e0d\u5c31\u80fd\u591f\u5f97\u5230\u4e00\u4e2a\u751f\u6210\u7684\u9ad8\u7ef4\u5411\u91cf\u4e86\uff08\u4f8b\u5982\u56fe\u7247\uff09\u3002\uff08\u5f53\u7136\uff0c\u8fd9\u91cc\u53ef\u80fd\u751f\u6210\u4e00\u8d77\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f\uff0c\u56e0\u4e3a\u8fd9\u91cc\u5bf9\u4f4e\u7ef4\u5411\u91cf\u6ca1\u6709\u505a\u51fa\u7ea6\u675f\uff0c\u81ea\u7f16\u7801\u5668\u901a\u8fc7\u5c06\u56fe\u7247\u8f6c\u5316\u4e3a\u6570\u503c\u7f16\u7801\u518d\u8fd8\u539f\u56de\u56fe\u7247\u7684\u8fc7\u7a0b\uff0c\u53ef\u80fd\u5bfc\u81f4\u5bf9\u8bad\u7ec3\u6570\u636e\u8fc7\u62df\u5408\u3002\u7ed3\u679c\u5c31\u662f\uff0c\u5bf9\u4e8e\u672a\u89c1\u8fc7\u7684\u4f4e\u7ef4\u7f16\u7801\uff0c\u89e3\u7801\u5668\u91cd\u6784\u7684\u56fe\u7247\u8d28\u91cf\u901a\u5e38\u4e0d\u4f73\u3002\u56e0\u6b64\u81ea\u7f16\u7801\u5668\u66f4\u591a\u7528\u4e8e\u6570\u636e\u538b\u7f29\u3002\uff09</p>"},{"location":"llm/Sora%E8%B7%AF%E7%BA%BF/#variational-autoencoders","title":"\u53d8\u5206\u81ea\u7f16\u7801\u5668\uff08Variational Autoencoders\uff09\uff1a\u8fc8\u5411\u66f4\u9c81\u68d2\u5730\u751f\u6210","text":"<p>\u81ea\u7f16\u7801\u5668\u4e0d\u64c5\u957f\u56fe\u7247\u751f\u6210\u662f\u56e0\u4e3a\u8fc7\u62df\u5408\uff0c\u90a3\u5982\u679c\u80fd\u591f\u89e3\u51b3\u8fc7\u62df\u5408\u95ee\u9898\uff0c\u4e0d\u5c31\u80fd\u62ff\u6765\u751f\u6210\u56fe\u7247\u4e86\uff01</p> <p>\u53d8\u5206\u81ea\u7f16\u7801\u5668\u505a\u7684\u5c31\u662f\u8fd9\u4e48\u4e00\u4ef6\u4e8b\uff1a\u65e2\u7136\u81ea\u7f16\u7801\u5668\u5c06\u56fe\u7247\u7f16\u7801\u4e3a\u786e\u5b9a\u6027\u7684\u6570\u503c\u7f16\u7801\u4f1a\u5bfc\u81f4\u8fc7\u62df\u5408\uff0c\u53d8\u5206\u81ea\u7f16\u7801\u5668\u5c31\u5c06\u56fe\u7247\u7f16\u7801\u4e3a\u4e00\u4e2a\u5177\u6709\u968f\u673a\u6027\u7684\u6982\u7387\u5206\u5e03\uff0c\u6bd4\u5982\u6807\u51c6\u6b63\u6001\u5206\u5e03\u3002 \u8fd9\u6837\u5f53\u6a21\u578b\u8bad\u7ec3\u597d\u540e\uff0c\u6211\u4eec\u53ea\u8981\u7ed9\u89e3\u7801\u5668\u5582\u5165\u91c7\u6837\u81ea\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684\u4f4e\u7ef4\u5411\u91cf\uff0c\u5c31\u80fd\u591f\u751f\u6210\u8f83\u4e3a\u201c\u771f\u5b9e\u201d\u7684\u56fe\u7247\u4e86\u3002</p> <p></p> <p>\u56e0\u6b64\uff0c\u53d8\u5206\u81ea\u7f16\u7801\u5668\u9664\u4e86\u5e0c\u671b\u7f16\u7801\u524d\u548c\u89e3\u7801\u540e\u7684\u6837\u672c\u5c3d\u53ef\u80fd\u76f8\u4f3c\uff08MSE\u5c3d\u53ef\u80fd\u5c0f\uff09\uff0c\u8fd8\u5e0c\u671b\u7528\u4e8e\u89e3\u7801\u7684\u6570\u636e\u670d\u4ece\u6807\u51c6\u6b63\u6001\u5206\u5e03\uff0c\u4e5f\u5c31\u662f\u4f4e\u7ef4\u7f16\u7801\u7684\u5206\u5e03\u548c\u6807\u51c6\u6b63\u6001\u5206\u5e03\u7684KL\u6563\u5ea6\u5c3d\u53ef\u80fd\u5c0f\uff0c\u635f\u5931\u51fd\u6570\u52a0\u4e0a\u8fd9\u4e48\u4e00\u9879\u7ea6\u675f\u3002</p> <p>\u53d8\u5206\u81ea\u7f16\u7801\u5668\u4e2d\u6d89\u53ca\u5230\u4e86\u4ece\u6807\u51c6\u6b63\u6001\u5206\u5e03\u4e2d\u8fdb\u884c\u91c7\u6837\uff0c\u56e0\u6b64\u4f5c\u8005\u5f15\u5165\u4e86\u4e00\u79cd\u53c2\u6570\u5316\u7684\u6280\u5de7\uff08\u4e5f\u662f\u4e3a\u4e86\u8bef\u5dee\u80fd\u591f\u53cd\u5411\u4f20\u64ad\uff09\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4e86\u89e3\u3002</p> <p>\u6b64\u5916\uff0cVQ-VAE\u3001VQ-GAN \u4e5f\u662f\u4e00\u4e9b\u503c\u5f97\u5b66\u4e60\u7684\u5de5\u4f5c\u3002\u7531\u4e8e\u4e0d\u5f71\u54cd\u5bf9\u540e\u7eed\u7684\u7406\u89e3\uff0c\u8fd9\u91cc\u4e0d\u518d\u8fdb\u884c\u8d58\u8ff0\u3002</p> <p>\u53d8\u5206\u81ea\u7f16\u7801\u5668\u51cf\u8f7b\u4e86\u81ea\u7f16\u7801\u5668\u8fc7\u62df\u5408\u7684\u95ee\u9898\uff0c\u4e5f\u786e\u5b9e\u80fd\u591f\u7528\u6765\u505a\u56fe\u7247\u7684\u751f\u6210\u4e86\uff0c\u4f46\u662f\u5927\u5bb6\u4f1a\u53d1\u73b0\u7528\u5b83\u751f\u6210\u56fe\u7247\u901a\u5e38\u4f1a\u6bd4\u8f83\u6a21\u7cca\u3002\u53ef\u4ee5\u8fd9\u6837\u60f3\u4e00\u4e0b\uff0c\u53d8\u5206\u81ea\u7f16\u7801\u5668\u7684\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\u90fd\u662f\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\uff0c\u7f16\u7801\u8fc7\u7a0b\u548c\u89e3\u7801\u8fc7\u7a0b\u90fd\u662f\u4e00\u6b65\u5c31\u5230\u4f4d\u4e86\uff0c\u4e00\u6b65\u5230\u4f4d\u53ef\u80fd\u5e26\u6765\u7684\u95ee\u9898\u5c31\u662f\u5efa\u6a21\u6982\u7387\u5206\u5e03\u7684\u80fd\u529b\u6709\u9650/\u6216\u8005\u8bf4\u80fd\u591f\u5bf9\u56fe\u7247\u751f\u6210\u8fc7\u7a0b\u65bd\u52a0\u7684\u7ea6\u675f\u662f\u6709\u9650\u7684/\u6216\u8005\u8bf4\u201c\u53ef\u63a7\u6027\u201d\u662f\u6bd4\u8f83\u4f4e\u7684\u3002</p>"},{"location":"llm/Sora%E8%B7%AF%E7%BA%BF/#ddpm","title":"\u53bb\u566a\u6269\u6563\u6982\u7387\u6a21\u578b\uff08DDPM\uff09\uff1a\u6162\u5de5\u51fa\u7ec6\u6d3b","text":"<p>\u65e2\u7136\u53d8\u5206\u81ea\u7f16\u7801\u5668\u4e00\u6b65\u5230\u4f4d\u7684\u7f16\u89e3\u7801\u65b9\u5f0f\u53ef\u80fd\u5bfc\u81f4\u751f\u6210\u56fe\u7247\u7684\u6548\u679c\u4e0d\u592a\u7406\u60f3\uff0cDDPM\u5c31\u8003\u8651\u62c6\u6210\u591a\u6b65\u6765\u505a\uff0c\u5b83\u5c06\u7f16\u7801\u8fc7\u7a0b\u548c\u89e3\u7801\u8fc7\u7a0b\u5206\u89e3\u4e3a\u591a\u6b65\uff1a</p> <p>\u7f16\u7801\u8fc7\u7a0b</p> <p>\u89e3\u7801\u8fc7\u7a0b</p> <p>\u56e0\u6b64\uff0c\u6240\u8c13\u7684\u6269\u6563\u6a21\u578b\u7531\u4e24\u4e2a\u9636\u6bb5\u6784\u6210</p> <ul> <li>\u524d\u5411\u6269\u6563\u8fc7\u7a0b\uff0c\u6bd4\u5982\u7ed9\u5b9a\u4e00\u5f20\u7167\u7247\uff0c\u4e0d\u65ad\uff08\u4e5f\u5c31\u662f\u591a\u6b65\uff09\u5f80\u56fe\u7247\u4e0a\u6dfb\u52a0\u566a\u58f0\uff0c\u76f4\u5230\u6700\u540e\u8fd9\u6837\u56fe\u7247\u770b\u4e0a\u53bb\u4ec0\u4e48\u90fd\u4e0d\u662f\uff08\u5c31\u662f\u4e2a\u7eaf\u566a\u58f0\uff09</li> <li>\u53cd\u5411\u53bb\u566a\u8fc7\u7a0b\uff0c\u7ed9\u5b9a\u566a\u58f0\uff0c\u4e0d\u65ad\u6267\u884c\u53bb\u566a\u7684\u8fd9\u4e00\u64cd\u4f5c\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u5f20\u201c\u771f\u5b9e\u597d\u770b\u201d\u7684\u7167\u7247</li> </ul> <p>\u4e0b\u56fe\u4e2d\u4ece\u53f3\u5f80\u5de6\u5c31\u662f\u524d\u5411\u6269\u6563\u7684\u8fc7\u7a0b\uff0c\u4ece\u5de6\u5f80\u53f3\u5c31\u662f\u53cd\u5411\u53bb\u566a\u7684\u8fc7\u7a0b</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u6bcf\u4e00\u6b65\u7684\u4e0b\u6807\u6709\u4e00\u4e2a\uff0c\u7684\u8303\u56f4\u4ece\u5230\uff0c\u4ee3\u8868\u4ece\u6570\u636e\u96c6\u4e2d\u91c7\u6837\u51fa\u4e00\u5f20\u56fe\u7247\uff0c\u524d\u5411\u8fc7\u7a0b\u5728\u6bcf\u4e00\u6b65\u4ece\u9ad8\u65af\u5206\u5e03\u4e2d\u91c7\u6837\u51fa\u566a\u58f0\u53e0\u52a0\u5230\u65f6\u523b\u7684\u56fe\u50cf\u4e0a\uff0c\u5f53\u8db3\u591f\u5927\u65f6\uff0c\u6700\u7ec8\u4f1a\u5f97\u5230\u4e00\u4e2a\u5404\u5411\u540c\u6027\u7684\u9ad8\u65af\u5206\u5e03\uff08\u7403\u5f62\u9ad8\u65af\u5206\u5e03\uff0c\u4e5f\u5c31\u662f\u5404\u4e2a\u65b9\u5411\u65b9\u5dee\u90fd\u4e00\u6837\u7684\u591a\u7ef4\u9ad8\u65af\u5206\u5e03)\u3002</p> <p>\u5f15\u7528\u4e00\u4e2a\u82cf\u5251\u6797\u5927\u4f6c\u7684\u6bd4\u55bb\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3\uff1a\u6211\u4eec\u53ef\u4ee5\u5c06\u6269\u6563\u8fc7\u7a0b\u60f3\u8c61\u4e3a\u5efa\u697c\uff0c\u5176\u4e2d\u968f\u673a\u566a\u58f0\u662f\u7816\u74e6\u6c34\u6ce5\u7b49\u539f\u6750\u6599\uff0c\u6837\u672c\u6570\u636e\u662f\u9ad8\u697c\u5927\u53a6\uff0c\u6240\u4ee5\u751f\u6210\u6a21\u578b\u5c31\u662f\u4e00\u652f\u7528\u539f\u6750\u6599\u5efa\u8bbe\u9ad8\u697c\u5927\u53a6\u7684\u65bd\u5de5\u961f\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u80af\u5b9a\u5f88\u96be\u7684\uff0c\u4f46\u4fd7\u8bdd\u8bf4\u201c\u7834\u574f\u5bb9\u6613\u5efa\u8bbe\u96be\u201d\uff0c\u5efa\u697c\u4f60\u4e0d\u4f1a\uff0c\u62c6\u697c\u4f60\u603b\u4f1a\u4e86\u5427\uff1f\u6211\u4eec\u8003\u8651\u5c06\u9ad8\u697c\u5927\u53a6\u4e00\u6b65\u6b65\u5730\u62c6\u4e3a\u7816\u74e6\u6c34\u6ce5\u7684\u8fc7\u7a0b\uff0c\u5f53\u6211\u4eec\u6709\u4e86\u201c\u62c6\u697c\u201d\u7684\u4e2d\u95f4\u8fc7\u7a0b\u540e\uff0c\u6211\u4eec\u77e5\u9053\u62c6\u697c\u7684\u6bcf\u4e00\u6b65\u662f\u5982\u4f55\u5b8c\u6210\u7684\uff0c\u90a3\u53cd\u8fc7\u6765\u4e0d\u5c31\u662f\u5efa\u697c\u7684\u4e00\u6b65\uff1f\u5982\u679c\u6211\u4eec\u80fd\u5b66\u4f1a\u4e24\u8005\u4e4b\u95f4\u7684\u53d8\u6362\u5173\u7cfb\uff0c\u90a3\u4e48\u4ece\u51fa\u53d1\uff0c\u53cd\u590d\u5730\u6267\u884c\u4e00\u6b65\u5efa\u697c\u7684\u8fc7\u7a0b\uff0c\u6700\u7ec8\u4e0d\u5c31\u80fd\u9020\u51fa\u9ad8\u697c\u5927\u53a6\u51fa\u6765\uff1f</p> <p>DDPM\u901a\u8fc7\u591a\u6b65\u8fed\u4ee3\u751f\u6210\u5f97\u5230\u56fe\u7247\u7f13\u89e3\u4e86\u53d8\u5206\u81ea\u7f16\u7801\u5668\u751f\u6210\u56fe\u7247\u6a21\u7cca\u7684\u95ee\u9898\uff0c\u4f46\u662f\u7531\u4e8e\u591a\u6b65\u53bb\u566a\u8fc7\u7a0b\u9700\u8981\u5bf9\u540c\u4e00\u5c3a\u5bf8\u7684\u56fe\u7247\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\uff0c\u4e5f\u5c31\u5bfc\u81f4\u4e86\u8d8a\u5927\u7684\u56fe\u7247\u9700\u8981\u7684\u8ba1\u7b97\u8d44\u6e90\u8d8a\u591a\uff08\u539f\u6765\u53ea\u8981\u5904\u7406\u4e00\u6b21\uff0c\u73b0\u5728\u6709\u51e0\u6b65\u5c31\u8981\u5904\u7406\u51e0\u6b21\uff09\u3002</p>"},{"location":"llm/Sora%E8%B7%AF%E7%BA%BF/#ddpm_1","title":"DDPM\u7ec6\u8282\u63a8\u5bfc\uff08\u9009\u8bfb\uff09","text":"<p>\u4e0b\u9762\u4ece\u6570\u5b66\u4e00\u70b9\u7684\u89d2\u5ea6\u5bf9DDPM\u8fdb\u884c\u4ecb\u7ecd\uff0c\u4e0d\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7</p> <p>\u5047\u8bbe\u539f\u59cb\u6570\u636e\u7684\u5206\u5e03\u4e3a\uff0c\u4ece\u6570\u636e\u96c6\u4e2d\u62ff\u51fa\u4e00\u5f20\u56fe\u7247\u5c31\u7c7b\u4f3c\u4e8e\u4ece\u539f\u59cb\u6570\u636e\u5206\u5e03\u4e2d\u8fdb\u884c\u91c7\u6837\uff0c\u8fdb\u4e00\u6b65\u53ef\u4ee5\u5b9a\u4e49\u7b2c\u6b65\u7684\u524d\u5411\u6269\u6563\u8fc7\u7a0b\u4e3a</p> <p>\u5176\u4e2d\u662f\u7b2c\u6b65\u7684\u65b9\u5dee\uff0c\u4e14\u670d\u4ece\u4e00\u4e2a\u6307\u5b9a\u7684\u53d8\u5316\u89c4\u5f8b\uff08schedule\uff09\uff0c\u6bd4\u5982\u53ef\u4ee5\u662f\u7ebf\u6027\u53d8\u5316\u3001\u4e8c\u6b21\u53d8\u6362\u3001\u6216\u8005\u6309\u7167\u6b63\u4f59\u5f26\u7684\u65b9\u5f0f\u8fdb\u884c\u53d8\u5316\uff08\u6709\u70b9\u7c7b\u4f3c\u4e8e\u5b66\u4e60\u7387\u53d8\u5316\u7684\u90a3\u79cd\u610f\u601d\uff09\u3002</p> <p>\u6709\u4e86\u540e\uff0c\u6839\u636e\u524d\u5411\u6269\u6563\u8fc7\u7a0b\u7684\u6761\u4ef6\u5206\u5e03\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ece\u9ad8\u65af\u5206\u5e03\u4e2d\u91c7\u6837\u5f97\u5230</p> <p>\u5176\u4e2d.</p> <p>PS\uff1a\u4e3a\u4ec0\u4e48\u5747\u503c\u524d\u9762\u6709\u4e2a\u7cfb\u6570\uff1f\u5176\u5b9e\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6761\u4ef6\u6982\u7387\u5177\u6709\u5355\u4f4d\u65b9\u5dee\u3002</p> <p>\u6839\u636e\u524d\u5411\u6269\u6563\u8fd9\u4e2a\u6761\u4ef6\u5206\u5e03\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u5176\u4e00\u6b65\u4e00\u6b65\u5c55\u5f00\u6765\u770b\u548c\u7684\u5173\u7cfb\uff0c\u6bd4\u5982\u5c06</p> <p>\u4ee3\u5165</p> <p>\u53ef\u4ee5\u5f97\u5230\u548c\u7684\u5173\u7cfb\u3002\u8fdb\u4e00\u6b65\u5982\u679c\u5c06\u6bcf\u4e00\u6b65\u7684\u6269\u6563\u8fc7\u7a0b\u4e0d\u8fc7\u4ee3\u5165\u6d88\u5143\uff0c\u6700\u7ec8\u53ef\u4ee5\u5f97\u5230</p> <p>\u5176\u4e2d\uff0c\u8fd9\u4e00\u6027\u8d28\u4e5f\u88ab\u79f0\u4e3a\u201cnice property\u201d\u3002</p> <p>\u6709\u4e86\u4e0a\u8ff0\u524d\u5411\u6269\u6563\u8fc7\u7a0b\u7684\u5b9a\u4e49\u548c\u6027\u8d28\uff0c\u7ed9\u5b9a\u6570\u636e\uff0c\u5c31\u53ef\u4ee5\u4e00\u6b65\u6b65\u53e0\u52a0\u566a\u58f0\u5f97\u5230\uff0c\u5176\u4e2d\u4e3a\u7eaf\u566a\u58f0\uff08\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6839\u636enice property\u5f97\u5230\u4efb\u610f\u65f6\u523b\u7684\uff09\uff1b\u800c\u53cd\u5411\u53bb\u566a\u7684\u8fc7\u7a0b\u5219\u662f\u4ece\u566a\u58f0\u4e2d\u91c7\u6837\u4e00\u4e2a\u51fa\u6765\uff0c\u7136\u540e\u6839\u636e\u67d0\u4e2a\u4e00\u6b65\u6b65\u53bb\u566a\uff0c\u6700\u7ec8\u5f97\u5230\u3002\u56de\u987e\u4e00\u4e0b\u524d\u9762\u53e0\u52a0\u566a\u58f0\uff08\u6216\u8005\u8bf4\u62c6\u697c\uff09\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8bb8\u591a\u7684\u6837\u672c\u5bf9\uff0c\u90a3\u4e48\u201c\u5efa\u697c\u201d\u81ea\u7136\u5c31\u662f\u4ece\u8fd9\u4e9b\u6570\u636e\u5bf9\u4e2d\u5b66\u4e60\u4e00\u4e2a\u4ece\u5230\u7684\u6a21\u578b\uff0c\u4e5f\u53ef\u4ee5\u8868\u793a\u4e3a\u6982\u7387\u5206\u5e03\uff0c\u53c8\u56e0\u4e3a\u8fd9\u4e2a\u6a21\u578b\u662f\u672a\u77e5\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u91c7\u7528\u795e\u7ecf\u7f51\u7edc\u6765\u8fd1\u4f3c\u5b83\uff01</p> <p>\u795e\u7ecf\u7f51\u7edc\u53ef\u4ee5\u88ab\u770b\u4f5c\u4e00\u4e2a\u51fd\u6570\u8fd1\u4f3c\u5668\uff0c\u4e5f\u5c31\u662f\u8f93\u5165\u4e3a\u7684\u51fd\u6570\uff0c\u8bb0\u4f5c\uff0c\u5efa\u697c\u7684\u8fc7\u7a0b\u5c31\u662f\u5e0c\u671b\u548c\u5c3d\u53ef\u80fd\u63a5\u8fd1\uff0c\u6bd4\u5982\u8bf4\u4ed6\u4eec\u7684\u6b27\u5f0f\u8ddd\u79bb\u5c3d\u53ef\u80fd\u5c0f</p> <p>\u4e0d\u8fc7\u76f4\u63a5\u8ba9\u795e\u7ecf\u7f51\u7edc\u76f4\u63a5\u4ece\u6765\u9884\u6d4b\u96be\u5ea6\u4e5f\u8fd8\u662f\u6bd4\u8f83\u5927\u7684\uff0c\u662f\u4e0d\u662f\u53ef\u4ee5\u8003\u8651\u7b80\u5316\u4e00\u4e0b\uff1f\u56de\u987e\u4e4b\u524d\u5728\u201c\u62c6\u697c\u201d\u7684\u8fc7\u7a0b\u4e2d\u5176\u5b9e\u5df2\u7ecf\u5177\u5907\u4ece\u5230\u7684\u4e00\u4e2a\u5173\u7cfb\u8868\u793a</p> <p>\u90a3\u4e5f\u5c31\u53ef\u4ee5\u901a\u8fc7\u79fb\u9879\u7136\u540e\u505a\u4e2a\u9664\u6cd5\u5f97\u5230</p> <p>\u8fd9\u91cc\u5c31\u662f\u4e2a\u7cfb\u6570\uff0c\u662f\u4ec0\u4e48\u5148\u4e0d\u7ba1\uff0c\u4f46\u662f\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u662f\u4ece\u5230\u7684\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u4e5f\u80fd\u591f\u542f\u53d1\u7b97\u6cd5\u7684\u8bbe\u8ba1\uff0c\u5982\u679c\u628a\u53f3\u8fb9\u770b\u4f5c\uff0c\u7531\u4e8e\u662f\u786e\u5b9a\u7684\uff0c\u90a3\u4e48\u53ef\u4ee5\u8868\u793a\u4e3a</p> <p>\u5176\u4e2d\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u786e\u5b9a\u9879\uff0c\u662f\u4e0d\u662f\u4e5f\u610f\u5473\u7740\u6211\u4eec\u53ea\u9700\u8981\u53bb\u9884\u6d4b\u65f6\u523b\u7684\u566a\u58f0\u5c31\u53ef\u4ee5\u4e86\uff01 \u63a5\u7740\u628a\u795e\u7ecf\u7f51\u7edc\u7684\u9884\u6d4b\u4ee3\u5165\u5e0c\u671b\u6700\u5c0f\u5316\u7684\u635f\u5931\u51fd\u6570\u4e2d\uff0c\u5316\u7b80\u53ef\u4ee5\u5f97\u5230</p> <p>\u7efc\u4e0a\uff0c\u7b97\u6cd5\u7684\u8bad\u7ec3\u6d41\u7a0b\u53ef\u4ee5\u8868\u793a\u4e3a</p> <p></p> <p>\u7b97\u6cd5\u6d41\u7a0b</p> <ul> <li>\u968f\u673a\u4ece\u6570\u636e\u96c6\u4e2d\u91c7\u6837\u56fe\u7247</li> <li>\u968f\u673a\u91c7\u6837\u4e00\u4e2a\u6b65\u6570</li> <li>\u4ece\u9ad8\u65af\u5206\u5e03\u4e2d\u91c7\u6837\u4e00\u4e2a\u566a\u58f0\u5e76\u901a\u8fc7nice property\u5f97\u5230\u6b65\u540e\u542b\u566a\u7684\u56fe\u7247</li> <li>\u795e\u7ecf\u7f51\u7edc\u6839\u636e\u9884\u6d4b\u566a\u58f0\uff0c\u8ba1\u7b97\u8bef\u5dee\uff0c\u53cd\u5411\u4f20\u64ad</li> </ul> <p>PS\uff1a\u5728\u539f\u8bba\u6587\u4e2d\u4f5c\u8005\u628a\u65b9\u5dee\u7ed9\u56fa\u5b9a\u4f4f\u4e86\uff0c\u4ec5\u5b66\u4e60\u5747\u503c\u90e8\u5206\u6765\u5b9e\u73b0\u53bb\u566a\u7684\u6548\u679c\uff08\u5f53\u7136\uff0c\u540e\u7eed\u4e5f\u6709\u6539\u8fdb\u8bba\u6587\u63d0\u51fa\u628a\u65b9\u5dee\u4e5f\u4e00\u8d77\u62ff\u6765\u5b66\u4e60\uff09\u3002</p> <p>\u77e5\u9053\u8fd9\u4e2a\u7f51\u7edc\u600e\u4e48\u8bad\u7ec3\u4e86\uff0c\u6211\u4eec\u518d\u6765\u601d\u8003\u4e00\u4e0b\u7f51\u7edc\u7684\u7ed3\u6784\u8be5\u5982\u4f55\u8bbe\u8ba1\u3002\u7531\u4e8e\u7f51\u7edc\u7684\u8f93\u5165\u662f\u53e0\u52a0\u566a\u58f0\u540e\u7684\u56fe\u7247\uff08\u4ee5\u53ca\u65f6\u95f4\u6b65\u957f\uff09\uff0c\u8f93\u51fa\u4e3a\u566a\u58f0\u7684\u9884\u6d4b\uff0c\u4e5f\u5c31\u662f\u8f93\u5165\u548c\u8f93\u51fa\u7684\u7ef4\u5ea6\u5176\u5b9e\u662f\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u53ea\u8981\u6ee1\u8db3\u8f93\u5165\u8f93\u51fa\u7ef4\u5ea6\u4e00\u6837\u7684\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u90fd\u53ef\u4ee5\u62ff\u6765\u4e00\u8bd5\uff08\u6bd4\u5982\u81ea\u7f16\u7801\u5668\u3001U-net\u7b49\uff09\uff0c\u4f5c\u8005\u8fd9\u8fb9\u91c7\u7528\u7684\u5219\u662fU-net</p> <p></p> <p>U-net\u63d0\u51fa\u7684\u521d\u8877\u662f\u4e3a\u4e86\u89e3\u51b3\u533b\u5b66\u56fe\u50cf\u5206\u5272\u7684\u95ee\u9898\uff0c\u5176\u5b9e\u6574\u4f53\u6765\u770b\uff0c\u8fd9\u4e2a\u4e5f\u662f\u4e00\u4e2aEncoder-Decoder\u7684\u7ed3\u6784\u3002\u8fd9\u4e2a\u7ed3\u6784\u5148\u5bf9\u56fe\u7247\u8fdb\u884c\u5377\u79ef\u548c\u6c60\u5316\uff0c\u5728U-net\u8bba\u6587\u4e2d\u662f\u6c60\u53164\u6b21\uff0c\u6bd4\u65b9\u8bf4\u4e00\u5f00\u59cb\u7684\u56fe\u7247\u662f224x224\u7684\uff0c\u90a3\u4e48\u5c31\u4f1a\u53d8\u6210112x112\uff0c56x56,28x28,14x14\u56db\u4e2a\u4e0d\u540c\u5c3a\u5bf8\u7684\u7279\u5f81\u3002\u7136\u540e\u6211\u4eec\u5bf914x14\u7684\u7279\u5f81\u56fe\u505a\u4e0a\u91c7\u6837\u6216\u8005\u53cd\u5377\u79ef\uff0c\u5f97\u523028x28\u7684\u7279\u5f81\u56fe\uff0c\u8fd9\u4e2a28x28\u7684\u7279\u5f81\u56fe\u4e0e\u4e4b\u524d\u768428x28\u7684\u7279\u5f81\u56fe\u8fdb\u884c\u901a\u9053\u4e0a\u7684\u62fc\u63a5\uff0c\u7136\u540e\u518d\u5bf9\u62fc\u63a5\u4e4b\u540e\u7684\u7279\u5f81\u56fe\u505a\u5377\u79ef\u548c\u4e0a\u91c7\u6837\uff0c\u5f97\u523056x56\u7684\u7279\u5f81\u56fe\uff0c\u518d\u4e0e\u4e4b\u524d\u768456x56\u7684\u7279\u5f81\u62fc\u63a5\uff0c\u5377\u79ef\uff0c\u518d\u4e0a\u91c7\u6837\uff0c\u7ecf\u8fc7\u56db\u6b21\u4e0a\u91c7\u6837\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e0e\u8f93\u5165\u56fe\u50cf\u5c3a\u5bf8\u76f8\u540c\u7684224x224\u7684\u9884\u6d4b\u7ed3\u679c\u3002</p> <p>\u5bf9\u4e8e\u65f6\u95f4\u6b65\u957f\uff0c\u53ef\u4ee5\u5c06\u5176\u8f6c\u5316\u4e3atime embedding\uff08\u6bd4\u5982\u7c7b\u4f3cposition embedding\u7684\u505a\u6cd5\uff09\uff0c\u7136\u540e\u53e0\u52a0\u5230\uff08U-net\u7684\u5404\u5c42\uff09\u56fe\u7247\u4e0a\u3002</p> <p>\u6a21\u578b\u7ed3\u6784\u4e5f\u786e\u5b9a\u4e86\uff0c\u600e\u4e48\u8bad\u7ec3\u4e5f\u77e5\u9053\u4e86\uff0c\u90a3\u4e48\u8bad\u7ec3\u5b8c\u540e\u8be5\u5982\u4f55\u751f\u6210\u56fe\u7247\u5462\uff1f\u56fe\u7247\u7684\u751f\u6210\u8fc7\u7a0b\u4e5f\u79f0\u4e3a\u91c7\u6837\u7684\u8fc7\u7a0b\uff0c\u6d41\u7a0b\u5982\u4e0b</p> <p></p> <p>\u53cd\u5411\u53bb\u566a\u8fc7\u7a0b\uff1a\u4ece\u9ad8\u65af\u5206\u5e03\u4e2d\u91c7\u6837\u4e00\u4e2a\u566a\u58f0\uff0c\u4ece\u65f6\u523b\u5f00\u59cb\uff0c\u6bcf\u6b21\u901a\u8fc7\u8bad\u7ec3\u597d\u7684\u795e\u7ecf\u7f51\u7edc\u9884\u6d4b\u566a\u58f0\uff0c\u7136\u540e\u5f97\u5230\u7565\u5fae\u53bb\u566a\u540e\u7684\u56fe\u7247\uff0c\u518d\u4ee3\u5165\u795e\u7ecf\u7f51\u7edc\u9884\u6d4b\u566a\u58f0\uff0c\u4e0d\u65ad\u8fed\u4ee3\uff0c\u6700\u7ec8\u5f97\u5230\u7b2c0\u6b65\u7684\u56fe\u7247\u3002</p>"},{"location":"llm/Sora%E8%B7%AF%E7%BA%BF/#ldmvae","title":"\u6f5c\u5728\u6269\u6563\u6a21\u578b\uff08LDM\uff09\uff1a\u501f\u52a9VAE\u6765\u964d\u672c\u589e\u6548","text":"<p>\u65e2\u7136DDPM\u5728\u539f\u59cb\u7a7a\u95f4\uff08\u50cf\u7d20\u7ea7\u522b\u7684\u56fe\u7247\uff09\u8fdb\u884c\u6269\u6563\u6a21\u578b\u7684\u8bad\u7ec3\uff08hundreds of GPU days\uff09\u548c\u91c7\u6837\u6bd4\u8f83\u8d39\u8d44\u6e90\u7684\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u628a\u5b83\u964d\u7ef4\u540e\u5728latent space\u8fdb\u884c\u64cd\u4f5c\u3002\u56e0\u6b64Latent Diffusion Models\u7684\u505a\u6cd5\u5c31\u662f\u5b89\u6392\u4e0a\u4e00\u4e2a\u81ea\u7f16\u7801\u5668\u6765\u5bf9\u539f\u59cb\u56fe\u7247\u8fdb\u884c\u964d\u7ef4\uff0c\u6bd4\u5982\u539f\u6765\u7684\u56fe\u7247\u662f\u7684\uff0c\u964d\u6210\u540e\u518d\u6765\u8fdb\u884cDDPM\u8fd9\u4e00\u5957\u6d41\u7a0b\uff0c\u751f\u6210\u56fe\u7247\u65f6\u5219\u662f\u901a\u8fc7\u6269\u6563\u6a21\u578b\u62ff\u5230\u5927\u5c0f\u7684\u56fe\u7247\uff0c\u518d\u901a\u8fc7\u81ea\u7f16\u7801\u5668\u7684\u89e3\u7801\u5668\u8fd8\u539f\u4e3a\u7684\u56fe\u7247\u3002</p>"},{"location":"llm/Sora%E8%B7%AF%E7%BA%BF/#ldm","title":"LDM\u6587\u751f\u56fe\uff08\u9009\u8bfb\uff09","text":"<p>\u4e0b\u9762\u5173\u4e8eLDM\u7684\u4e00\u4e9b\u7ec6\u8282\u4ecb\u7ecd\uff0c\u4e0d\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u3002</p> <p>\u7406\u89e3\u4e86latent\u7684\u542b\u4e49\u540e\uff0c\u63a5\u4e0b\u6765\u518d\u8003\u8651\u4e0b\u5982\u4f55\u6839\u636e\u6587\u672c\u6765\u751f\u6210\u56fe\u7247\u5462\uff1f \u65e2\u7136\u8981\u63a5\u6536\u6587\u672c\uff0c\u90a3\u5c31\u9700\u8981\u7ed9\u6a21\u578b\u5b89\u6392\u4e0a\u6587\u672c\u7f16\u7801\u5668\uff08text encoder\uff09\uff0c\u628a\u6587\u672c\u8f6c\u5316\u4e3a\u6a21\u578b\u80fd\u591f\u7406\u89e3\u7684\u4e1c\u897f\u3002Stable Diffusion\u91c7\u7528\u4e86CLIP\u7684\u6587\u672c\u7f16\u7801\u5668\uff0c\u5b83\u7684\u8f93\u5165\u662f\u4e00\u6bb5\u6587\u672c\uff0c\u8f93\u51fa\u662f77\u4e2atoken\u7684embeddings\u5411\u91cf\uff0c\u6bcf\u4e2a\u5411\u91cf\u7684\u7ef4\u5ea6\u4e3a768\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u6bb5\u8bdd\u6700\u591a\u4fdd\u755977\u4e2a\u5b57\uff08\u6216\u8bcd\uff09\uff0c\u6bcf\u4e2a\u5b57\uff08\u6216\u8bcd\uff09\u7528768\u7ef4\u7684\u5411\u91cf\u8868\u793a\uff09\u3002</p> <p>CLIP\u662f\u5728400million\u7684\u56fe\u7247\u548c\u6807\u9898\u6784\u6210\u7684\u6570\u636e\u96c6\uff08\u901a\u8fc7\u641c\u7d22\u7684\u65b9\u5f0f\uff0c\u67e5\u8be2\u4e8650w\u4e2aqueries\uff0c\u4e14\u6bcf\u4e2aquery\u4fdd\u7559\u6700\u591a2w\u6761\uff08image\uff0ctext\uff09\u6570\u636e\uff09\u4e0a\u8fdb\u884c\u8bad\u7ec3\u5f97\u5230\u7684\uff0c\u4f5c\u8005\u91c7\u7528\u4e86\u5bf9\u6bd4\u5b66\u4e60\u7684\u65b9\u5f0f\uff0c\u53ea\u9700\u8981\u9884\u6d4b\u6587\u672c\u7684\u6574\u4f53\u548c\u56fe\u50cf\u7684\u6210\u5bf9\u5173\u7cfb\uff0c\u800c\u4e0d\u9700\u8981\u9884\u6d4b\u51fa\u5177\u4f53\u6587\u672c\u7684\u6bcf\u4e00\u4e2a\u5b57\u3002 \u5047\u8bbe\u4e00\u4e2a\u6279\u6b21\u6709\u5bf9\uff08\u56fe\u50cf\uff0c\u6587\u672c\uff09\u5bf9\uff0c\u53ef\u4ee5\u6709 \u79cd\u7ec4\u5408\u65b9\u5f0f\uff0c\u5bf9\u6bd4\u5b66\u4e60\u628a\u539f\u59cb\u6570\u636e\u96c6\u4e2d\u7684\u4e2a\u7ec4\u5408\u4f5c\u4e3a\u6b63\u6837\u672c\uff08\u4e0b\u56fe\u5bf9\u89d2\u7ebf\uff09\uff0c\u628a\u5176\u4ed6\u7684 \u79cd\u7ec4\u5408\u4f5c\u4e3a\u8d1f\u6837\u672c\uff08\u4e0b\u56fe\u975e\u5bf9\u89d2\u7ebf\uff09\u6709\u4e86\u6b63\u8d1f\u6837\u672c\u540e\uff0c\u5c31\u53ef\u4ee5\u6309\u7167\u5206\u7c7b\u7684\u601d\u8def\u6765\u8bad\u7ec3\uff0c\u6bd4\u5982\u6bcf\u4e00\u884c\u5c31\u662f\u4e2aN\u5206\u7c7b\u95ee\u9898\uff0c\u5176\u4e2dlabel\u5c31\u662f\u771f\u5b9e\u7ec4\u5408\u6240\u5728\u4f4d\u7f6e\uff0c\u6bd4\u5982\u7b2c\u4e00\u884c\u7684label\u662f0\uff0c\u7b2c\u4e8c\u884c\u7684label\u662f1\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p></p> <p>\u5f97\u5230\u6587\u672c\u7684\u8868\u793a\u540e\uff0c\u5c31\u9700\u8981\u8003\u8651\u5982\u4f55\u5728\u539f\u6765\u7684U-net\u91cc\u53e0\u52a0\u4e0a\u6587\u672c\u7684\u4fe1\u606f\u5462\uff1f \u539f\u6765\u7684U-net\u7684\u8f93\u5165\u7531\u4e24\u90e8\u5206\u7ec4\u6210</p> <ul> <li>\u52a0\u566a\u540e\u7684\u56fe\u7247</li> <li>\u65f6\u95f4\u6b65\u957f\uff08\uff09</li> </ul> <p>\u73b0\u5728\u5219\u662f\u7531\u4e09\u90e8\u5206\u7ec4\u6210</p> <ul> <li>\u52a0\u566a\u540e\u7684\u56fe\u7247</li> <li>\u65f6\u95f4\u6b65\u957f\uff08\uff09</li> <li>\u6587\u672c\u7684token embedding</li> </ul> <p>\u4e3a\u4e86\u80fd\u591f\u5145\u5206\u5229\u7528\u6587\u672c\u7684\u4fe1\u606f\uff0c\u8ba9\u6a21\u578b\u6309\u7167\u6587\u672c\u7684\u610f\u601d\u6765\u7ed8\u753b\uff0cStable Diffusion\u63d0\u51fa\u4e86\u4e00\u79cd\u6587\u672c\u548c\u56fe\u7247\u4e4b\u95f4\u7684\u4ea4\u53c9\u6ce8\u610f\u529b\u673a\u5236\uff0c\u5177\u4f53\u7684</p> <p>\u5176\u4e2d\uff0c\u6765\u81ea\u4e8e\u56fe\u50cf\u4fa7\uff0c\u548c\u6765\u81ea\u4e8e\u6587\u672c\u4fa7\uff1b\u53ef\u4ee5\u7406\u89e3\u4e3a\u8ba1\u7b97\u56fe\u50cf\u548c\u6587\u672c\u7684\u76f8\u4f3c\u5ea6\uff0c\u7136\u540e\u6839\u636e\u8fd9\u4e2a\u76f8\u4f3c\u5ea6\u4f5c\u4e3a\u7cfb\u6570\u5bf9\u6587\u672c\u8fdb\u884c\u52a0\u6743\u3002 \u5728\u524d\u9762U-net\u7684\u57fa\u7840\u4e0a\uff0c\u6bcf\u4e2aresnet\u4e4b\u540e\u63a5\u4e0a\u8fd9\u6837\u4e00\u4e2a\u6ce8\u610f\u529b\u673a\u5236\u5c31\u5f97\u5230\u4e86\u6ce8\u5165\u6587\u672c\u4fe1\u606f\u7684U-net\u7684\u7ed3\u6784\u4e86\u3002</p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u50cf\u4e4b\u524d\u7684DDPM\u4e00\u6837\uff0c\u9884\u6d4b\u566a\u58f0\uff0c\u6700\u5c0f\u5316MSE\uff0c\u5b66\u4e60\u6a21\u578b\u4e86\uff01</p> <p>\u6700\u540e\u518d\u6765\u4e00\u5f20\u6574\u4f53\u7684\u7ed3\u6784\u56fe\u603b\u7ed3\u4e00\u4e0b</p> <p></p>"},{"location":"llm/Sora%E8%B7%AF%E7%BA%BF/#diffusion-transformersdittransformer","title":"Diffusion Transformers\uff08DiT\uff09\uff1a\u5f53\u6269\u6563\u6a21\u578b\u9047\u5230Transformer","text":"<p>LDM\u7684\u6269\u6563\u6a21\u578b\u4f7f\u7528\u4e86U-net\u8fd9\u4e00\u7f51\u7edc\u7ed3\u6784\uff0c\u4f46\u8fd9\u4e2a\u7ed3\u6784\u4f1a\u662f\u6700\u4f73\u7684\u5417\uff1f</p> <p>\u53c2\u8003\u5176\u4ed6\u9886\u57df\u6216\u8005\u4efb\u52a1\u7684\u7ecf\u9a8c\uff0c\u6bd4\u5982\u53bb\u5e74\u706b\u4e86\u4e00\u6574\u5e74\u7684\u5927\u8bed\u8a00\u6a21\u578b\u3001\u591a\u6a21\u6001\u5927\u6a21\u578b\u7edd\u5927\u90e8\u5206\u7528\u7684\u90fd\u662fTransformer\u7ed3\u6784\uff0c\u76f8\u6bd4\u4e8eU-net\uff0cTransformer\u7ed3\u6784\u7684Scaling\u80fd\u529b\uff08\u6a21\u578b\u53c2\u6570\u91cf\u8d8a\u5927\uff0c\u6027\u80fd\u8d8a\u5f3a\uff09\u66f4\u53d7\u5927\u5bb6\u8ba4\u53ef\u3002\u56e0\u6b64\uff0cDiT\u5176\u5b9e\u5c31\u662f\u628aLDM\u4e2d\u7684U-net\u66ff\u6362\u6210\u4e86Transformer\uff0c\u5e76\u5728Vision Transformer\u6a21\u5757\u7684\u57fa\u7840\u4e0a\u505a\u4e86\u7565\u5fae\u7684\u4fee\u6539\u4f7f\u5f97\u5728\u56fe\u7247\u751f\u6210\u8fc7\u7a0b\u80fd\u591f\u63a5\u53d7\u4e00\u4e9b\u989d\u5916\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u65f6\u95f4\u6b65\uff0c\u6807\u7b7e\u3002</p> <p></p>"},{"location":"llm/Sora%E8%B7%AF%E7%BA%BF/#vision-transformer","title":"Vision Transformer \u57fa\u7840\uff08\u9009\u8bfb\uff09","text":"<p>\u65e2\u7136\u8981\u7528Transformer\u6765\u66ff\u6362U-net\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u4e00\u4e0bTransformer\u5982\u4f55\u5904\u7406\u56fe\u7247\u6570\u636e\u7684\u5462\uff1f\u7ecf\u5178\u4e4b\u4f5c\u5f53\u7136\u662fVision Transformer (ViT)\u4e86\uff0c\u5b83\u7684\u4e3b\u8981\u601d\u60f3\u5c31\u662f\u5c06\u56fe\u7247\u5206\u5272\u4e3a\u56fa\u5b9a\u5927\u5c0f\u7684\u56fe\u50cf\u5757\uff08image patch/token\uff09\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u56fe\u50cf\u5757\u8fdb\u884c\u7ebf\u6027\u53d8\u6362\u5e76\u6dfb\u52a0\u4f4d\u7f6e\u4fe1\u606f\uff0c\u7136\u540e\u5c06\u5f97\u5230\u7684\u5411\u91cf\u5e8f\u5217\u9001\u5165\u4e00\u4e2a\u6807\u51c6\u7684Transformer\u7f16\u7801\u5668\u3002</p> <p></p> <p>\u81f3\u4e8e\u56fe\u7247\u7684\u5207\u5272\u5206\u5757\u53ef\u4ee5\u53c2\u8003DiT\u4e2d\u7684\u8fd9\u5f20\u56fe\uff0c\u5047\u5982patch\u7684\u5927\u5c0f\u4e3a\uff0c\u90a3\u4e48\u4e00\u5f20\u7684\u56fe\u7247\u4f1a\u5207\u6210\u4e00\u4e2a\u7684\u56fe\u7247\u5757\u5e8f\u5217\uff0c\u7136\u540e\u5f53\u4f5c\u6587\u672c\u5e8f\u5217\u6765\u770b\u5f85\u5c31\u597d\u4e86\u3002</p> <p></p>"},{"location":"llm/Sora%E8%B7%AF%E7%BA%BF/#sora_1","title":"Sora\uff1a\u89c6\u9891\u751f\u6210\u7684\u65b0\u7eaa\u5143","text":"<p>\u5148\u629b\u51fa\u6211\u7684\u89c2\u70b9\uff1aSora\u5c31\u662f\u6539\u8fdb\u7684DiT\u3002</p> <p>\u800cDiT\u672c\u8d28\u4e0a\u662f VAE\u7f16\u7801\u5668 + ViT + DDPM + VAE\u89e3\u7801\u5668\uff1b\u4eceOpenAI\u7684\u6280\u672f\u62a5\u544a\u4f53\u73b0\u51fa\u6765\u7684\u521b\u65b0\u70b9\u6211\u8ba4\u4e3a\u4e3b\u8981\u6709\u4e24\u4e2a\u65b9\u9762\uff1a</p> <ul> <li>\u6539\u8fdbVAE -&gt; \u65f6\u7a7a\u7f16\u7801\u5668</li> <li>\u6539\u8fdbDiT -&gt; \u4e0d\u9650\u5236\u5206\u8fa8\u7387\u548c\u65f6\u957f</li> </ul> <p>\u81f3\u4e8e\u56fe\u50cf\u5206\u5757\u3001Scaling transformers\u3001\u89c6\u9891re-captioning\u3001\u89c6\u9891\u7f16\u8f91\uff08SDEdit\uff09\u8fd9\u4e9b\u5176\u5b9e\u90fd\u662f\u5df2\u77e5\u7684\u4e00\u4e9b\u505a\u6cd5\u4e86\u3002</p>"},{"location":"llm/Sora%E8%B7%AF%E7%BA%BF/#low","title":"\u5b9e\u73b0\u4e00\u4e2a\u6700low\u7684\u89c6\u9891\u751f\u6210\u6a21\u578b","text":"<p>\u5047\u5982\u6211\u4eec\u5177\u5907\u524d\u9762\u7684\u77e5\u8bc6\u4e86\uff0c\u6216\u8005\u8bf4\u7ed9\u4f60\u4e00\u4e2aDiT\uff08\u80fd\u591f\u8fdb\u884c\u56fe\u7247\u751f\u6210\uff09\uff0c\u5982\u4f55\u80fd\u591f\u5b9e\u73b0\u89c6\u9891\u7684\u751f\u6210\u5462\uff1f</p> <p>\u89c6\u9891\u7684\u6bcf\u4e00\u5e27\uff08frame\uff09\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u5f20\u56fe\u7247\u3002\u5728\u89c6\u9891\u64ad\u653e\u65f6\uff0c\u8fd9\u4e9b\u8fde\u7eed\u7684\u56fe\u7247\u4ee5\u4e00\u5b9a\u7684\u901f\u7387\uff08\u5e27\u7387\uff0c\u901a\u5e38\u4ee5\u6bcf\u79d2\u5e27\u6570FPS\u8868\u793a\uff09\u5feb\u901f\u64ad\u653e\uff0c\u7531\u4e8e\u4eba\u773c\u7684\u89c6\u89c9\u6682\u7559\u6548\u5e94\uff0c\u8fd9\u4e9b\u8fde\u7eed\u7684\u9759\u6001\u56fe\u7247\u5728\u89c2\u4f17\u773c\u4e2d\u5f62\u6210\u4e86\u52a8\u6001\u6548\u679c\uff0c\u4ece\u800c\u4ea7\u751f\u4e86\u89c6\u9891\u7684\u6d41\u7545\u8fd0\u52a8\u611f\u3002</p> <p>\u90a3\u8981\u5b9e\u73b0\u89c6\u9891\u751f\u6210\u662f\u4e0d\u662f\u53ef\u4ee5\u770b\u4f5c\u662f\u591a\u5e27\u56fe\u7247\u7684\u751f\u6210\uff0c\u56e0\u6b64\u6700low\u7684\u505a\u6cd5\u5c31\u662f\u628a\u89c6\u9891\u751f\u6210\u770b\u4f5c\u72ec\u7acb\u7684\u56fe\u7247\u751f\u6210\uff0c\u4f7f\u7528DiT\u751f\u6210\u591a\u5e27\u56fe\u7247\u7136\u540e\u4e32\u8d77\u6765\u5c31\u662f\u89c6\u9891\u4e86\u3002</p> <p></p> <p>\u5f53\u7136\uff0c\u8fd9\u6837\u505a\u7684\u95ee\u9898\u663e\u7136\u5f88\u5927\uff0c\u56e0\u4e3a\u6ca1\u6709\u8003\u8651\u89c6\u9891\u4e0d\u540c\u5e27\u56fe\u7247\u4e4b\u95f4\u7684\u5173\u8054\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u751f\u6210\u7684\u591a\u5e27\u56fe\u50cf\u5f88\u4e0d\u8fde\u8d2f\uff0c\u4e32\u8d77\u6765\u770b\u5c31\u4e0d\u50cf\u662f\u89c6\u9891\u4e86\u3002</p>"},{"location":"llm/Sora%E8%B7%AF%E7%BA%BF/#vae","title":"\u6539\u8fdbVAE\uff1a\u878d\u5165\u65f6\u95f4\u5173\u8054","text":"<p>\u4e3a\u4e86\u4f7f\u5f97\u89c6\u9891\u7684\u751f\u6210\u8fde\u8d2f\uff0c\u90a3\u5728VAE\u7f16\u89e3\u7801\u7684\u8fc7\u7a0b\u81ea\u7136\u9700\u8981\u53bb\u8003\u8651\u89c6\u9891\u4e0d\u540c\u5e27\u7684\u5173\u7cfb\uff0c\u539f\u6765\u5bf9\u56fe\u7247\u8fdb\u884c\u5904\u7406\u76f8\u5f53\u4e8e\u8003\u8651\u7684\u662f\u56fe\u7247\u7a7a\u95f4\u4e0a\u7684\u5173\u7cfb\uff0c\u73b0\u5728\u6362\u5230\u89c6\u9891\u5c31\u662f\u591a\u4e86\u65f6\u95f4\u4e0a\u7684\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u7ecf\u5178\u7684\u65f6\u7a7a\u8054\u5408\u5efa\u6a21\u95ee\u9898\u3002</p> <p></p> <p>\u65f6\u7a7a\u8054\u5408\u5efa\u6a21\u7684\u65b9\u6cd5\u5176\u5b9e\u975e\u5e38\u591a\u4e86\uff0c\u6bd4\u5982\u4f7f\u75283D CNN\u3001\u6bd4\u5982\u65f6\u95f4\u7a7a\u95f4\u5355\u72ec\u5904\u7406\u518d\u878d\u5408\u3001\u6bd4\u5982\u8bbe\u8ba1fancy\u7684\u6ce8\u610f\u529b\u673a\u5236\u7b49\u7b49\u3002</p> <p>\u5bf9\u5e94\u7684\u5c31\u662fSora\u6280\u672f\u62a5\u544a\u4e2d\u7684Video compression network</p> <p>We train a network that reduces the dimensionality of visual data.20 This network takes raw video as input and outputs a latent representation that is compressed both temporally and spatially.</p> <p>\u6280\u672f\u62a5\u544a\u4e2d\u6ca1\u6709\u63d0\u53ca\u5177\u4f53\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u53ef\u4ee5\u770b\u51fa\u8fd9\u91cc\u663e\u7136\u662f\u5728VAE\u7f16\u7801\u5668\u4e0a\u8003\u8651\u4e86\u65f6\u7a7a\u5efa\u6a21\uff0c\u5bf9\u4e8e\u89e3\u7801\u5668\u7684\u8bbe\u8ba1\u6ca1\u6709\u76f8\u5173\u4ecb\u7ecd\uff08\u53ef\u80fd\u4e5f\u8003\u8651\u4e86\u65f6\u7a7a\u5efa\u6a21\uff0c\u4e5f\u53ef\u80fd\u4e0d\u505a\u6539\u52a8\uff09\u3002</p> <p>\u8fd9\u91cc\u518d\u5206\u4eab\u53e6\u5916\u4e00\u4e2a\u5de5\u4f5cVideoLDM\uff0c\u4ed6\u4eec\u7684\u505a\u6cd5\u662f\u5728\u89e3\u7801\u5668\u4e0a\u63d2\u5165\u989d\u5916\u7684temporal layers\u6765\u8003\u8651\u89c6\u9891\u5e27\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u800c\u7f16\u7801\u5668\u662f\u4fdd\u6301\u4e0d\u53d8\u7684\u3002</p> <p>\u8fd9\u91cc\u989d\u5916\u63a8\u8350\u51e0\u7bc7\u89c6\u9891\u751f\u6210\u7684\u76f8\u5173\u8bba\u6587\uff0cMake-A-Video\u3001Emu Video\u3001VideoLDM\u3001AnimateDiff\u3001VideoPoet\u3001Lumiere\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4e86\u89e3\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002</p>"},{"location":"llm/Sora%E8%B7%AF%E7%BA%BF/#dit","title":"\u6539\u8fdbDiT\uff1a\u9002\u914d\u4efb\u610f\u5206\u8fa8\u7387\u548c\u65f6\u957f","text":"<p>\u7f51\u4e0a\u7684\u5f88\u591a\u5206\u4eab\u90fd\u5728\u4f20Sora\u80fd\u9002\u914d\u4efb\u610f\u5206\u8fa8\u7387\u548c\u65f6\u957f\u662f\u53c2\u8003\u4e86NaViT\u8fd9\u7bc7\u6587\u7ae0\u7684\u505a\u6cd5\uff0c\u5176\u5b9e\u5e76\u975e\u5982\u6b64\uff0cVision Transformer (ViT)\u672c\u8eab\u5c31\u80fd\u591f\u5904\u7406\u4efb\u610f\u5206\u8fa8\u7387\uff08\u4e0d\u540c\u5206\u8fa8\u7387\u5c31\u662f\u76f8\u5f53\u4e8e\u4e0d\u540c\u957f\u5ea6\u7684\u56fe\u7247\u5757\u5e8f\u5217\uff0c\u4e0d\u5c31\u7c7b\u4f3c\u4f60\u7ed9\u5927\u8bed\u8a00\u6a21\u578b\u63d0\u4f9b\u4e0d\u540c\u957f\u5ea6\u7684\u8f93\u5165\u4e00\u4e2a\u610f\u601d\uff09\uff01NaViT\u53ea\u662f\u63d0\u4f9b\u4e86\u4e00\u79cd\u9ad8\u6548\u8bad\u7ec3\u7684\u65b9\u6cd5\u3002</p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u601d\u8003\u4e0bDiT\u5982\u4f55\u5904\u7406\u4e0d\u540c\u5206\u8fa8\u7387\u548c\u65f6\u957f\u7684\u89c6\u9891\u6570\u636e\u5462\uff1f\u5047\u5982\u6211\u4eec\u6709\u4e00\u4e2a\u7684\u89c6\u9891\u4f1a\u5207\u6210\u4e00\u4e2a\u7684\u56fe\u7247\u5757\u5e8f\u5217\uff08\u5f53\u7136\u8fd9\u91cc\u56fe\u7247\u5757\u7684\u6392\u5e8f\u4e5f\u53ef\u4ee5\u6709\u4e00\u4e9b\u8bb2\u7a76\uff0c\u6bd4\u5982\u6309\u7a7a\u95f4\u7ef4\u5ea6\u6392\u5e8f\uff0c\u6216\u8005\u6309\u65f6\u95f4\u7ef4\u5ea6\u6392\u5e8f\uff09\u3002</p> <p>\u56e0\u4e3a\u3001\u3001*\u90fd\u662f\u53ef\u53d8\u7684\uff0c\u6240\u4ee5\u5173\u952e\u7684\u95ee\u9898\u5e94\u8be5\u662f\u6539\u8fdbDiT\u4f7f\u5b83\u80fd\u591f\u66f4\u597d\u5730\u8bc6\u522b\u4e0d\u540c\u56fe\u7247\u5757\u662f\u5c5e\u4e8e\u539f\u59cb\u89c6\u9891\u4e2d\u7684\u54ea\u4e2a\u533a\u57df\u3002*</p> <p>\u4e00\u79cd\u53ef\u884c\u7684\u505a\u6cd5\u5c31\u662f\u4ece\u4f4d\u7f6e\u7f16\u7801\u7684\u89d2\u5ea6\u5165\u624b\uff0c\u6bd4\u5982\u5bf9\u4e8e\u8f93\u5165Transformer\u7684\u56fe\u7247\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u5728patch embedding\u4e0a\u53e0\u52a0\u4e0a\u65f6\u95f4\u3001\u7a7a\u95f4\u4e0a\u7684\u4f4d\u7f6e\u4fe1\u606f\u3002</p> <p></p> <p>\u7c7b\u4f3c\u7684\uff0c\u5176\u5b9e\u5728ViT\u7684\u5de5\u4f5c\u4e2d\u8003\u8651\u8fc7\u4f7f\u75282D-aware position embeddings\u6765\u8868\u793a\u4e0d\u540c\u56fe\u7247\u5757\u7684\u4f4d\u7f6e\u4fe1\u606f\uff0c\u53ea\u662f\u6ca1\u6709\u4ec0\u4e48\u660e\u663e\u7684\u6548\u679c\u3002</p>"},{"location":"llm/Sora%E8%B7%AF%E7%BA%BF/#_1","title":"\u6570\u636e\u4ecd\u7136\u8fd8\u662f\u738b\u9053","text":"<p>\u5728\u6570\u636e\u5c42\u9762\u4e0a\uff0cOpenAI\u4e5f\u7ed9\u51fa\u4e86\u4e24\u70b9\u5f88\u6709\u53c2\u8003\u4ef7\u503c\u7684\u65b9\u6cd5</p> <ul> <li>\u4e0d\u5bf9\u89c6\u9891/\u56fe\u7247\u8fdb\u884c\u88c1\u526a\u7b49\u9884\u5904\u7406\uff0c\u4f7f\u7528native size</li> <li>\u6570\u636e\u7684\u8d28\u91cf\u5f88\u91cd\u8981\uff0c\u6bd4\u5982\uff08\u6587\u672c\u3001\u89c6\u9891\uff09\u8fd9\u6837\u7684\u6210\u5bf9\u6570\u636e\uff0c\u539f\u59cb\u7684\u6587\u672c\u53ef\u80fd\u5e76\u4e0d\u80fd\u5f88\u597d\u7684\u63cf\u8ff0\u89c6\u9891\uff0c\u53ef\u4ee5\u901a\u8fc7re-captioning\u7684\u65b9\u5f0f\u6765\u4f18\u5316\u6587\u672c\u63cf\u8ff0\uff0c\u8fd9\u4e00\u70b9\u5728DALL\u00b7E 3\u7684\u62a5\u544a\u4e2d\u4e5f\u5df2\u7ecf\u5f3a\u8c03\u4e86\uff0c\u8fd9\u91cc\u53ea\u662f\u8fdb\u4e00\u6b65\u4ece\u56fe\u7247re-captioning\u6269\u5c55\u5230\u89c6\u9891re-captioning\u3002</li> </ul> <p>\u90a3\u4e48DALL\u00b7E 3\u662f\u5982\u4f55\u505are-captioning\u7684\u5462\uff1f\uff08\u9009\u8bfb\uff09</p> <p>\u65e2\u7136\u662f\u751f\u6210\u6587\u672c\uff0c\u81ea\u7136\u5c31\u662f\u7c7bGPT\u7684\u8bed\u8a00\u6a21\u578b\uff0c\u505a\u7684\u5c31\u662f\u4e0b\u4e00\u4e2a\u8bcd\u9884\u6d4b\uff1b\u8003\u8651\u5230\u751f\u6210\u7684\u6587\u672c\u662f\u56fe\u50cf\u7684\u63cf\u8ff0\uff0c\u56e0\u6b64\u9700\u8981\u57fa\u4e8e\u56fe\u50cf\u8fd9\u4e2a\u6761\u4ef6\uff0c\u4e5f\u5c31\u662f\u6761\u4ef6\u751f\u6210\uff0c\u8981\u628a image \u653e\u8fdb\u53bb</p> <p>\u90a3\u4e48\u56fe\u50cf\u4ee5\u4ec0\u4e48\u5f62\u5f0f\u653e\u8fdb\u53bb\u5462\uff1f\u7b80\u5355\u70b9\uff0c\u5c31\u7528 CLIP \u6765\u7f16\u7801\u56fe\u50cf\uff0c\u7136\u540e\u628a\u56fe\u50cfembedding\u653e\u8fdb\u53bb\u5c31ok\u4e86\u3002\u90a3\u8fd9\u6837\u4e00\u4e2a\u56fe\u50cf\u6253\u6807\u6a21\u578b\u600e\u4e48\u8bad\u7ec3\u5462\uff1f\u7528\u7684\u5c31\u662f CoCa \u7684\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u540c\u65f6\u8003\u8651\u5bf9\u6bd4\u635f\u5931\u548cLM\u635f\u5931</p> <p></p>"},{"location":"llm/Sora%E8%B7%AF%E7%BA%BF/#_2","title":"\u6a21\u578b\u63a8\u7406\u7b56\u7565","text":"<p>\u5b98\u65b9\u5c55\u793aSora\u7684\u5e94\u7528\u6709\u5f88\u591a\uff0c\u6bd4\u5982\u6587\u751f\u89c6\u9891\u3001\u56fe\u751f\u89c6\u9891\u3001\u89c6\u9891\u53cd\u63a8\u3001\u89c6\u9891\u7f16\u8f91\u3001\u89c6\u9891\u878d\u5408\u7b49\u3002 \u8fd9\u91cc\u5c31\u4f1a\u6d89\u53ca\u4e00\u4e9b\u6709\u610f\u601d\u7684\u505a\u6cd5\uff0c\u6bd4\u5982\u53ef\u4ee5\u8fd9\u4e48\u505a\uff08\u4ee5\u4e0b\u505a\u6cd5\u5e76\u4e0d\u552f\u4e00\uff09</p> <p>1.\u6587\u751f\u89c6\u9891\uff1a\u5582\u5165DiT\u7684\u5c31\u662f\u6587\u672cembedding+\u5168\u566a\u58f0patch</p> <p>2.\u89c6\u9891\u7f16\u8f91\uff1a\u7c7b\u4f3cSDEdit\u7684\u505a\u6cd5\uff0c\u5728\u89c6\u9891\u4e0a\u52a0\u70b9\u566a\u58f0\uff08\u4e0d\u8981\u641e\u6210\u5168\u662f\u566a\u58f0\uff09\uff0c\u7136\u540e\u62ff\u53bb\u9010\u6b65\u53bb\u566a</p> <p>3.\u56fe\u751f\u89c6\u9891\u3001\u89c6\u9891\u53cd\u63a8\u3001\u89c6\u9891\u878d\u5408\uff1a\u5582\u5165DiT\u7684\u5c31\u662f\u6587\u672cembedding\uff08\u53ef\u9009\uff09+\u7279\u5b9a\u5e27\u7528\u7ed9\u5b9a\u56fe\u7247\u7684embedding+\u5176\u4ed6\u5e27\u7528\u5168\u566a\u58f0patch</p>"},{"location":"llm/Sora%E8%B7%AF%E7%BA%BF/#_3","title":"\u672a\u6765\u4f1a\u662f\u4ec0\u4e48\uff1f","text":"<p>\u4e0d\u77e5\u9053\u5927\u5bb6\u6709\u6ca1\u6709\u6ce8\u610f\u5230\uff0cSora\u8fd8\u63d0\u5230\u4e86\u5b83\u9664\u4e86\u6587\u751f\u89c6\u9891\uff0c\u4e5f\u652f\u6301\u6587\u751f\u56fe\uff0c\u8fd9\u91cc\u5176\u5b9e\u900f\u9732\u51fa\u4e86\u4e00\u79cd\u7edf\u4e00\u7684\u5473\u9053\u3002\u6211\u76f8\u4fe1\u672a\u6765\u7684\u53d1\u5c55\u80af\u5b9a\u4f1a\u51fa\u73b0\u66f4\u52a0\u5f3a\u5927\u7684\u591a\u6a21\u6001\u7edf\u4e00\uff0c\u8fd9\u91cc\u5f15\u7528\u4e00\u5f20\u53bb\u5e74\u6211\u5728\u4e00\u573a\u5185\u90e8\u5206\u4eab\u4e2d\u7684slides\u6765\u7ed3\u675f\u672c\u6b21\u7684\u6587\u7ae0\uff0c\u4e07\u7269\u7686\u53ef\u201c\u5206\u8bcd\u201d\uff0c\u9009\u62e9\u5408\u9002\u7684\u7f16\u7801\u5668 + Transformer\u7ed3\u6784\u6216\u5176\u4ed6 + \u5408\u9002\u7684\u89e3\u7801\u5668\uff0c\u5c31\u53ef\u80fd\u5b9e\u73b0\u5404\u79cd\u4e0d\u540c\u6a21\u6001\u4e4b\u524d\u7684\u4e92\u76f8\u8f6c\u6362\u3001\u4e92\u76f8\u751f\u6210\uff01</p> <p></p> <p>\u6bd4\u5982\u53ef\u4ee5\u53c2\u8003NExT-GPT\u7684\u4e00\u4e2a\u7ed3\u6784\u56fe</p> <p></p> <p>\u76f8\u4fe12024\u5e74\u540c\u6837\u4f1a\u662fAI\u9886\u57df\u7a81\u98de\u731b\u8fdb\u7684\u4e00\u5e74\uff0c\u671f\u5f85\u66f4\u591a\u7cbe\u5f69\u7684\u5de5\u4f5c\u3002</p> <p>\u3010\u53c2\u8003\u8d44\u6599\u3011</p> <p>Autoencoders, https://arxiv.org/abs/2003.05991</p> <p>Auto-Encoding Variational Bayes, https://arxiv.org/abs/1312.6114</p> <p>Denoising Diffusion Probabilistic Models, https://arxiv.org/abs/2006.11239</p> <p>High-Resolution Image Synthesis with Latent Diffusion Models, https://arxiv.org/pdf/2112.10752.pdf</p> <p>Scalable Diffusion Models with Transformers, https://arxiv.org/pdf/2212.09748.pdf</p> <p>An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale, https://arxiv.org/abs/2010.11929</p> <p>Sora, https://openai.com/research/video-generation-models-as-world-simulators</p> <p>Video LDM, https://arxiv.org/pdf/2304.08818.pdf</p> <p>NaViT, https://arxiv.org/abs/2307.06304</p> <p>CoCa, https://arxiv.org/pdf/2205.01917.pdf</p> <p>NExT-GPT, https://next-gpt.github.io/</p>"},{"location":"llm/llama.cpp-build/","title":"llama.cpp build","text":""},{"location":"llm/llama.cpp-build/#blas-build","title":"BLAS Build","text":"<p>Building the program with BLAS support may lead to some performance improvements in prompt processing using batch sizes higher than 32 (the default is 512). BLAS doesn't affect the normal generation performance. There are currently three different implementations of it:</p> <p>This is only available on Mac PCs and it's enabled by default. You can just build using the normal instructions.</p> <p>This provides BLAS acceleration using only the CPU. Make sure to have OpenBLAS installed on your machine.</p> <ul> <li> <p>Using <code>make</code>:</p> <ul> <li>On Linux:</li> </ul> Text Only<pre><code>make LLAMA_OPENBLAS=1 \nLLAMA_BUILD_SERVER=1\n</code></pre> <ul> <li> <p>On Windows:</p> </li> <li> <p>Download the latest fortran version of w64devkit.</p> </li> <li> <p>Download the latest version of OpenBLAS for Windows.</p> </li> <li> <p>Extract <code>w64devkit</code> on your pc.</p> </li> <li> <p>From the OpenBLAS zip that you just downloaded copy <code>libopenblas.a</code>, located inside the <code>lib</code> folder, inside <code>w64devkit\\x86_64-w64-mingw32\\lib</code>.</p> </li> <li> <p>From the same OpenBLAS zip copy the content of the <code>include</code> folder inside <code>w64devkit\\x86_64-w64-mingw32\\include</code>.</p> </li> <li> <p>Run <code>w64devkit.exe</code>.</p> </li> <li> <p>Use the <code>cd</code> command to reach the <code>llama.cpp</code> folder.</p> </li> <li> <p>From here you can run:</p> Text Only<pre><code>make LLAMA_OPENBLAS=1 LLAMA_BUILD_SERVER=1\n</code></pre> </li> </ul> </li> <li> <p>Using <code>CMake</code> on Linux:</p> Text Only<pre><code>mkdir build\ncd build\ncmake .. -DLLAMA_BLAS=ON -DLLAMA_BLAS_VENDOR=OpenBLAS\ncmake --build . --config Release\n</code></pre> </li> </ul> <p>server\u7f16\u8bd1</p> Bash<pre><code># windows\u7f16\u8bd1\u4f1a\u51fa\u73b0\u62a5\u9519 \u9700\u8981\u6dfb\u52a0\u7f16\u8bd1\u9009\u9879\n-lwsock32 -lws2_32\n\nmake LLAMA_OPENBLAS=1 LLAMA_BUILD_SERVER=1\n</code></pre>"},{"location":"llm/llama.cpp-build/#accelerate-framework","title":"Accelerate Framework:","text":""},{"location":"llm/llama.cpp-build/#openblas","title":"OpenBLAS:","text":""},{"location":"llm/llama%E9%87%8F%E5%8C%96%E6%A8%A1%E5%9E%8B/","title":"\u91cf\u5316\u6a21\u578b","text":""},{"location":"llm/llama%E9%87%8F%E5%8C%96%E6%A8%A1%E5%9E%8B/#step-2","title":"Step 2: \u751f\u6210\u91cf\u5316\u7248\u672c\u6a21\u578b","text":"<p>\u5c06\u5408\u5e76\u6a21\u578b\uff08\u9009\u62e9\u751f\u6210<code>.pth</code>\u683c\u5f0f\u6a21\u578b\uff09\u4e2d\u6700\u540e\u4e00\u6b65\u751f\u6210\u7684<code>tokenizer.model</code>\u6587\u4ef6\u653e\u5165<code>zh-models</code>\u76ee\u5f55\u4e0b\uff0c\u6a21\u578b\u6587\u4ef6<code>consolidated.*.pth</code>\u548c\u914d\u7f6e\u6587\u4ef6<code>params.json</code>\u653e\u5165<code>zh-models/7B</code>\u76ee\u5f55\u4e0b\u3002\u8bf7\u6ce8\u610fLLaMA\u548cAlpaca\u7684<code>tokenizer.model</code>\u4e0d\u53ef\u6df7\u7528\uff08\u539f\u56e0\u89c1\u8bad\u7ec3\u7ec6\u8282\uff09\u3002\u76ee\u5f55\u7ed3\u6784\u7c7b\u4f3c\uff1a</p> Bash<pre><code>llama.cpp/zh-models/\n   - 7B/\n     - consolidated.00.pth\n     - params.json\n   - tokenizer.model\n</code></pre> <p>\u5c06\u4e0a\u8ff0<code>.pth</code>\u6a21\u578b\u6743\u91cd\u8f6c\u6362\u4e3aggml\u7684FP16\u683c\u5f0f\uff0c\u751f\u6210\u6587\u4ef6\u8def\u5f84\u4e3a<code>zh-models/7B/ggml-model-f16.bin</code>\u3002</p> Text Only<pre><code>python convert.py zh-models/7B/\n</code></pre> <p>\u8fdb\u4e00\u6b65\u5bf9FP16\u6a21\u578b\u8fdb\u884c4-bit\u91cf\u5316\uff0c\u751f\u6210\u91cf\u5316\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u4e3a<code>zh-models/7B/ggml-model-q4_0.bin</code>\u3002\u4e0d\u540c\u91cf\u5316\u65b9\u6cd5\u7684\u6027\u80fd\u5bf9\u6bd4\u89c1\u672c\u6587\u6700\u540e\u3002</p> Bash<pre><code>./quantize ./zh-models/7B/ggml-model-f16.bin ./zh-models/7B/ggml-model-q4_0.bin q4_0\n</code></pre>"},{"location":"llm/llama%E9%87%8F%E5%8C%96%E6%A8%A1%E5%9E%8B/#step-3","title":"Step 3: \u52a0\u8f7d\u5e76\u542f\u52a8\u6a21\u578b","text":"<p>\u8fd0\u884c<code>./main</code>\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c<code>-m</code>\u547d\u4ee4\u6307\u5b9aGGML\u683c\u5f0f\u6a21\u578b\u3002\u4ee5\u4e0b\u662f\u547d\u4ee4\u793a\u4f8b\uff08\u5e76\u975e\u6700\u4f18\u53c2\u6570\uff09\u3002</p> <p>\u5982\u5df2\u901a\u8fc7Metal\u7f16\u8bd1\uff0c\u5219\u53ea\u9700\u52a0\u4e0a<code>-ngl 1</code>\u5373\u53ef\u542f\u7528GPU\u63a8\u7406\u3002</p> Text Only<pre><code>./main -m zh-models/7B/ggml-model-q4_0.bin --color -f prompts/alpaca.txt -ins -c 2048 --temp 0.2 -n 256 --repeat_penalty 1.1\n</code></pre> <p>\u5728\u63d0\u793a\u7b26 <code>&gt;</code> \u4e4b\u540e\u8f93\u5165\u4f60\u7684prompt\uff0c<code>cmd/ctrl+c</code>\u4e2d\u65ad\u8f93\u51fa\uff0c\u591a\u884c\u4fe1\u606f\u4ee5<code>\\</code>\u4f5c\u4e3a\u884c\u5c3e\u3002\u5982\u9700\u67e5\u770b\u5e2e\u52a9\u548c\u53c2\u6570\u8bf4\u660e\uff0c\u8bf7\u6267\u884c<code>./main -h</code>\u547d\u4ee4\u3002\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e9b\u5e38\u7528\u7684\u53c2\u6570\uff1a</p> Text Only<pre><code>-c \u63a7\u5236\u4e0a\u4e0b\u6587\u7684\u957f\u5ea6\uff0c\u503c\u8d8a\u5927\u8d8a\u80fd\u53c2\u8003\u66f4\u957f\u7684\u5bf9\u8bdd\u5386\u53f2\uff08\u9ed8\u8ba4\uff1a512\uff09\n-ins \u542f\u52a8\u7c7bChatGPT\u5bf9\u8bdd\u4ea4\u6d41\u7684instruction\u8fd0\u884c\u6a21\u5f0f\n-f \u6307\u5b9aprompt\u6a21\u677f\uff0calpaca\u6a21\u578b\u8bf7\u52a0\u8f7dprompts/alpaca.txt\n-n \u63a7\u5236\u56de\u590d\u751f\u6210\u7684\u6700\u5927\u957f\u5ea6\uff08\u9ed8\u8ba4\uff1a128\uff09\n-b \u63a7\u5236batch size\uff08\u9ed8\u8ba4\uff1a8\uff09\uff0c\u53ef\u9002\u5f53\u589e\u52a0\n-t \u63a7\u5236\u7ebf\u7a0b\u6570\u91cf\uff08\u9ed8\u8ba4\uff1a4\uff09\uff0c\u53ef\u9002\u5f53\u589e\u52a0\n--repeat_penalty \u63a7\u5236\u751f\u6210\u56de\u590d\u4e2d\u5bf9\u91cd\u590d\u6587\u672c\u7684\u60e9\u7f5a\u529b\u5ea6\n--temp \u6e29\u5ea6\u7cfb\u6570\uff0c\u503c\u8d8a\u4f4e\u56de\u590d\u7684\u968f\u673a\u6027\u8d8a\u5c0f\uff0c\u53cd\u4e4b\u8d8a\u5927\n--top_p, top_k \u63a7\u5236\u89e3\u7801\u91c7\u6837\u7684\u76f8\u5173\u53c2\u6570\n</code></pre> <p>\u66f4\u8be6\u7ec6\u7684\u5b98\u65b9\u8bf4\u660e\u8bf7\u53c2\u8003\uff1ahttps://github.com/ggerganov/llama.cpp/tree/master/examples/main</p>"},{"location":"llm/llama%E9%87%8F%E5%8C%96%E6%A8%A1%E5%9E%8B/#_2","title":"\u5173\u4e8e\u91cf\u5316\u65b9\u6cd5\u9009\u62e9\u53ca\u63a8\u7406\u901f\u5ea6","text":"<p>\u4e0b\u8868\u7ed9\u51fa\u4e86\u4e0d\u540c\u91cf\u5316\u65b9\u6cd5\u7684\u76f8\u5173\u7edf\u8ba1\u6570\u636e\u4f9b\u53c2\u8003\u3002\u63a8\u7406\u6a21\u578b\u4e3a\u4e2d\u6587Alpaca-Plus-7B\u3001Alpaca-Plus-13B\uff0c\u6d4b\u8bd5\u8bbe\u5907\u4e3aM1 Max\u82af\u7247\uff088x\u6027\u80fd\u6838\u5fc3\uff0c2x\u80fd\u6548\u6838\u5fc3\uff09\uff0c\u5206\u522b\u6d4b\u8bd52/4/8\u7ebf\u7a0b\u901f\u5ea6\u4ee5\u6d4b\u7b97\u4f7f\u7528\u672c\u673a25%\u300150%\u3001100%\u8d44\u6e90\u4e0b\u7684\u901f\u5ea6\u4f9b\u53c2\u8003\u3002\u901f\u5ea6\u65b9\u9762\u62a5\u544a\u7684\u662f<code>eval time</code>\uff0c\u5373\u6a21\u578b\u56de\u590d\u751f\u6210\u7684\u901f\u5ea6\u3002\u66f4\u591a\u5173\u4e8e\u91cf\u5316\u53c2\u6570\u7684\u4ecb\u7ecd\u53ef\u53c2\u8003llama.cpp\u91cf\u5316\u7edf\u8ba1\u8868\u3002</p> <p>\u76f8\u5173\u7ed3\u8bba\uff1a</p> <ul> <li>\u9ed8\u8ba4\u7684\u91cf\u5316\u65b9\u6cd5\u4e3aq4_0\uff0c\u867d\u7136\u901f\u5ea6\u6700\u5feb\u4f46\u635f\u5931\u4e5f\u662f\u6700\u5927\u7684\uff0c\u5176\u4f59\u65b9\u6cd5\u5404\u6709\u5229\u5f0a\uff0c\u6309\u5b9e\u9645\u60c5\u51b5\u9009\u62e9</li> <li>\u9700\u8981\u6ce8\u610f\u7684\u662fF16\u4ee5\u53caq8_0\u5e76\u4e0d\u4f1a\u56e0\u4e3a\u589e\u52a0\u7ebf\u7a0b\u6570\u800c\u63d0\u9ad8\u592a\u591a\u901f\u5ea6</li> <li>\u7ebf\u7a0b\u6570<code>-t</code>\u4e0e\u7269\u7406\u6838\u5fc3\u6570\u4e00\u81f4\u65f6\u901f\u5ea6\u6700\u5feb\uff0c\u8d85\u8fc7\u4e4b\u540e\u901f\u5ea6\u53cd\u800c\u53d8\u6162\uff08M1 Max\u4e0a\u4ece8\u6539\u523010\u4e4b\u540e\u8017\u65f6\u53d8\u4e3a3\u500d\uff09</li> <li>\u5982\u679c\u4f7f\u7528\u4e86Metal\u7248\u672c\uff08\u5373\u542f\u7528\u4e86\u82f9\u679cGPU\u89e3\u7801\uff09\uff0c\u901f\u5ea6\u8fd8\u4f1a\u6709\u8fdb\u4e00\u6b65\u663e\u8457\u63d0\u5347\uff0c\u8868\u4e2d\u6807\u6ce8\u4e3a<code>-ngl 1</code>\uff0c\u76ee\u524d\u652f\u6301Q4_0\u3001Q4_K\u7cfb\u5217\u3001Q2_K\u3001Q6_K</li> <li>\u7efc\u5408\u63a8\u8350\uff08\u4ec5\u4f9b\u53c2\u8003\uff09\uff1a7B\u63a8\u8350Q5_1\u6216Q5_K_S\uff0c13B\u63a8\u8350Q5_0\u6216Q5_K_S</li> <li>\u673a\u5668\u8d44\u6e90\u591f\u7528\u4e14\u5bf9\u901f\u5ea6\u8981\u6c42\u4e0d\u662f\u90a3\u4e48\u82db\u523b\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4f7f\u7528q8_0\u6216Q6_K\uff0c\u63a5\u8fd1F16\u6a21\u578b\u7684\u6548\u679c</li> </ul>"},{"location":"llm/llama%E9%87%8F%E5%8C%96%E6%A8%A1%E5%9E%8B/#alpaca-plus-7b","title":"Alpaca-Plus-7B","text":"F16 Q2_K Q3_K_M Q4_0 Q4_1 Q4_K_S Q5_0 Q5_1 Q5_K_S Q6_K Q8_0 PPL 10.793 18.292 12.504 12.416 12.002 11.717 11.155 10.905 10.930 10.845 10.790 Size 13.77G 2.95G 3.37G 4.31G 5.17G 3.93G 4.74G 5.17G 4.76G 5.65G 7.75G ms/tok @ <code>-t 2</code> 144 87 88 143 157 103 ms/tok @ <code>-t 4</code> 123 50 52 75 82 72 ms/tok @ <code>-t 8</code> 126 48 52 41 49 45 46 49 52 58 69 ms/tok @ <code>-t 8 -ngl 1</code> x 29 x 28 x 32 x x x 32 x"},{"location":"llm/llama%E9%87%8F%E5%8C%96%E6%A8%A1%E5%9E%8B/#alpaca-plus-13b","title":"Alpaca-Plus-13B","text":"F16 Q2_K Q3_K_M Q4_0 Q4_1 Q4_K_S Q5_0 Q5_1 Q5_K_S Q6_K Q8_0 PPL 9.147 15.455 10.229 9.917 9.689 9.947 9.325 9.344 9.286 9.169 9.147 Size 26.4G 5.61G 6.43G 8.25G 9.9G 7.49G 9.08G 9.9G 9.11G 10.83G 14.85G ms/tok @ <code>-t 2</code> - 166 166 273 304 192 ms/tok @ <code>-t 4</code> - 89 94 142 155 132 ms/tok @ <code>-t 8</code> - 83 94 77 89 77 86 93 93 104 132 ms/tok @ <code>-t 8 -ngl 1</code> x 52 x 49 x 58 x x x 59 x"},{"location":"llm/llama%E9%87%8F%E5%8C%96%E6%A8%A1%E5%9E%8B/#alpaca-33b","title":"Alpaca-33B","text":"F16 Q2_K Q3_K_M Q4_0 Q4_1 Q4_K_S Q5_0 Q5_1 Q5_K_S Q6_K Q8_0 PPL 10.692 13.040 11.365 10.999 11.085 11.007 10.717 10.747 10.802 10.713 Size 61.03G 12.74G 14.65G 17.16G 19.07G 17.16G 20.98G 24.58G 20.98G 25.03G 32.42G ms/tok @ <code>-t 2</code> - 482 481 702 919 - ms/tok @ <code>-t 4</code> - 251 249 355 487 - ms/tok @ <code>-t 8</code> - 219 242 170 185 224 306 - <p>\u6ce8\u610f\u8fd9\u4e2a\u4e0d\u662fPlus\u7248\uff0c\u56e0\u6b64PPL\u4f1a\u76f8\u6bd4Plus-13B\u9ad8\u4e00\u4e9b\u3002</p>"},{"location":"llm/whisper/","title":"Whisper","text":"<p>openai whisper</p>"},{"location":"llm/whisper/#setup","title":"Setup","text":"<p>We used Python 3.9.9 and PyTorch 1.10.1 to train and test our models, but the codebase is expected to be compatible with Python 3.8-3.11 and recent PyTorch versions. The codebase also depends on a few Python packages, most notably OpenAI's tiktoken for their fast tokenizer implementation. You can download and install (or update to) the latest release of Whisper with the following command:</p> Text Only<pre><code>pip install -U openai-whisper\n</code></pre> <p>Alternatively, the following command will pull and install the latest commit from this repository, along with its Python dependencies:</p> Text Only<pre><code>pip install git+https://github.com/openai/whisper.git \n</code></pre> <p>To update the package to the latest version of this repository, please run:</p> Text Only<pre><code>pip install --upgrade --no-deps --force-reinstall git+https://github.com/openai/whisper.git\n</code></pre> <p>It also requires the command-line tool <code>ffmpeg</code> to be installed on your system, which is available from most package managers:</p> Bash<pre><code># on Ubuntu or Debian\nsudo apt update &amp;&amp; sudo apt install ffmpeg\n\n# on Arch Linux\nsudo pacman -S ffmpeg\n\n# on MacOS using Homebrew (https://brew.sh/)\nbrew install ffmpeg\n\n# on Windows using Chocolatey (https://chocolatey.org/)\nchoco install ffmpeg\n\n# on Windows using Scoop (https://scoop.sh/)\nscoop install ffmpeg\n</code></pre> <p>whisper api</p> Text Only<pre><code>def transcribe(\n    model: \"Whisper\",\n    audio: Union[str, np.ndarray, torch.Tensor],\n    *,\n    verbose: Optional[bool] = None,\n    temperature: Union[float, Tuple[float, ...]] = (0.0, 0.2, 0.4, 0.6, 0.8, 1.0),\n    compression_ratio_threshold: Optional[float] = 2.4,\n    logprob_threshold: Optional[float] = -1.0,\n    no_speech_threshold: Optional[float] = 0.6,\n    condition_on_previous_text: bool = True,\n    initial_prompt: Optional[str] = None,\n    word_timestamps: bool = False,\n    prepend_punctuations: str = \"\\\"'\u201c\u00bf([{-\",\n    append_punctuations: str = \"\\\"'.\u3002,\uff0c!\uff01?\uff1f:\uff1a\u201d)]}\u3001\",\n    **decode_options,\n): \n   \"\"\"\n    Transcribe an audio file using Whisper\n\n    Parameters\n    ----------\n    model: Whisper\n        The Whisper model instance\n\n    audio: Union[str, np.ndarray, torch.Tensor]\n        The path to the audio file to open, or the audio waveform\n\n    verbose: bool\n        Whether to display the text being decoded to the console. If True, displays all the details,\n        If False, displays minimal details. If None, does not display anything\n\n    temperature: Union[float, Tuple[float, ...]]\n        Temperature for sampling. It can be a tuple of temperatures, which will be successively used\n        upon failures according to either `compression_ratio_threshold` or `logprob_threshold`.\n\n    compression_ratio_threshold: float\n        If the gzip compression ratio is above this value, treat as failed\n\n    logprob_threshold: float\n        If the average log probability over sampled tokens is below this value, treat as failed\n\n    no_speech_threshold: float\n        If the no_speech probability is higher than this value AND the average log probability\n        over sampled tokens is below `logprob_threshold`, consider the segment as silent\n\n    condition_on_previous_text: bool\n        if True, the previous output of the model is provided as a prompt for the next window;\n        disabling may make the text inconsistent across windows, but the model becomes less prone to\n        getting stuck in a failure loop, such as repetition looping or timestamps going out of sync.\n\n    word_timestamps: bool\n        Extract word-level timestamps using the cross-attention pattern and dynamic time warping,\n        and include the timestamps for each word in each segment.\n\n    prepend_punctuations: str\n        If word_timestamps is True, merge these punctuation symbols with the next word\n\n    append_punctuations: str\n        If word_timestamps is True, merge these punctuation symbols with the previous word\n\n    initial_prompt: Optional[str]\n        Optional text to provide as a prompt for the first window. This can be used to provide, or\n        \"prompt-engineer\" a context for transcription, e.g. custom vocabularies or proper nouns\n        to make it more likely to predict those word correctly.\n\n    decode_options: dict\n        Keyword arguments to construct `DecodingOptions` instances\n\n    Returns\n    -------\n    A dictionary containing the resulting text (\"text\") and segment-level details (\"segments\"), and\n    the spoken language (\"language\"), which is detected when `decode_options[\"language\"]` is None.\n    \"\"\"\n\nmodel\uff1aWhisper\nWhisper\u6a21\u578b\u5b9e\u4f8b\n\naudio\uff1aUnion[str\uff0cnp.ndarray\uff0ctorch.Tensor]\n\u8981\u6253\u5f00\u7684\u97f3\u9891\u6587\u4ef6\u7684\u8def\u5f84\u6216\u97f3\u9891\u6ce2\u5f62\n\nverbose\uff1abool\n\u662f\u5426\u5728\u63a7\u5236\u53f0\u4e0a\u663e\u793a\u89e3\u7801\u7684\u6587\u672c\u3002\u5982\u679c\u4e3aTrue\uff0c\u5219\u663e\u793a\u6240\u6709\u7ec6\u8282\uff0c\n\u5982\u679c\u4e3aFalse\uff0c\u5219\u663e\u793a\u6700\u5c11\u7684\u7ec6\u8282\u3002\u5982\u679c\u4e3aNone\uff0c\u5219\u4e0d\u663e\u793a\u4efb\u4f55\u5185\u5bb9\n\ntemperature\uff1aUnion[float\uff0cTuple[float\uff0c...]]\n\u91c7\u6837\u7684\u6e29\u5ea6\u3002\u5b83\u53ef\u4ee5\u662f\u6e29\u5ea6\u5143\u7ec4\uff0c\u8fd9\u4e9b\u5143\u7ec4\u5c06\u6839\u636ecompression_ratio_threshold\u6216logprob_threshold\u7684\u5931\u8d25\u60c5\u51b5\u4f9d\u6b21\u4f7f\u7528\u3002\n\ncompression_ratio_threshold\uff1afloat\n\u5982\u679cgzip\u538b\u7f29\u6bd4\u8d85\u8fc7\u6b64\u503c\uff0c\u5219\u89c6\u4e3a\u5931\u8d25\n\nlogprob_threshold\uff1afloat\n\u5982\u679c\u6837\u672c\u6807\u8bb0\u7684\u5e73\u5747\u5bf9\u6570\u6982\u7387\u4f4e\u4e8e\u6b64\u503c\uff0c\u5219\u89c6\u4e3a\u5931\u8d25\n\nno_speech_threshold\uff1afloat\n\u5982\u679c\u65e0\u8bed\u97f3\u6982\u7387\u9ad8\u4e8e\u6b64\u503c\uff0c\u5e76\u4e14\u6837\u672c\u6807\u8bb0\u7684\u5e73\u5747\u5bf9\u6570\u6982\u7387\u4f4e\u4e8elogprob_threshold\uff0c\u5219\u5c06\u8be5\u6bb5\u89c6\u4e3a\u65e0\u58f0\u3002\n\ncondition_on_previous_text\uff1abool\n\u5982\u679c\u4e3aTrue\uff0c\u5219\u5c06\u6a21\u578b\u7684\u5148\u524d\u8f93\u51fa\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u7a97\u53e3\u7684\u63d0\u793a\uff1b\u7981\u7528\u53ef\u80fd\u4f1a\u4f7f\u6587\u672c\u5728\u7a97\u53e3\u4e4b\u95f4\u4e0d\u4e00\u81f4\uff0c\u4f46\u6a21\u578b\u53d8\u5f97\u4e0d\u592a\u5bb9\u6613\u9677\u5165\u5931\u8d25\u5faa\u73af\uff0c\u4f8b\u5982\u91cd\u590d\u5faa\u73af\u6216\u65f6\u95f4\u6233\u5931\u53bb\u540c\u6b65\u3002\n\nword_timestamps\uff1abool\n\u4f7f\u7528\u4ea4\u53c9\u6ce8\u610f\u529b\u6a21\u5f0f\u548c\u52a8\u6001\u65f6\u95f4\u626d\u66f2\u63d0\u53d6\u5355\u8bcd\u7ea7\u65f6\u95f4\u6233\uff0c\u5e76\u5728\u6bcf\u4e2a\u6bb5\u4e2d\u5305\u542b\u6bcf\u4e2a\u5355\u8bcd\u7684\u65f6\u95f4\u6233\u3002\n\nprepend_punctuations\uff1astr\n\u5982\u679cword_timestamps\u4e3aTrue\uff0c\u5219\u5c06\u8fd9\u4e9b\u6807\u70b9\u7b26\u53f7\u4e0e\u4e0b\u4e00\u4e2a\u5355\u8bcd\u5408\u5e76\n\nappend_punctuations\uff1astr\n\u5982\u679cword_timestamps\u4e3aTrue\uff0c\u5219\u5c06\u8fd9\u4e9b\u6807\u70b9\u7b26\u53f7\u4e0e\u524d\u4e00\u4e2a\u5355\u8bcd\u5408\u5e76\n\ninitial_prompt\uff1aOptional[str]\n\u53ef\u9009\u7684\u6587\u672c\uff0c\u7528\u4e8e\u4e3a\u7b2c\u4e00\u4e2a\u7a97\u53e3\u63d0\u4f9b\u63d0\u793a\u3002\u8fd9\u53ef\u4ee5\u7528\u4e8e\u63d0\u4f9b\u6216\u201c\u63d0\u793a\u5de5\u7a0b\u201d\u8f6c\u5f55\u7684\u4e0a\u4e0b\u6587\uff0c\u4f8b\u5982\u81ea\u5b9a\u4e49\u8bcd\u6c47\u6216\u4e13\u6709\u540d\u8bcd\uff0c\u4ee5\u4f7f\u66f4\u5bb9\u6613\u6b63\u786e\u9884\u6d4b\u8fd9\u4e9b\u5355\u8bcd\u3002\n\ndecode_options\uff1adict\n\u7528\u4e8e\u6784\u5efaDecodingOptions\u5b9e\u4f8b\u7684\u5173\u952e\u5b57\u53c2\u6570\n\n\u8fd4\u56de\n\n\u5305\u542b\u7ed3\u679c\u6587\u672c\uff08\u201ctext\u201d\uff09\u548c\u6bb5\u843d\u7ea7\u522b\u7ec6\u8282\uff08\u201csegments\u201d\uff09\u4ee5\u53ca\u68c0\u6d4b\u5230\u7684\u53e3\u8bed\u8bed\u8a00\uff08\u201clanguage\u201d\uff09\u7684\u5b57\u5178\uff0c\u5f53decode_options [\u201clanguage\u201d]\u4e3aNone\u65f6\u3002\n\"\"\"\n</code></pre>"},{"location":"tools/python%E5%AF%BC%E5%87%BA%E5%BD%93%E5%89%8D%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E4%BE%9D%E8%B5%96/","title":"\u5bfc\u51fapython\u5f53\u524d\u9879\u76ee\u6240\u9700\u4f9d\u8d56\u6e05\u5355requirements.txt","text":"<p>\u56e0\u4f7f\u7528 pip freeze &gt; requirements.txt \u4f1a\u5bfc\u51fa\u5927\u91cf\u4e0e\u8be5\u9879\u76ee\u65e0\u5173\u7684\u4f9d\u8d56\u3002</p> <p>\u5982\u679c\u6211\u4eec\u53ea\u9700\u5bfc\u51fa\u5f53\u524d\u9879\u76ee\u6240\u9700\u7684\u4f9d\u8d56\u5305\uff0c\u8fd8\u53ef\u4ee5\u91c7\u7528\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f\uff0c\u4f7f\u7528\u5de5\u5177\uff1apipreqs</p>"},{"location":"tools/python%E5%AF%BC%E5%87%BA%E5%BD%93%E5%89%8D%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E4%BE%9D%E8%B5%96/#pipreqs","title":"\u4e00\u3001\u5b89\u88c5pipreqs","text":"Bash<pre><code>pip install pipreqs\n</code></pre>"},{"location":"tools/python%E5%AF%BC%E5%87%BA%E5%BD%93%E5%89%8D%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E4%BE%9D%E8%B5%96/#_1","title":"\u4e8c\u3001\u5bfc\u51fa\u4f9d\u8d56","text":"Bash<pre><code>pipreqs ./ --encoding=utf8\n</code></pre>"}]}